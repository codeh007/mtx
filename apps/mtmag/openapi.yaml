openapi: 3.1.0
externalDocs:
  description: Find out more about Users API
  url: https://www.example.com
servers:
  - url: http://localhost:6111/
    description: Development server
x-speakeasy-retries:
  strategy: backoff
  backoff:
    initialInterval: 500
    maxInterval: 60000
    maxElapsedTime: 3600000
    exponent: 1.5
  statusCodes:
    - 5XX
  retryConnectionErrors: true
tags:
  - name: Users
    description: Users operations
    externalDocs:
      description: Find more info here
      url: https://example.com
info:
  version: 0.0.1
  title: Users API
components:
  schemas:
    UserSelect:
      type: object
      properties:
        id:
          type: string
          example: '123'
        name:
          type: string
          example: John Doe
        age:
          type: number
          example: 42
      required:
        - id
        - name
        - age
    createMessageObject:
      type: object
      properties:
        message:
          type: string
      required:
        - message
      example:
        message: Not Found
    createError:
      type: object
      properties:
        issues:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
        name:
          type: string
      required:
        - issues
        - name
    UserInsert:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        age:
          type: number
          example: 42
      required:
        - name
        - age
    idParams:
      type: string
      minLength: 3
      example: '423'
    PlateformAccountInsert:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        age:
          type: number
          example: 42
      required:
        - name
        - age
  parameters: {}
paths:
  /api/users:
    get:
      operationId: getUsers
      tags: &ref_0
        - Users
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 300
          maxInterval: 40000
          maxElapsedTime: 3000000
          exponent: 1.2
        statusCodes:
          - 5XX
        retryConnectionErrors: true
      responses:
        '200':
          description: The list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSelect'
    post:
      operationId: createUser
      tags: *ref_0
      requestBody:
        description: The user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInsert'
      responses:
        '200':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSelect'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createMessageObject'
        '422':
          description: The validation error(s)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    $ref: '#/components/schemas/createError'
                required:
                  - success
                  - error
  /api/users/{id}:
    get:
      operationId: getUser
      tags: *ref_0
      parameters:
        - schema:
            $ref: '#/components/schemas/idParams'
          required: true
          name: id
          in: path
      responses:
        '200':
          description: The requested user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSelect'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createMessageObject'
        '422':
          description: Invalid id error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    $ref: '#/components/schemas/createError'
                required:
                  - success
                  - error
  /api/plateform_account:
    get:
      operationId: listPlateformAccount
      tags: &ref_1
        - PlateformAccount
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 300
          maxInterval: 40000
          maxElapsedTime: 3000000
          exponent: 1.2
        statusCodes:
          - 5XX
        retryConnectionErrors: true
      responses:
        '200':
          description: The list of plateform accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSelect'
    post:
      operationId: createPlateformAccount
      tags: *ref_1
      requestBody:
        description: The plateform account to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlateformAccountInsert'
      responses:
        '200':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSelect'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createMessageObject'
        '422':
          description: The validation error(s)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    $ref: '#/components/schemas/createError'
                required:
                  - success
                  - error
  /api/plateform_account/{id}:
    get:
      operationId: getPlateformAccount
      tags: *ref_1
      parameters:
        - schema:
            $ref: '#/components/schemas/idParams'
          required: true
          name: id
          in: path
      responses:
        '200':
          description: The requested user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSelect'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createMessageObject'
        '422':
          description: Invalid id error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    $ref: '#/components/schemas/createError'
                required:
                  - success
                  - error
webhooks: {}
