/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as IndexImport } from './routes/~index'

// Create Virtual Routes

const AuthRouteLazyImport = createFileRoute('/auth')()
const AuthSessionRouteLazyImport = createFileRoute('/auth/session')()
const AuthLoginIndexLazyImport = createFileRoute('/auth/login/')()

// Create/Update Routes

const AuthRouteLazyRoute = AuthRouteLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~auth/~route.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSessionRouteLazyRoute = AuthSessionRouteLazyImport.update({
  id: '/session',
  path: '/session',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~session/~route.lazy').then((d) => d.Route),
)

const AuthLoginIndexLazyRoute = AuthLoginIndexLazyImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~login/~index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/session': {
      id: '/auth/session'
      path: '/session'
      fullPath: '/auth/session'
      preLoaderRoute: typeof AuthSessionRouteLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
  }
}

// Create and export the route tree

interface AuthRouteLazyRouteChildren {
  AuthSessionRouteLazyRoute: typeof AuthSessionRouteLazyRoute
  AuthLoginIndexLazyRoute: typeof AuthLoginIndexLazyRoute
}

const AuthRouteLazyRouteChildren: AuthRouteLazyRouteChildren = {
  AuthSessionRouteLazyRoute: AuthSessionRouteLazyRoute,
  AuthLoginIndexLazyRoute: AuthLoginIndexLazyRoute,
}

const AuthRouteLazyRouteWithChildren = AuthRouteLazyRoute._addFileChildren(
  AuthRouteLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/auth/session': typeof AuthSessionRouteLazyRoute
  '/auth/login': typeof AuthLoginIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/auth/session': typeof AuthSessionRouteLazyRoute
  '/auth/login': typeof AuthLoginIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/auth/session': typeof AuthSessionRouteLazyRoute
  '/auth/login/': typeof AuthLoginIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/auth/session' | '/auth/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/auth/session' | '/auth/login'
  id: '__root__' | '/' | '/auth' | '/auth/session' | '/auth/login/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteLazyRoute: typeof AuthRouteLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteLazyRoute: AuthRouteLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/auth"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/auth": {
      "filePath": "~auth/~route.lazy.tsx",
      "children": [
        "/auth/session",
        "/auth/login/"
      ]
    },
    "/auth/session": {
      "filePath": "~auth/~session/~route.lazy.tsx",
      "parent": "/auth"
    },
    "/auth/login/": {
      "filePath": "~auth/~login/~index.lazy.tsx",
      "parent": "/auth"
    }
  }
}
ROUTE_MANIFEST_END */
