/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as IndexImport } from './routes/~index'
import { Route as EnvsCreateImport } from './routes/~envs/~create'
import { Route as BundlerTest111Import } from './routes/~bundler/~test111'
import { Route as SiteIndexImport } from './routes/~site/~index'
import { Route as SiteSiteIdHostRouteImport } from './routes/~site/~$siteId/~host/~route'
import { Route as SiteSiteIdHostIndexImport } from './routes/~site/~$siteId/~host/~index'

// Create Virtual Routes

const WorkflowsRouteLazyImport = createFileRoute('/workflows')()
const WorkflowRunsRouteLazyImport = createFileRoute('/workflow-runs')()
const TkRouteLazyImport = createFileRoute('/tk')()
const TenantRouteLazyImport = createFileRoute('/tenant')()
const SiteRouteLazyImport = createFileRoute('/site')()
const ScheduledRunsRouteLazyImport = createFileRoute('/scheduled-runs')()
const ResourceRouteLazyImport = createFileRoute('/resource')()
const RecurringRouteLazyImport = createFileRoute('/recurring')()
const ProxyRouteLazyImport = createFileRoute('/proxy')()
const PlatformAccountRouteLazyImport = createFileRoute('/platform-account')()
const MttaskRouteLazyImport = createFileRoute('/mttask')()
const EventsRouteLazyImport = createFileRoute('/events')()
const EnvsRouteLazyImport = createFileRoute('/envs')()
const ChatRouteLazyImport = createFileRoute('/chat')()
const BundlerRouteLazyImport = createFileRoute('/bundler')()
const BrowserRouteLazyImport = createFileRoute('/browser')()
const AutomateRouteLazyImport = createFileRoute('/automate')()
const AuthRouteLazyImport = createFileRoute('/auth')()
const AgentsRouteLazyImport = createFileRoute('/agents')()
const WorkflowsWorkflowIdRouteLazyImport = createFileRoute(
  '/workflows/$workflowId',
)()
const WorkflowRunsWorkflowRunIdRouteLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId',
)()
const TenantSettingsRouteLazyImport = createFileRoute('/tenant/settings')()
const ResourceNewRouteLazyImport = createFileRoute('/resource/new')()
const ResourceResIdRouteLazyImport = createFileRoute('/resource/$resId')()
const ProxyNewRouteLazyImport = createFileRoute('/proxy/new')()
const ProxyProxyIdRouteLazyImport = createFileRoute('/proxy/$proxyId')()
const PlatformAccountNewRouteLazyImport = createFileRoute(
  '/platform-account/new',
)()
const PlatformAccountPlatformAccountIdRouteLazyImport = createFileRoute(
  '/platform-account/$platformAccountId',
)()
const AuthRegisterLazyImport = createFileRoute('/auth/register')()
const AuthLoginRouteLazyImport = createFileRoute('/auth/login')()
const AdkSessionRouteLazyImport = createFileRoute('/adk/session')()
const WorkflowsIndexLazyImport = createFileRoute('/workflows/')()
const WorkflowRunsIndexLazyImport = createFileRoute('/workflow-runs/')()
const TkIndexLazyImport = createFileRoute('/tk/')()
const TenantIndexLazyImport = createFileRoute('/tenant/')()
const ScheduledRunsIndexLazyImport = createFileRoute('/scheduled-runs/')()
const ResourceIndexLazyImport = createFileRoute('/resource/')()
const RecurringIndexLazyImport = createFileRoute('/recurring/')()
const ProxyIndexLazyImport = createFileRoute('/proxy/')()
const PlatformAccountIndexLazyImport = createFileRoute('/platform-account/')()
const MttaskIndexLazyImport = createFileRoute('/mttask/')()
const EventsIndexLazyImport = createFileRoute('/events/')()
const EnvsIndexLazyImport = createFileRoute('/envs/')()
const ChatIndexLazyImport = createFileRoute('/chat/')()
const BrowserIndexLazyImport = createFileRoute('/browser/')()
const AutomateIndexLazyImport = createFileRoute('/automate/')()
const AgentsIndexLazyImport = createFileRoute('/agents/')()
const WorkflowsWorkflowIdTriggerRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger',
)()
const WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/visualization',
)()
const WorkflowRunsWorkflowRunIdSummaryLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/summary',
)()
const WorkflowRunsWorkflowRunIdInputLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/input',
)()
const WorkflowRunsWorkflowRunIdChatRouteLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/chat',
)()
const WorkflowRunsWorkflowRunIdAdditionalMetadataLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/additional-metadata',
)()
const TenantSettingsNewRouteLazyImport = createFileRoute(
  '/tenant/settings/new',
)()
const TenantSettingsTenantSettingIdRouteLazyImport = createFileRoute(
  '/tenant/settings/$tenantSettingId',
)()
const ResourceNewResRouteLazyImport = createFileRoute('/resource/new/res')()
const ResourceResIdPlatformaccountRouteLazyImport = createFileRoute(
  '/resource/$resId/platform_account',
)()
const ProxyProxyIdActionsRouteLazyImport = createFileRoute(
  '/proxy/$proxyId/actions',
)()
const PlatformAccountPlatformAccountIdActionsRouteLazyImport = createFileRoute(
  '/platform-account/$platformAccountId/actions',
)()
const AgentsAgentSessionIdRouteLazyImport = createFileRoute(
  '/agents/$agent/$sessionId',
)()
const AdkSessionSessionIdRouteLazyImport = createFileRoute(
  '/adk/session/$sessionId',
)()
const WorkflowsWorkflowIdIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/',
)()
const WorkflowRunsWorkflowRunIdIndexLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/',
)()
const TenantSettingsIndexLazyImport = createFileRoute('/tenant/settings/')()
const ResourceResIdIndexLazyImport = createFileRoute('/resource/$resId/')()
const ProxyProxyIdIndexLazyImport = createFileRoute('/proxy/$proxyId/')()
const PlatformAccountNewIndexLazyImport = createFileRoute(
  '/platform-account/new/',
)()
const PlatformAccountPlatformAccountIdIndexLazyImport = createFileRoute(
  '/platform-account/$platformAccountId/',
)()
const ChatSessionIdIndexLazyImport = createFileRoute('/chat/$sessionId/')()
const AuthLoginIndexLazyImport = createFileRoute('/auth/login/')()
const AdkSessionIndexLazyImport = createFileRoute('/adk/session/')()
const WorkflowsWorkflowIdTriggerTestteamRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/test_team',
)()
const WorkflowsWorkflowIdTriggerTenantRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/tenant',
)()
const WorkflowsWorkflowIdTriggerTeamRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/team',
)()
const WorkflowsWorkflowIdTriggerSmolaRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/smola',
)()
const WorkflowsWorkflowIdTriggerResearchRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/research',
)()
const WorkflowsWorkflowIdTriggerModelRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/model',
)()
const WorkflowsWorkflowIdTriggerComRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/com',
)()
const WorkflowsWorkflowIdTriggerBrowserRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/browser',
)()
const WorkflowsWorkflowIdTriggerAgRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/ag',
)()
const WorkflowsWorkflowIdTriggerSplatLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/$',
)()
const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport =
  createFileRoute('/workflow-runs/$workflowRunId/stepRun/$stepRunId')()
const TenantSettingsTenantSettingIdModelsettingsRouteLazyImport =
  createFileRoute('/tenant/settings/$tenantSettingId/model_settings')()
const ResourceNewResPlatformaccountLazyImport = createFileRoute(
  '/resource/new/res/platform_account',
)()
const ResourceNewResChatLazyImport = createFileRoute('/resource/new/res/chat')()
const ResourceNewResBrowserLazyImport = createFileRoute(
  '/resource/new/res/browser',
)()
const ComsComIdTeambuilderv2InstagramteamRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builderv2/instagram_team',
)()
const AgentsAgentSessionIdStateRouteLazyImport = createFileRoute(
  '/agents/$agent/$sessionId/state',
)()
const AgentsAgentSessionIdConfigRouteLazyImport = createFileRoute(
  '/agents/$agent/$sessionId/config',
)()
const AgentsAgentSessionIdActionsRouteLazyImport = createFileRoute(
  '/agents/$agent/$sessionId/actions',
)()
const WorkflowsWorkflowIdTriggerIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/',
)()
const WorkflowRunsWorkflowRunIdVisualizationIndexLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/visualization/',
)()
const WorkflowRunsWorkflowRunIdChatIndexLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/chat/',
)()
const TenantSettingsNewIndexLazyImport = createFileRoute(
  '/tenant/settings/new/',
)()
const TenantSettingsTenantSettingIdIndexLazyImport = createFileRoute(
  '/tenant/settings/$tenantSettingId/',
)()
const ResourceNewResIndexLazyImport = createFileRoute('/resource/new/res/')()
const ResourceResIdPlatformaccountIndexLazyImport = createFileRoute(
  '/resource/$resId/platform_account/',
)()
const ProxyProxyIdActionsIndexLazyImport = createFileRoute(
  '/proxy/$proxyId/actions/',
)()
const PlatformAccountPlatformAccountIdActionsIndexLazyImport = createFileRoute(
  '/platform-account/$platformAccountId/actions/',
)()
const AgentsAgentSessionIdIndexLazyImport = createFileRoute(
  '/agents/$agent/$sessionId/',
)()
const AdkSessionSessionIdIndexLazyImport = createFileRoute(
  '/adk/session/$sessionId/',
)()
const WorkflowsWorkflowIdTriggerTestteamIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/test_team/',
)()
const WorkflowsWorkflowIdTriggerTenantIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/tenant/',
)()
const WorkflowsWorkflowIdTriggerTeamIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/team/',
)()
const WorkflowsWorkflowIdTriggerSmolaIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/smola/',
)()
const WorkflowsWorkflowIdTriggerResearchIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/research/',
)()
const WorkflowsWorkflowIdTriggerModelIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/model/',
)()
const WorkflowsWorkflowIdTriggerComIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/com/',
)()
const WorkflowsWorkflowIdTriggerBrowserIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/browser/',
)()
const WorkflowsWorkflowIdTriggerAgIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/ag/',
)()
const WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyImport =
  createFileRoute('/workflow-runs/$workflowRunId/stepRun/$stepRunId/')()
const TenantSettingsTenantSettingIdModelsettingsIndexLazyImport =
  createFileRoute('/tenant/settings/$tenantSettingId/model_settings/')()
const ComsComIdTeambuilderv2InstagramteamIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builderv2/instagram_team/',
)()
const AgentsAgentSessionIdStateIndexLazyImport = createFileRoute(
  '/agents/$agent/$sessionId/state/',
)()
const AgentsAgentSessionIdConfigIndexLazyImport = createFileRoute(
  '/agents/$agent/$sessionId/config/',
)()
const AgentsAgentSessionIdActionsIndexLazyImport = createFileRoute(
  '/agents/$agent/$sessionId/actions/',
)()
const ComsComIdTeambuilderAgentAgentIdModelRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/$agentId/model',
)()
const ComsComIdTeambuilderAgentAgentIdModelIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/$agentId/model/',
)()

// Create/Update Routes

const WorkflowsRouteLazyRoute = WorkflowsRouteLazyImport.update({
  id: '/workflows',
  path: '/workflows',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~workflows/~route.lazy').then((d) => d.Route),
)

const WorkflowRunsRouteLazyRoute = WorkflowRunsRouteLazyImport.update({
  id: '/workflow-runs',
  path: '/workflow-runs',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~workflow-runs/~route.lazy').then((d) => d.Route),
)

const TkRouteLazyRoute = TkRouteLazyImport.update({
  id: '/tk',
  path: '/tk',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~tk/~route.lazy').then((d) => d.Route))

const TenantRouteLazyRoute = TenantRouteLazyImport.update({
  id: '/tenant',
  path: '/tenant',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~tenant/~route.lazy').then((d) => d.Route),
)

const SiteRouteLazyRoute = SiteRouteLazyImport.update({
  id: '/site',
  path: '/site',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~site/~route.lazy').then((d) => d.Route))

const ScheduledRunsRouteLazyRoute = ScheduledRunsRouteLazyImport.update({
  id: '/scheduled-runs',
  path: '/scheduled-runs',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~scheduled-runs/~route.lazy').then((d) => d.Route),
)

const ResourceRouteLazyRoute = ResourceRouteLazyImport.update({
  id: '/resource',
  path: '/resource',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~resource/~route.lazy').then((d) => d.Route),
)

const RecurringRouteLazyRoute = RecurringRouteLazyImport.update({
  id: '/recurring',
  path: '/recurring',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~recurring/~route.lazy').then((d) => d.Route),
)

const ProxyRouteLazyRoute = ProxyRouteLazyImport.update({
  id: '/proxy',
  path: '/proxy',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~proxy/~route.lazy').then((d) => d.Route))

const PlatformAccountRouteLazyRoute = PlatformAccountRouteLazyImport.update({
  id: '/platform-account',
  path: '/platform-account',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~platform-account/~route.lazy').then((d) => d.Route),
)

const MttaskRouteLazyRoute = MttaskRouteLazyImport.update({
  id: '/mttask',
  path: '/mttask',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~mttask/~route.lazy').then((d) => d.Route),
)

const EventsRouteLazyRoute = EventsRouteLazyImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~events/~route.lazy').then((d) => d.Route),
)

const EnvsRouteLazyRoute = EnvsRouteLazyImport.update({
  id: '/envs',
  path: '/envs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~envs/~route.lazy').then((d) => d.Route))

const ChatRouteLazyRoute = ChatRouteLazyImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~chat/~route.lazy').then((d) => d.Route))

const BundlerRouteLazyRoute = BundlerRouteLazyImport.update({
  id: '/bundler',
  path: '/bundler',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~bundler/~route.lazy').then((d) => d.Route),
)

const BrowserRouteLazyRoute = BrowserRouteLazyImport.update({
  id: '/browser',
  path: '/browser',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~browser/~route.lazy').then((d) => d.Route),
)

const AutomateRouteLazyRoute = AutomateRouteLazyImport.update({
  id: '/automate',
  path: '/automate',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~automate/~route.lazy').then((d) => d.Route),
)

const AuthRouteLazyRoute = AuthRouteLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~auth/~route.lazy').then((d) => d.Route))

const AgentsRouteLazyRoute = AgentsRouteLazyImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~agents/~route.lazy').then((d) => d.Route),
)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowsWorkflowIdRouteLazyRoute =
  WorkflowsWorkflowIdRouteLazyImport.update({
    id: '/$workflowId',
    path: '/$workflowId',
    getParentRoute: () => WorkflowsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~route.lazy').then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdRouteLazyRoute =
  WorkflowRunsWorkflowRunIdRouteLazyImport.update({
    id: '/$workflowRunId',
    path: '/$workflowRunId',
    getParentRoute: () => WorkflowRunsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const TenantSettingsRouteLazyRoute = TenantSettingsRouteLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => TenantRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~tenant/~settings/~route.lazy').then((d) => d.Route),
)

const ResourceNewRouteLazyRoute = ResourceNewRouteLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ResourceRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~route.lazy').then((d) => d.Route),
)

const ResourceResIdRouteLazyRoute = ResourceResIdRouteLazyImport.update({
  id: '/$resId',
  path: '/$resId',
  getParentRoute: () => ResourceRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~$resId/~route.lazy').then((d) => d.Route),
)

const ProxyNewRouteLazyRoute = ProxyNewRouteLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ProxyRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~proxy/~new/~route.lazy').then((d) => d.Route),
)

const ProxyProxyIdRouteLazyRoute = ProxyProxyIdRouteLazyImport.update({
  id: '/$proxyId',
  path: '/$proxyId',
  getParentRoute: () => ProxyRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~proxy/~$proxyId/~route.lazy').then((d) => d.Route),
)

const PlatformAccountNewRouteLazyRoute =
  PlatformAccountNewRouteLazyImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => PlatformAccountRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~new/~route.lazy').then((d) => d.Route),
  )

const PlatformAccountPlatformAccountIdRouteLazyRoute =
  PlatformAccountPlatformAccountIdRouteLazyImport.update({
    id: '/$platformAccountId',
    path: '/$platformAccountId',
    getParentRoute: () => PlatformAccountRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~$platformAccountId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~register.lazy').then((d) => d.Route),
)

const AuthLoginRouteLazyRoute = AuthLoginRouteLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~login/~route.lazy').then((d) => d.Route),
)

const AdkSessionRouteLazyRoute = AdkSessionRouteLazyImport.update({
  id: '/adk/session',
  path: '/adk/session',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~adk/~session/~route.lazy').then((d) => d.Route),
)

const WorkflowsIndexLazyRoute = WorkflowsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkflowsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~workflows/~index.lazy').then((d) => d.Route),
)

const WorkflowRunsIndexLazyRoute = WorkflowRunsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkflowRunsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~workflow-runs/~index.lazy').then((d) => d.Route),
)

const TkIndexLazyRoute = TkIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TkRouteLazyRoute,
} as any).lazy(() => import('./routes/~tk/~index.lazy').then((d) => d.Route))

const TenantIndexLazyRoute = TenantIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TenantRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~tenant/~index.lazy').then((d) => d.Route),
)

const ScheduledRunsIndexLazyRoute = ScheduledRunsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ScheduledRunsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~scheduled-runs/~index.lazy').then((d) => d.Route),
)

const ResourceIndexLazyRoute = ResourceIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourceRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~index.lazy').then((d) => d.Route),
)

const RecurringIndexLazyRoute = RecurringIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RecurringRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~recurring/~index.lazy').then((d) => d.Route),
)

const ProxyIndexLazyRoute = ProxyIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProxyRouteLazyRoute,
} as any).lazy(() => import('./routes/~proxy/~index.lazy').then((d) => d.Route))

const PlatformAccountIndexLazyRoute = PlatformAccountIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlatformAccountRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~platform-account/~index.lazy').then((d) => d.Route),
)

const MttaskIndexLazyRoute = MttaskIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MttaskRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~mttask/~index.lazy').then((d) => d.Route),
)

const EventsIndexLazyRoute = EventsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EventsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~events/~index.lazy').then((d) => d.Route),
)

const EnvsIndexLazyRoute = EnvsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EnvsRouteLazyRoute,
} as any).lazy(() => import('./routes/~envs/~index.lazy').then((d) => d.Route))

const ChatIndexLazyRoute = ChatIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRouteLazyRoute,
} as any).lazy(() => import('./routes/~chat/~index.lazy').then((d) => d.Route))

const BrowserIndexLazyRoute = BrowserIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BrowserRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~browser/~index.lazy').then((d) => d.Route),
)

const AutomateIndexLazyRoute = AutomateIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AutomateRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~automate/~index.lazy').then((d) => d.Route),
)

const AgentsIndexLazyRoute = AgentsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AgentsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~agents/~index.lazy').then((d) => d.Route),
)

const EnvsCreateRoute = EnvsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => EnvsRouteLazyRoute,
} as any)

const BundlerTest111Route = BundlerTest111Import.update({
  id: '/test111',
  path: '/test111',
  getParentRoute: () => BundlerRouteLazyRoute,
} as any)

const SiteIndexRoute = SiteIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const WorkflowsWorkflowIdTriggerRouteLazyRoute =
  WorkflowsWorkflowIdTriggerRouteLazyImport.update({
    id: '/trigger',
    path: '/trigger',
    getParentRoute: () => WorkflowsWorkflowIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute =
  WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport.update({
    id: '/visualization',
    path: '/visualization',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~visualization/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdSummaryLazyRoute =
  WorkflowRunsWorkflowRunIdSummaryLazyImport.update({
    id: '/summary',
    path: '/summary',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~summary.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdInputLazyRoute =
  WorkflowRunsWorkflowRunIdInputLazyImport.update({
    id: '/input',
    path: '/input',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~input.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdChatRouteLazyRoute =
  WorkflowRunsWorkflowRunIdChatRouteLazyImport.update({
    id: '/chat',
    path: '/chat',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~chat/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute =
  WorkflowRunsWorkflowRunIdAdditionalMetadataLazyImport.update({
    id: '/additional-metadata',
    path: '/additional-metadata',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~additional-metadata.lazy'
    ).then((d) => d.Route),
  )

const TenantSettingsNewRouteLazyRoute = TenantSettingsNewRouteLazyImport.update(
  {
    id: '/new',
    path: '/new',
    getParentRoute: () => TenantSettingsRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/~tenant/~settings/~new/~route.lazy').then((d) => d.Route),
)

const TenantSettingsTenantSettingIdRouteLazyRoute =
  TenantSettingsTenantSettingIdRouteLazyImport.update({
    id: '/$tenantSettingId',
    path: '/$tenantSettingId',
    getParentRoute: () => TenantSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~tenant/~settings/~$tenantSettingId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ResourceNewResRouteLazyRoute = ResourceNewResRouteLazyImport.update({
  id: '/res',
  path: '/res',
  getParentRoute: () => ResourceNewRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~route.lazy').then((d) => d.Route),
)

const ResourceResIdPlatformaccountRouteLazyRoute =
  ResourceResIdPlatformaccountRouteLazyImport.update({
    id: '/platform_account',
    path: '/platform_account',
    getParentRoute: () => ResourceResIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~resource/~$resId/~platform_account/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ProxyProxyIdActionsRouteLazyRoute =
  ProxyProxyIdActionsRouteLazyImport.update({
    id: '/actions',
    path: '/actions',
    getParentRoute: () => ProxyProxyIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~proxy/~$proxyId/~actions/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const PlatformAccountPlatformAccountIdActionsRouteLazyRoute =
  PlatformAccountPlatformAccountIdActionsRouteLazyImport.update({
    id: '/actions',
    path: '/actions',
    getParentRoute: () => PlatformAccountPlatformAccountIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~platform-account/~$platformAccountId/~actions/~route.lazy'
    ).then((d) => d.Route),
  )

const AgentsAgentSessionIdRouteLazyRoute =
  AgentsAgentSessionIdRouteLazyImport.update({
    id: '/$agent/$sessionId',
    path: '/$agent/$sessionId',
    getParentRoute: () => AgentsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~agents/~$agent/~$sessionId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const AdkSessionSessionIdRouteLazyRoute =
  AdkSessionSessionIdRouteLazyImport.update({
    id: '/$sessionId',
    path: '/$sessionId',
    getParentRoute: () => AdkSessionRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~adk/~session/~$sessionId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdIndexLazyRoute =
  WorkflowsWorkflowIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~index.lazy').then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdIndexLazyRoute =
  WorkflowRunsWorkflowRunIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const TenantSettingsIndexLazyRoute = TenantSettingsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TenantSettingsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~tenant/~settings/~index.lazy').then((d) => d.Route),
)

const ResourceResIdIndexLazyRoute = ResourceResIdIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourceResIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~$resId/~index.lazy').then((d) => d.Route),
)

const ProxyProxyIdIndexLazyRoute = ProxyProxyIdIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProxyProxyIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~proxy/~$proxyId/~index.lazy').then((d) => d.Route),
)

const PlatformAccountNewIndexLazyRoute =
  PlatformAccountNewIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PlatformAccountNewRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~new/~index.lazy').then((d) => d.Route),
  )

const PlatformAccountPlatformAccountIdIndexLazyRoute =
  PlatformAccountPlatformAccountIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PlatformAccountPlatformAccountIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~$platformAccountId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ChatSessionIdIndexLazyRoute = ChatSessionIdIndexLazyImport.update({
  id: '/$sessionId/',
  path: '/$sessionId/',
  getParentRoute: () => ChatRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~chat/~$sessionId/~index.lazy').then((d) => d.Route),
)

const AuthLoginIndexLazyRoute = AuthLoginIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthLoginRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~login/~index.lazy').then((d) => d.Route),
)

const AdkSessionIndexLazyRoute = AdkSessionIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdkSessionRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~adk/~session/~index.lazy').then((d) => d.Route),
)

const SiteSiteIdHostRouteRoute = SiteSiteIdHostRouteImport.update({
  id: '/$siteId/host',
  path: '/$siteId/host',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute =
  WorkflowsWorkflowIdTriggerTestteamRouteLazyImport.update({
    id: '/test_team',
    path: '/test_team',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~test_team/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerTenantRouteLazyRoute =
  WorkflowsWorkflowIdTriggerTenantRouteLazyImport.update({
    id: '/tenant',
    path: '/tenant',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~tenant/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerTeamRouteLazyRoute =
  WorkflowsWorkflowIdTriggerTeamRouteLazyImport.update({
    id: '/team',
    path: '/team',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~team/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute =
  WorkflowsWorkflowIdTriggerSmolaRouteLazyImport.update({
    id: '/smola',
    path: '/smola',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~smola/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerResearchRouteLazyRoute =
  WorkflowsWorkflowIdTriggerResearchRouteLazyImport.update({
    id: '/research',
    path: '/research',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~research/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerModelRouteLazyRoute =
  WorkflowsWorkflowIdTriggerModelRouteLazyImport.update({
    id: '/model',
    path: '/model',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~model/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerComRouteLazyRoute =
  WorkflowsWorkflowIdTriggerComRouteLazyImport.update({
    id: '/com',
    path: '/com',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~com/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute =
  WorkflowsWorkflowIdTriggerBrowserRouteLazyImport.update({
    id: '/browser',
    path: '/browser',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~browser/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerAgRouteLazyRoute =
  WorkflowsWorkflowIdTriggerAgRouteLazyImport.update({
    id: '/ag',
    path: '/ag',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~ag/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerSplatLazyRoute =
  WorkflowsWorkflowIdTriggerSplatLazyImport.update({
    id: '/$',
    path: '/$',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~$.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute =
  WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport.update({
    id: '/stepRun/$stepRunId',
    path: '/stepRun/$stepRunId',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~route.lazy'
    ).then((d) => d.Route),
  )

const TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute =
  TenantSettingsTenantSettingIdModelsettingsRouteLazyImport.update({
    id: '/model_settings',
    path: '/model_settings',
    getParentRoute: () => TenantSettingsTenantSettingIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~tenant/~settings/~$tenantSettingId/~model_settings/~route.lazy'
    ).then((d) => d.Route),
  )

const ResourceNewResPlatformaccountLazyRoute =
  ResourceNewResPlatformaccountLazyImport.update({
    id: '/platform_account',
    path: '/platform_account',
    getParentRoute: () => ResourceNewResRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~resource/~new/~res/~platform_account.lazy').then(
      (d) => d.Route,
    ),
  )

const ResourceNewResChatLazyRoute = ResourceNewResChatLazyImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => ResourceNewResRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~chat.lazy').then((d) => d.Route),
)

const ResourceNewResBrowserLazyRoute = ResourceNewResBrowserLazyImport.update({
  id: '/browser',
  path: '/browser',
  getParentRoute: () => ResourceNewResRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~browser.lazy').then((d) => d.Route),
)

const ComsComIdTeambuilderv2InstagramteamRouteLazyRoute =
  ComsComIdTeambuilderv2InstagramteamRouteLazyImport.update({
    id: '/coms/$comId/team_builderv2/instagram_team',
    path: '/coms/$comId/team_builderv2/instagram_team',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builderv2/~instagram_team/~route.lazy'
    ).then((d) => d.Route),
  )

const AgentsAgentSessionIdStateRouteLazyRoute =
  AgentsAgentSessionIdStateRouteLazyImport.update({
    id: '/state',
    path: '/state',
    getParentRoute: () => AgentsAgentSessionIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~agents/~$agent/~$sessionId/~state/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const AgentsAgentSessionIdConfigRouteLazyRoute =
  AgentsAgentSessionIdConfigRouteLazyImport.update({
    id: '/config',
    path: '/config',
    getParentRoute: () => AgentsAgentSessionIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~agents/~$agent/~$sessionId/~config/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const AgentsAgentSessionIdActionsRouteLazyRoute =
  AgentsAgentSessionIdActionsRouteLazyImport.update({
    id: '/actions',
    path: '/actions',
    getParentRoute: () => AgentsAgentSessionIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~agents/~$agent/~$sessionId/~actions/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerIndexLazyRoute =
  WorkflowsWorkflowIdTriggerIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute =
  WorkflowRunsWorkflowRunIdVisualizationIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~visualization/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdChatIndexLazyRoute =
  WorkflowRunsWorkflowRunIdChatIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowRunsWorkflowRunIdChatRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~chat/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const TenantSettingsNewIndexLazyRoute = TenantSettingsNewIndexLazyImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => TenantSettingsNewRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/~tenant/~settings/~new/~index.lazy').then((d) => d.Route),
)

const TenantSettingsTenantSettingIdIndexLazyRoute =
  TenantSettingsTenantSettingIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TenantSettingsTenantSettingIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~tenant/~settings/~$tenantSettingId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ResourceNewResIndexLazyRoute = ResourceNewResIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourceNewResRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~index.lazy').then((d) => d.Route),
)

const ResourceResIdPlatformaccountIndexLazyRoute =
  ResourceResIdPlatformaccountIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ResourceResIdPlatformaccountRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~resource/~$resId/~platform_account/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ProxyProxyIdActionsIndexLazyRoute =
  ProxyProxyIdActionsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProxyProxyIdActionsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~proxy/~$proxyId/~actions/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const PlatformAccountPlatformAccountIdActionsIndexLazyRoute =
  PlatformAccountPlatformAccountIdActionsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PlatformAccountPlatformAccountIdActionsRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~platform-account/~$platformAccountId/~actions/~index.lazy'
    ).then((d) => d.Route),
  )

const AgentsAgentSessionIdIndexLazyRoute =
  AgentsAgentSessionIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AgentsAgentSessionIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~agents/~$agent/~$sessionId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const AdkSessionSessionIdIndexLazyRoute =
  AdkSessionSessionIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdkSessionSessionIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~adk/~session/~$sessionId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const SiteSiteIdHostIndexRoute = SiteSiteIdHostIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteSiteIdHostRouteRoute,
} as any)

const WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute =
  WorkflowsWorkflowIdTriggerTestteamIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~test_team/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerTenantIndexLazyRoute =
  WorkflowsWorkflowIdTriggerTenantIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerTenantRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~tenant/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerTeamIndexLazyRoute =
  WorkflowsWorkflowIdTriggerTeamIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerTeamRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~team/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute =
  WorkflowsWorkflowIdTriggerSmolaIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~smola/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerResearchIndexLazyRoute =
  WorkflowsWorkflowIdTriggerResearchIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerResearchRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~research/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerModelIndexLazyRoute =
  WorkflowsWorkflowIdTriggerModelIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerModelRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~model/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerComIndexLazyRoute =
  WorkflowsWorkflowIdTriggerComIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerComRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~com/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute =
  WorkflowsWorkflowIdTriggerBrowserIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~browser/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerAgIndexLazyRoute =
  WorkflowsWorkflowIdTriggerAgIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerAgRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~ag/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute =
  WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~index.lazy'
    ).then((d) => d.Route),
  )

const TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute =
  TenantSettingsTenantSettingIdModelsettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~tenant/~settings/~$tenantSettingId/~model_settings/~index.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderv2InstagramteamIndexLazyRoute =
  ComsComIdTeambuilderv2InstagramteamIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderv2InstagramteamRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builderv2/~instagram_team/~index.lazy'
    ).then((d) => d.Route),
  )

const AgentsAgentSessionIdStateIndexLazyRoute =
  AgentsAgentSessionIdStateIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AgentsAgentSessionIdStateRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~agents/~$agent/~$sessionId/~state/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const AgentsAgentSessionIdConfigIndexLazyRoute =
  AgentsAgentSessionIdConfigIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AgentsAgentSessionIdConfigRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~agents/~$agent/~$sessionId/~config/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const AgentsAgentSessionIdActionsIndexLazyRoute =
  AgentsAgentSessionIdActionsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AgentsAgentSessionIdActionsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~agents/~$agent/~$sessionId/~actions/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute =
  ComsComIdTeambuilderAgentAgentIdModelRouteLazyImport.update({
    id: '/coms/$comId/team_builder/agent/$agentId/model',
    path: '/coms/$comId/team_builder/agent/$agentId/model',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builder/~agent/~$agentId/~model/~route.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute =
  ComsComIdTeambuilderAgentAgentIdModelIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builder/~agent/~$agentId/~model/~index.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/agents': {
      id: '/agents'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AgentsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/automate': {
      id: '/automate'
      path: '/automate'
      fullPath: '/automate'
      preLoaderRoute: typeof AutomateRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/browser': {
      id: '/browser'
      path: '/browser'
      fullPath: '/browser'
      preLoaderRoute: typeof BrowserRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/bundler': {
      id: '/bundler'
      path: '/bundler'
      fullPath: '/bundler'
      preLoaderRoute: typeof BundlerRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/envs': {
      id: '/envs'
      path: '/envs'
      fullPath: '/envs'
      preLoaderRoute: typeof EnvsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/mttask': {
      id: '/mttask'
      path: '/mttask'
      fullPath: '/mttask'
      preLoaderRoute: typeof MttaskRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/platform-account': {
      id: '/platform-account'
      path: '/platform-account'
      fullPath: '/platform-account'
      preLoaderRoute: typeof PlatformAccountRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/proxy': {
      id: '/proxy'
      path: '/proxy'
      fullPath: '/proxy'
      preLoaderRoute: typeof ProxyRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/recurring': {
      id: '/recurring'
      path: '/recurring'
      fullPath: '/recurring'
      preLoaderRoute: typeof RecurringRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/resource': {
      id: '/resource'
      path: '/resource'
      fullPath: '/resource'
      preLoaderRoute: typeof ResourceRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/scheduled-runs': {
      id: '/scheduled-runs'
      path: '/scheduled-runs'
      fullPath: '/scheduled-runs'
      preLoaderRoute: typeof ScheduledRunsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/site': {
      id: '/site'
      path: '/site'
      fullPath: '/site'
      preLoaderRoute: typeof SiteRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/tenant': {
      id: '/tenant'
      path: '/tenant'
      fullPath: '/tenant'
      preLoaderRoute: typeof TenantRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/tk': {
      id: '/tk'
      path: '/tk'
      fullPath: '/tk'
      preLoaderRoute: typeof TkRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/workflow-runs': {
      id: '/workflow-runs'
      path: '/workflow-runs'
      fullPath: '/workflow-runs'
      preLoaderRoute: typeof WorkflowRunsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/workflows': {
      id: '/workflows'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/site/': {
      id: '/site/'
      path: '/'
      fullPath: '/site/'
      preLoaderRoute: typeof SiteIndexImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/bundler/test111': {
      id: '/bundler/test111'
      path: '/test111'
      fullPath: '/bundler/test111'
      preLoaderRoute: typeof BundlerTest111Import
      parentRoute: typeof BundlerRouteLazyImport
    }
    '/envs/create': {
      id: '/envs/create'
      path: '/create'
      fullPath: '/envs/create'
      preLoaderRoute: typeof EnvsCreateImport
      parentRoute: typeof EnvsRouteLazyImport
    }
    '/agents/': {
      id: '/agents/'
      path: '/'
      fullPath: '/agents/'
      preLoaderRoute: typeof AgentsIndexLazyImport
      parentRoute: typeof AgentsRouteLazyImport
    }
    '/automate/': {
      id: '/automate/'
      path: '/'
      fullPath: '/automate/'
      preLoaderRoute: typeof AutomateIndexLazyImport
      parentRoute: typeof AutomateRouteLazyImport
    }
    '/browser/': {
      id: '/browser/'
      path: '/'
      fullPath: '/browser/'
      preLoaderRoute: typeof BrowserIndexLazyImport
      parentRoute: typeof BrowserRouteLazyImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatIndexLazyImport
      parentRoute: typeof ChatRouteLazyImport
    }
    '/envs/': {
      id: '/envs/'
      path: '/'
      fullPath: '/envs/'
      preLoaderRoute: typeof EnvsIndexLazyImport
      parentRoute: typeof EnvsRouteLazyImport
    }
    '/events/': {
      id: '/events/'
      path: '/'
      fullPath: '/events/'
      preLoaderRoute: typeof EventsIndexLazyImport
      parentRoute: typeof EventsRouteLazyImport
    }
    '/mttask/': {
      id: '/mttask/'
      path: '/'
      fullPath: '/mttask/'
      preLoaderRoute: typeof MttaskIndexLazyImport
      parentRoute: typeof MttaskRouteLazyImport
    }
    '/platform-account/': {
      id: '/platform-account/'
      path: '/'
      fullPath: '/platform-account/'
      preLoaderRoute: typeof PlatformAccountIndexLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/proxy/': {
      id: '/proxy/'
      path: '/'
      fullPath: '/proxy/'
      preLoaderRoute: typeof ProxyIndexLazyImport
      parentRoute: typeof ProxyRouteLazyImport
    }
    '/recurring/': {
      id: '/recurring/'
      path: '/'
      fullPath: '/recurring/'
      preLoaderRoute: typeof RecurringIndexLazyImport
      parentRoute: typeof RecurringRouteLazyImport
    }
    '/resource/': {
      id: '/resource/'
      path: '/'
      fullPath: '/resource/'
      preLoaderRoute: typeof ResourceIndexLazyImport
      parentRoute: typeof ResourceRouteLazyImport
    }
    '/scheduled-runs/': {
      id: '/scheduled-runs/'
      path: '/'
      fullPath: '/scheduled-runs/'
      preLoaderRoute: typeof ScheduledRunsIndexLazyImport
      parentRoute: typeof ScheduledRunsRouteLazyImport
    }
    '/tenant/': {
      id: '/tenant/'
      path: '/'
      fullPath: '/tenant/'
      preLoaderRoute: typeof TenantIndexLazyImport
      parentRoute: typeof TenantRouteLazyImport
    }
    '/tk/': {
      id: '/tk/'
      path: '/'
      fullPath: '/tk/'
      preLoaderRoute: typeof TkIndexLazyImport
      parentRoute: typeof TkRouteLazyImport
    }
    '/workflow-runs/': {
      id: '/workflow-runs/'
      path: '/'
      fullPath: '/workflow-runs/'
      preLoaderRoute: typeof WorkflowRunsIndexLazyImport
      parentRoute: typeof WorkflowRunsRouteLazyImport
    }
    '/workflows/': {
      id: '/workflows/'
      path: '/'
      fullPath: '/workflows/'
      preLoaderRoute: typeof WorkflowsIndexLazyImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/adk/session': {
      id: '/adk/session'
      path: '/adk/session'
      fullPath: '/adk/session'
      preLoaderRoute: typeof AdkSessionRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
    '/platform-account/$platformAccountId': {
      id: '/platform-account/$platformAccountId'
      path: '/$platformAccountId'
      fullPath: '/platform-account/$platformAccountId'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdRouteLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/platform-account/new': {
      id: '/platform-account/new'
      path: '/new'
      fullPath: '/platform-account/new'
      preLoaderRoute: typeof PlatformAccountNewRouteLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/proxy/$proxyId': {
      id: '/proxy/$proxyId'
      path: '/$proxyId'
      fullPath: '/proxy/$proxyId'
      preLoaderRoute: typeof ProxyProxyIdRouteLazyImport
      parentRoute: typeof ProxyRouteLazyImport
    }
    '/proxy/new': {
      id: '/proxy/new'
      path: '/new'
      fullPath: '/proxy/new'
      preLoaderRoute: typeof ProxyNewRouteLazyImport
      parentRoute: typeof ProxyRouteLazyImport
    }
    '/resource/$resId': {
      id: '/resource/$resId'
      path: '/$resId'
      fullPath: '/resource/$resId'
      preLoaderRoute: typeof ResourceResIdRouteLazyImport
      parentRoute: typeof ResourceRouteLazyImport
    }
    '/resource/new': {
      id: '/resource/new'
      path: '/new'
      fullPath: '/resource/new'
      preLoaderRoute: typeof ResourceNewRouteLazyImport
      parentRoute: typeof ResourceRouteLazyImport
    }
    '/tenant/settings': {
      id: '/tenant/settings'
      path: '/settings'
      fullPath: '/tenant/settings'
      preLoaderRoute: typeof TenantSettingsRouteLazyImport
      parentRoute: typeof TenantRouteLazyImport
    }
    '/workflow-runs/$workflowRunId': {
      id: '/workflow-runs/$workflowRunId'
      path: '/$workflowRunId'
      fullPath: '/workflow-runs/$workflowRunId'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
      parentRoute: typeof WorkflowRunsRouteLazyImport
    }
    '/workflows/$workflowId': {
      id: '/workflows/$workflowId'
      path: '/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof WorkflowsWorkflowIdRouteLazyImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/site/$siteId/host': {
      id: '/site/$siteId/host'
      path: '/$siteId/host'
      fullPath: '/site/$siteId/host'
      preLoaderRoute: typeof SiteSiteIdHostRouteImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/adk/session/': {
      id: '/adk/session/'
      path: '/'
      fullPath: '/adk/session/'
      preLoaderRoute: typeof AdkSessionIndexLazyImport
      parentRoute: typeof AdkSessionRouteLazyImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/'
      fullPath: '/auth/login/'
      preLoaderRoute: typeof AuthLoginIndexLazyImport
      parentRoute: typeof AuthLoginRouteLazyImport
    }
    '/chat/$sessionId/': {
      id: '/chat/$sessionId/'
      path: '/$sessionId'
      fullPath: '/chat/$sessionId'
      preLoaderRoute: typeof ChatSessionIdIndexLazyImport
      parentRoute: typeof ChatRouteLazyImport
    }
    '/platform-account/$platformAccountId/': {
      id: '/platform-account/$platformAccountId/'
      path: '/'
      fullPath: '/platform-account/$platformAccountId/'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdIndexLazyImport
      parentRoute: typeof PlatformAccountPlatformAccountIdRouteLazyImport
    }
    '/platform-account/new/': {
      id: '/platform-account/new/'
      path: '/'
      fullPath: '/platform-account/new/'
      preLoaderRoute: typeof PlatformAccountNewIndexLazyImport
      parentRoute: typeof PlatformAccountNewRouteLazyImport
    }
    '/proxy/$proxyId/': {
      id: '/proxy/$proxyId/'
      path: '/'
      fullPath: '/proxy/$proxyId/'
      preLoaderRoute: typeof ProxyProxyIdIndexLazyImport
      parentRoute: typeof ProxyProxyIdRouteLazyImport
    }
    '/resource/$resId/': {
      id: '/resource/$resId/'
      path: '/'
      fullPath: '/resource/$resId/'
      preLoaderRoute: typeof ResourceResIdIndexLazyImport
      parentRoute: typeof ResourceResIdRouteLazyImport
    }
    '/tenant/settings/': {
      id: '/tenant/settings/'
      path: '/'
      fullPath: '/tenant/settings/'
      preLoaderRoute: typeof TenantSettingsIndexLazyImport
      parentRoute: typeof TenantSettingsRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/': {
      id: '/workflow-runs/$workflowRunId/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflows/$workflowId/': {
      id: '/workflows/$workflowId/'
      path: '/'
      fullPath: '/workflows/$workflowId/'
      preLoaderRoute: typeof WorkflowsWorkflowIdIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdRouteLazyImport
    }
    '/adk/session/$sessionId': {
      id: '/adk/session/$sessionId'
      path: '/$sessionId'
      fullPath: '/adk/session/$sessionId'
      preLoaderRoute: typeof AdkSessionSessionIdRouteLazyImport
      parentRoute: typeof AdkSessionRouteLazyImport
    }
    '/agents/$agent/$sessionId': {
      id: '/agents/$agent/$sessionId'
      path: '/$agent/$sessionId'
      fullPath: '/agents/$agent/$sessionId'
      preLoaderRoute: typeof AgentsAgentSessionIdRouteLazyImport
      parentRoute: typeof AgentsRouteLazyImport
    }
    '/platform-account/$platformAccountId/actions': {
      id: '/platform-account/$platformAccountId/actions'
      path: '/actions'
      fullPath: '/platform-account/$platformAccountId/actions'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdActionsRouteLazyImport
      parentRoute: typeof PlatformAccountPlatformAccountIdRouteLazyImport
    }
    '/proxy/$proxyId/actions': {
      id: '/proxy/$proxyId/actions'
      path: '/actions'
      fullPath: '/proxy/$proxyId/actions'
      preLoaderRoute: typeof ProxyProxyIdActionsRouteLazyImport
      parentRoute: typeof ProxyProxyIdRouteLazyImport
    }
    '/resource/$resId/platform_account': {
      id: '/resource/$resId/platform_account'
      path: '/platform_account'
      fullPath: '/resource/$resId/platform_account'
      preLoaderRoute: typeof ResourceResIdPlatformaccountRouteLazyImport
      parentRoute: typeof ResourceResIdRouteLazyImport
    }
    '/resource/new/res': {
      id: '/resource/new/res'
      path: '/res'
      fullPath: '/resource/new/res'
      preLoaderRoute: typeof ResourceNewResRouteLazyImport
      parentRoute: typeof ResourceNewRouteLazyImport
    }
    '/tenant/settings/$tenantSettingId': {
      id: '/tenant/settings/$tenantSettingId'
      path: '/$tenantSettingId'
      fullPath: '/tenant/settings/$tenantSettingId'
      preLoaderRoute: typeof TenantSettingsTenantSettingIdRouteLazyImport
      parentRoute: typeof TenantSettingsRouteLazyImport
    }
    '/tenant/settings/new': {
      id: '/tenant/settings/new'
      path: '/new'
      fullPath: '/tenant/settings/new'
      preLoaderRoute: typeof TenantSettingsNewRouteLazyImport
      parentRoute: typeof TenantSettingsRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/additional-metadata': {
      id: '/workflow-runs/$workflowRunId/additional-metadata'
      path: '/additional-metadata'
      fullPath: '/workflow-runs/$workflowRunId/additional-metadata'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/chat': {
      id: '/workflow-runs/$workflowRunId/chat'
      path: '/chat'
      fullPath: '/workflow-runs/$workflowRunId/chat'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdChatRouteLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/input': {
      id: '/workflow-runs/$workflowRunId/input'
      path: '/input'
      fullPath: '/workflow-runs/$workflowRunId/input'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdInputLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/summary': {
      id: '/workflow-runs/$workflowRunId/summary'
      path: '/summary'
      fullPath: '/workflow-runs/$workflowRunId/summary'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdSummaryLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/visualization': {
      id: '/workflow-runs/$workflowRunId/visualization'
      path: '/visualization'
      fullPath: '/workflow-runs/$workflowRunId/visualization'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflows/$workflowId/trigger': {
      id: '/workflows/$workflowId/trigger'
      path: '/trigger'
      fullPath: '/workflows/$workflowId/trigger'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdRouteLazyImport
    }
    '/site/$siteId/host/': {
      id: '/site/$siteId/host/'
      path: '/'
      fullPath: '/site/$siteId/host/'
      preLoaderRoute: typeof SiteSiteIdHostIndexImport
      parentRoute: typeof SiteSiteIdHostRouteImport
    }
    '/adk/session/$sessionId/': {
      id: '/adk/session/$sessionId/'
      path: '/'
      fullPath: '/adk/session/$sessionId/'
      preLoaderRoute: typeof AdkSessionSessionIdIndexLazyImport
      parentRoute: typeof AdkSessionSessionIdRouteLazyImport
    }
    '/agents/$agent/$sessionId/': {
      id: '/agents/$agent/$sessionId/'
      path: '/'
      fullPath: '/agents/$agent/$sessionId/'
      preLoaderRoute: typeof AgentsAgentSessionIdIndexLazyImport
      parentRoute: typeof AgentsAgentSessionIdRouteLazyImport
    }
    '/platform-account/$platformAccountId/actions/': {
      id: '/platform-account/$platformAccountId/actions/'
      path: '/'
      fullPath: '/platform-account/$platformAccountId/actions/'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdActionsIndexLazyImport
      parentRoute: typeof PlatformAccountPlatformAccountIdActionsRouteLazyImport
    }
    '/proxy/$proxyId/actions/': {
      id: '/proxy/$proxyId/actions/'
      path: '/'
      fullPath: '/proxy/$proxyId/actions/'
      preLoaderRoute: typeof ProxyProxyIdActionsIndexLazyImport
      parentRoute: typeof ProxyProxyIdActionsRouteLazyImport
    }
    '/resource/$resId/platform_account/': {
      id: '/resource/$resId/platform_account/'
      path: '/'
      fullPath: '/resource/$resId/platform_account/'
      preLoaderRoute: typeof ResourceResIdPlatformaccountIndexLazyImport
      parentRoute: typeof ResourceResIdPlatformaccountRouteLazyImport
    }
    '/resource/new/res/': {
      id: '/resource/new/res/'
      path: '/'
      fullPath: '/resource/new/res/'
      preLoaderRoute: typeof ResourceNewResIndexLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/tenant/settings/$tenantSettingId/': {
      id: '/tenant/settings/$tenantSettingId/'
      path: '/'
      fullPath: '/tenant/settings/$tenantSettingId/'
      preLoaderRoute: typeof TenantSettingsTenantSettingIdIndexLazyImport
      parentRoute: typeof TenantSettingsTenantSettingIdRouteLazyImport
    }
    '/tenant/settings/new/': {
      id: '/tenant/settings/new/'
      path: '/'
      fullPath: '/tenant/settings/new/'
      preLoaderRoute: typeof TenantSettingsNewIndexLazyImport
      parentRoute: typeof TenantSettingsNewRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/chat/': {
      id: '/workflow-runs/$workflowRunId/chat/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/chat/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdChatIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdChatRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/visualization/': {
      id: '/workflow-runs/$workflowRunId/visualization/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/visualization/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport
    }
    '/workflows/$workflowId/trigger/': {
      id: '/workflows/$workflowId/trigger/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/agents/$agent/$sessionId/actions': {
      id: '/agents/$agent/$sessionId/actions'
      path: '/actions'
      fullPath: '/agents/$agent/$sessionId/actions'
      preLoaderRoute: typeof AgentsAgentSessionIdActionsRouteLazyImport
      parentRoute: typeof AgentsAgentSessionIdRouteLazyImport
    }
    '/agents/$agent/$sessionId/config': {
      id: '/agents/$agent/$sessionId/config'
      path: '/config'
      fullPath: '/agents/$agent/$sessionId/config'
      preLoaderRoute: typeof AgentsAgentSessionIdConfigRouteLazyImport
      parentRoute: typeof AgentsAgentSessionIdRouteLazyImport
    }
    '/agents/$agent/$sessionId/state': {
      id: '/agents/$agent/$sessionId/state'
      path: '/state'
      fullPath: '/agents/$agent/$sessionId/state'
      preLoaderRoute: typeof AgentsAgentSessionIdStateRouteLazyImport
      parentRoute: typeof AgentsAgentSessionIdRouteLazyImport
    }
    '/coms/$comId/team_builderv2/instagram_team': {
      id: '/coms/$comId/team_builderv2/instagram_team'
      path: '/coms/$comId/team_builderv2/instagram_team'
      fullPath: '/coms/$comId/team_builderv2/instagram_team'
      preLoaderRoute: typeof ComsComIdTeambuilderv2InstagramteamRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/resource/new/res/browser': {
      id: '/resource/new/res/browser'
      path: '/browser'
      fullPath: '/resource/new/res/browser'
      preLoaderRoute: typeof ResourceNewResBrowserLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/resource/new/res/chat': {
      id: '/resource/new/res/chat'
      path: '/chat'
      fullPath: '/resource/new/res/chat'
      preLoaderRoute: typeof ResourceNewResChatLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/resource/new/res/platform_account': {
      id: '/resource/new/res/platform_account'
      path: '/platform_account'
      fullPath: '/resource/new/res/platform_account'
      preLoaderRoute: typeof ResourceNewResPlatformaccountLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/tenant/settings/$tenantSettingId/model_settings': {
      id: '/tenant/settings/$tenantSettingId/model_settings'
      path: '/model_settings'
      fullPath: '/tenant/settings/$tenantSettingId/model_settings'
      preLoaderRoute: typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyImport
      parentRoute: typeof TenantSettingsTenantSettingIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/stepRun/$stepRunId': {
      id: '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
      path: '/stepRun/$stepRunId'
      fullPath: '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflows/$workflowId/trigger/$': {
      id: '/workflows/$workflowId/trigger/$'
      path: '/$'
      fullPath: '/workflows/$workflowId/trigger/$'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerSplatLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/ag': {
      id: '/workflows/$workflowId/trigger/ag'
      path: '/ag'
      fullPath: '/workflows/$workflowId/trigger/ag'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerAgRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/browser': {
      id: '/workflows/$workflowId/trigger/browser'
      path: '/browser'
      fullPath: '/workflows/$workflowId/trigger/browser'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/com': {
      id: '/workflows/$workflowId/trigger/com'
      path: '/com'
      fullPath: '/workflows/$workflowId/trigger/com'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerComRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/model': {
      id: '/workflows/$workflowId/trigger/model'
      path: '/model'
      fullPath: '/workflows/$workflowId/trigger/model'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerModelRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/research': {
      id: '/workflows/$workflowId/trigger/research'
      path: '/research'
      fullPath: '/workflows/$workflowId/trigger/research'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerResearchRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/smola': {
      id: '/workflows/$workflowId/trigger/smola'
      path: '/smola'
      fullPath: '/workflows/$workflowId/trigger/smola'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/team': {
      id: '/workflows/$workflowId/trigger/team'
      path: '/team'
      fullPath: '/workflows/$workflowId/trigger/team'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTeamRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/tenant': {
      id: '/workflows/$workflowId/trigger/tenant'
      path: '/tenant'
      fullPath: '/workflows/$workflowId/trigger/tenant'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTenantRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/test_team': {
      id: '/workflows/$workflowId/trigger/test_team'
      path: '/test_team'
      fullPath: '/workflows/$workflowId/trigger/test_team'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/agents/$agent/$sessionId/actions/': {
      id: '/agents/$agent/$sessionId/actions/'
      path: '/'
      fullPath: '/agents/$agent/$sessionId/actions/'
      preLoaderRoute: typeof AgentsAgentSessionIdActionsIndexLazyImport
      parentRoute: typeof AgentsAgentSessionIdActionsRouteLazyImport
    }
    '/agents/$agent/$sessionId/config/': {
      id: '/agents/$agent/$sessionId/config/'
      path: '/'
      fullPath: '/agents/$agent/$sessionId/config/'
      preLoaderRoute: typeof AgentsAgentSessionIdConfigIndexLazyImport
      parentRoute: typeof AgentsAgentSessionIdConfigRouteLazyImport
    }
    '/agents/$agent/$sessionId/state/': {
      id: '/agents/$agent/$sessionId/state/'
      path: '/'
      fullPath: '/agents/$agent/$sessionId/state/'
      preLoaderRoute: typeof AgentsAgentSessionIdStateIndexLazyImport
      parentRoute: typeof AgentsAgentSessionIdStateRouteLazyImport
    }
    '/coms/$comId/team_builderv2/instagram_team/': {
      id: '/coms/$comId/team_builderv2/instagram_team/'
      path: '/'
      fullPath: '/coms/$comId/team_builderv2/instagram_team/'
      preLoaderRoute: typeof ComsComIdTeambuilderv2InstagramteamIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderv2InstagramteamRouteLazyImport
    }
    '/tenant/settings/$tenantSettingId/model_settings/': {
      id: '/tenant/settings/$tenantSettingId/model_settings/'
      path: '/'
      fullPath: '/tenant/settings/$tenantSettingId/model_settings/'
      preLoaderRoute: typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyImport
      parentRoute: typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/stepRun/$stepRunId/': {
      id: '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport
    }
    '/workflows/$workflowId/trigger/ag/': {
      id: '/workflows/$workflowId/trigger/ag/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/ag/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerAgIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerAgRouteLazyImport
    }
    '/workflows/$workflowId/trigger/browser/': {
      id: '/workflows/$workflowId/trigger/browser/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/browser/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyImport
    }
    '/workflows/$workflowId/trigger/com/': {
      id: '/workflows/$workflowId/trigger/com/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/com/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerComIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerComRouteLazyImport
    }
    '/workflows/$workflowId/trigger/model/': {
      id: '/workflows/$workflowId/trigger/model/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/model/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerModelIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerModelRouteLazyImport
    }
    '/workflows/$workflowId/trigger/research/': {
      id: '/workflows/$workflowId/trigger/research/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/research/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerResearchIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerResearchRouteLazyImport
    }
    '/workflows/$workflowId/trigger/smola/': {
      id: '/workflows/$workflowId/trigger/smola/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/smola/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyImport
    }
    '/workflows/$workflowId/trigger/team/': {
      id: '/workflows/$workflowId/trigger/team/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/team/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTeamIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerTeamRouteLazyImport
    }
    '/workflows/$workflowId/trigger/tenant/': {
      id: '/workflows/$workflowId/trigger/tenant/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/tenant/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTenantIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerTenantRouteLazyImport
    }
    '/workflows/$workflowId/trigger/test_team/': {
      id: '/workflows/$workflowId/trigger/test_team/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/test_team/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyImport
    }
    '/coms/$comId/team_builder/agent/$agentId/model': {
      id: '/coms/$comId/team_builder/agent/$agentId/model'
      path: '/coms/$comId/team_builder/agent/$agentId/model'
      fullPath: '/coms/$comId/team_builder/agent/$agentId/model'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/coms/$comId/team_builder/agent/$agentId/model/': {
      id: '/coms/$comId/team_builder/agent/$agentId/model/'
      path: '/'
      fullPath: '/coms/$comId/team_builder/agent/$agentId/model/'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyImport
    }
  }
}

// Create and export the route tree

interface AgentsAgentSessionIdActionsRouteLazyRouteChildren {
  AgentsAgentSessionIdActionsIndexLazyRoute: typeof AgentsAgentSessionIdActionsIndexLazyRoute
}

const AgentsAgentSessionIdActionsRouteLazyRouteChildren: AgentsAgentSessionIdActionsRouteLazyRouteChildren =
  {
    AgentsAgentSessionIdActionsIndexLazyRoute:
      AgentsAgentSessionIdActionsIndexLazyRoute,
  }

const AgentsAgentSessionIdActionsRouteLazyRouteWithChildren =
  AgentsAgentSessionIdActionsRouteLazyRoute._addFileChildren(
    AgentsAgentSessionIdActionsRouteLazyRouteChildren,
  )

interface AgentsAgentSessionIdConfigRouteLazyRouteChildren {
  AgentsAgentSessionIdConfigIndexLazyRoute: typeof AgentsAgentSessionIdConfigIndexLazyRoute
}

const AgentsAgentSessionIdConfigRouteLazyRouteChildren: AgentsAgentSessionIdConfigRouteLazyRouteChildren =
  {
    AgentsAgentSessionIdConfigIndexLazyRoute:
      AgentsAgentSessionIdConfigIndexLazyRoute,
  }

const AgentsAgentSessionIdConfigRouteLazyRouteWithChildren =
  AgentsAgentSessionIdConfigRouteLazyRoute._addFileChildren(
    AgentsAgentSessionIdConfigRouteLazyRouteChildren,
  )

interface AgentsAgentSessionIdStateRouteLazyRouteChildren {
  AgentsAgentSessionIdStateIndexLazyRoute: typeof AgentsAgentSessionIdStateIndexLazyRoute
}

const AgentsAgentSessionIdStateRouteLazyRouteChildren: AgentsAgentSessionIdStateRouteLazyRouteChildren =
  {
    AgentsAgentSessionIdStateIndexLazyRoute:
      AgentsAgentSessionIdStateIndexLazyRoute,
  }

const AgentsAgentSessionIdStateRouteLazyRouteWithChildren =
  AgentsAgentSessionIdStateRouteLazyRoute._addFileChildren(
    AgentsAgentSessionIdStateRouteLazyRouteChildren,
  )

interface AgentsAgentSessionIdRouteLazyRouteChildren {
  AgentsAgentSessionIdIndexLazyRoute: typeof AgentsAgentSessionIdIndexLazyRoute
  AgentsAgentSessionIdActionsRouteLazyRoute: typeof AgentsAgentSessionIdActionsRouteLazyRouteWithChildren
  AgentsAgentSessionIdConfigRouteLazyRoute: typeof AgentsAgentSessionIdConfigRouteLazyRouteWithChildren
  AgentsAgentSessionIdStateRouteLazyRoute: typeof AgentsAgentSessionIdStateRouteLazyRouteWithChildren
}

const AgentsAgentSessionIdRouteLazyRouteChildren: AgentsAgentSessionIdRouteLazyRouteChildren =
  {
    AgentsAgentSessionIdIndexLazyRoute: AgentsAgentSessionIdIndexLazyRoute,
    AgentsAgentSessionIdActionsRouteLazyRoute:
      AgentsAgentSessionIdActionsRouteLazyRouteWithChildren,
    AgentsAgentSessionIdConfigRouteLazyRoute:
      AgentsAgentSessionIdConfigRouteLazyRouteWithChildren,
    AgentsAgentSessionIdStateRouteLazyRoute:
      AgentsAgentSessionIdStateRouteLazyRouteWithChildren,
  }

const AgentsAgentSessionIdRouteLazyRouteWithChildren =
  AgentsAgentSessionIdRouteLazyRoute._addFileChildren(
    AgentsAgentSessionIdRouteLazyRouteChildren,
  )

interface AgentsRouteLazyRouteChildren {
  AgentsIndexLazyRoute: typeof AgentsIndexLazyRoute
  AgentsAgentSessionIdRouteLazyRoute: typeof AgentsAgentSessionIdRouteLazyRouteWithChildren
}

const AgentsRouteLazyRouteChildren: AgentsRouteLazyRouteChildren = {
  AgentsIndexLazyRoute: AgentsIndexLazyRoute,
  AgentsAgentSessionIdRouteLazyRoute:
    AgentsAgentSessionIdRouteLazyRouteWithChildren,
}

const AgentsRouteLazyRouteWithChildren = AgentsRouteLazyRoute._addFileChildren(
  AgentsRouteLazyRouteChildren,
)

interface AuthLoginRouteLazyRouteChildren {
  AuthLoginIndexLazyRoute: typeof AuthLoginIndexLazyRoute
}

const AuthLoginRouteLazyRouteChildren: AuthLoginRouteLazyRouteChildren = {
  AuthLoginIndexLazyRoute: AuthLoginIndexLazyRoute,
}

const AuthLoginRouteLazyRouteWithChildren =
  AuthLoginRouteLazyRoute._addFileChildren(AuthLoginRouteLazyRouteChildren)

interface AuthRouteLazyRouteChildren {
  AuthLoginRouteLazyRoute: typeof AuthLoginRouteLazyRouteWithChildren
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
}

const AuthRouteLazyRouteChildren: AuthRouteLazyRouteChildren = {
  AuthLoginRouteLazyRoute: AuthLoginRouteLazyRouteWithChildren,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
}

const AuthRouteLazyRouteWithChildren = AuthRouteLazyRoute._addFileChildren(
  AuthRouteLazyRouteChildren,
)

interface AutomateRouteLazyRouteChildren {
  AutomateIndexLazyRoute: typeof AutomateIndexLazyRoute
}

const AutomateRouteLazyRouteChildren: AutomateRouteLazyRouteChildren = {
  AutomateIndexLazyRoute: AutomateIndexLazyRoute,
}

const AutomateRouteLazyRouteWithChildren =
  AutomateRouteLazyRoute._addFileChildren(AutomateRouteLazyRouteChildren)

interface BrowserRouteLazyRouteChildren {
  BrowserIndexLazyRoute: typeof BrowserIndexLazyRoute
}

const BrowserRouteLazyRouteChildren: BrowserRouteLazyRouteChildren = {
  BrowserIndexLazyRoute: BrowserIndexLazyRoute,
}

const BrowserRouteLazyRouteWithChildren =
  BrowserRouteLazyRoute._addFileChildren(BrowserRouteLazyRouteChildren)

interface BundlerRouteLazyRouteChildren {
  BundlerTest111Route: typeof BundlerTest111Route
}

const BundlerRouteLazyRouteChildren: BundlerRouteLazyRouteChildren = {
  BundlerTest111Route: BundlerTest111Route,
}

const BundlerRouteLazyRouteWithChildren =
  BundlerRouteLazyRoute._addFileChildren(BundlerRouteLazyRouteChildren)

interface ChatRouteLazyRouteChildren {
  ChatIndexLazyRoute: typeof ChatIndexLazyRoute
  ChatSessionIdIndexLazyRoute: typeof ChatSessionIdIndexLazyRoute
}

const ChatRouteLazyRouteChildren: ChatRouteLazyRouteChildren = {
  ChatIndexLazyRoute: ChatIndexLazyRoute,
  ChatSessionIdIndexLazyRoute: ChatSessionIdIndexLazyRoute,
}

const ChatRouteLazyRouteWithChildren = ChatRouteLazyRoute._addFileChildren(
  ChatRouteLazyRouteChildren,
)

interface EnvsRouteLazyRouteChildren {
  EnvsCreateRoute: typeof EnvsCreateRoute
  EnvsIndexLazyRoute: typeof EnvsIndexLazyRoute
}

const EnvsRouteLazyRouteChildren: EnvsRouteLazyRouteChildren = {
  EnvsCreateRoute: EnvsCreateRoute,
  EnvsIndexLazyRoute: EnvsIndexLazyRoute,
}

const EnvsRouteLazyRouteWithChildren = EnvsRouteLazyRoute._addFileChildren(
  EnvsRouteLazyRouteChildren,
)

interface EventsRouteLazyRouteChildren {
  EventsIndexLazyRoute: typeof EventsIndexLazyRoute
}

const EventsRouteLazyRouteChildren: EventsRouteLazyRouteChildren = {
  EventsIndexLazyRoute: EventsIndexLazyRoute,
}

const EventsRouteLazyRouteWithChildren = EventsRouteLazyRoute._addFileChildren(
  EventsRouteLazyRouteChildren,
)

interface MttaskRouteLazyRouteChildren {
  MttaskIndexLazyRoute: typeof MttaskIndexLazyRoute
}

const MttaskRouteLazyRouteChildren: MttaskRouteLazyRouteChildren = {
  MttaskIndexLazyRoute: MttaskIndexLazyRoute,
}

const MttaskRouteLazyRouteWithChildren = MttaskRouteLazyRoute._addFileChildren(
  MttaskRouteLazyRouteChildren,
)

interface PlatformAccountPlatformAccountIdActionsRouteLazyRouteChildren {
  PlatformAccountPlatformAccountIdActionsIndexLazyRoute: typeof PlatformAccountPlatformAccountIdActionsIndexLazyRoute
}

const PlatformAccountPlatformAccountIdActionsRouteLazyRouteChildren: PlatformAccountPlatformAccountIdActionsRouteLazyRouteChildren =
  {
    PlatformAccountPlatformAccountIdActionsIndexLazyRoute:
      PlatformAccountPlatformAccountIdActionsIndexLazyRoute,
  }

const PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren =
  PlatformAccountPlatformAccountIdActionsRouteLazyRoute._addFileChildren(
    PlatformAccountPlatformAccountIdActionsRouteLazyRouteChildren,
  )

interface PlatformAccountPlatformAccountIdRouteLazyRouteChildren {
  PlatformAccountPlatformAccountIdIndexLazyRoute: typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  PlatformAccountPlatformAccountIdActionsRouteLazyRoute: typeof PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren
}

const PlatformAccountPlatformAccountIdRouteLazyRouteChildren: PlatformAccountPlatformAccountIdRouteLazyRouteChildren =
  {
    PlatformAccountPlatformAccountIdIndexLazyRoute:
      PlatformAccountPlatformAccountIdIndexLazyRoute,
    PlatformAccountPlatformAccountIdActionsRouteLazyRoute:
      PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren,
  }

const PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren =
  PlatformAccountPlatformAccountIdRouteLazyRoute._addFileChildren(
    PlatformAccountPlatformAccountIdRouteLazyRouteChildren,
  )

interface PlatformAccountNewRouteLazyRouteChildren {
  PlatformAccountNewIndexLazyRoute: typeof PlatformAccountNewIndexLazyRoute
}

const PlatformAccountNewRouteLazyRouteChildren: PlatformAccountNewRouteLazyRouteChildren =
  {
    PlatformAccountNewIndexLazyRoute: PlatformAccountNewIndexLazyRoute,
  }

const PlatformAccountNewRouteLazyRouteWithChildren =
  PlatformAccountNewRouteLazyRoute._addFileChildren(
    PlatformAccountNewRouteLazyRouteChildren,
  )

interface PlatformAccountRouteLazyRouteChildren {
  PlatformAccountIndexLazyRoute: typeof PlatformAccountIndexLazyRoute
  PlatformAccountPlatformAccountIdRouteLazyRoute: typeof PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren
  PlatformAccountNewRouteLazyRoute: typeof PlatformAccountNewRouteLazyRouteWithChildren
}

const PlatformAccountRouteLazyRouteChildren: PlatformAccountRouteLazyRouteChildren =
  {
    PlatformAccountIndexLazyRoute: PlatformAccountIndexLazyRoute,
    PlatformAccountPlatformAccountIdRouteLazyRoute:
      PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren,
    PlatformAccountNewRouteLazyRoute:
      PlatformAccountNewRouteLazyRouteWithChildren,
  }

const PlatformAccountRouteLazyRouteWithChildren =
  PlatformAccountRouteLazyRoute._addFileChildren(
    PlatformAccountRouteLazyRouteChildren,
  )

interface ProxyProxyIdActionsRouteLazyRouteChildren {
  ProxyProxyIdActionsIndexLazyRoute: typeof ProxyProxyIdActionsIndexLazyRoute
}

const ProxyProxyIdActionsRouteLazyRouteChildren: ProxyProxyIdActionsRouteLazyRouteChildren =
  {
    ProxyProxyIdActionsIndexLazyRoute: ProxyProxyIdActionsIndexLazyRoute,
  }

const ProxyProxyIdActionsRouteLazyRouteWithChildren =
  ProxyProxyIdActionsRouteLazyRoute._addFileChildren(
    ProxyProxyIdActionsRouteLazyRouteChildren,
  )

interface ProxyProxyIdRouteLazyRouteChildren {
  ProxyProxyIdIndexLazyRoute: typeof ProxyProxyIdIndexLazyRoute
  ProxyProxyIdActionsRouteLazyRoute: typeof ProxyProxyIdActionsRouteLazyRouteWithChildren
}

const ProxyProxyIdRouteLazyRouteChildren: ProxyProxyIdRouteLazyRouteChildren = {
  ProxyProxyIdIndexLazyRoute: ProxyProxyIdIndexLazyRoute,
  ProxyProxyIdActionsRouteLazyRoute:
    ProxyProxyIdActionsRouteLazyRouteWithChildren,
}

const ProxyProxyIdRouteLazyRouteWithChildren =
  ProxyProxyIdRouteLazyRoute._addFileChildren(
    ProxyProxyIdRouteLazyRouteChildren,
  )

interface ProxyRouteLazyRouteChildren {
  ProxyIndexLazyRoute: typeof ProxyIndexLazyRoute
  ProxyProxyIdRouteLazyRoute: typeof ProxyProxyIdRouteLazyRouteWithChildren
  ProxyNewRouteLazyRoute: typeof ProxyNewRouteLazyRoute
}

const ProxyRouteLazyRouteChildren: ProxyRouteLazyRouteChildren = {
  ProxyIndexLazyRoute: ProxyIndexLazyRoute,
  ProxyProxyIdRouteLazyRoute: ProxyProxyIdRouteLazyRouteWithChildren,
  ProxyNewRouteLazyRoute: ProxyNewRouteLazyRoute,
}

const ProxyRouteLazyRouteWithChildren = ProxyRouteLazyRoute._addFileChildren(
  ProxyRouteLazyRouteChildren,
)

interface RecurringRouteLazyRouteChildren {
  RecurringIndexLazyRoute: typeof RecurringIndexLazyRoute
}

const RecurringRouteLazyRouteChildren: RecurringRouteLazyRouteChildren = {
  RecurringIndexLazyRoute: RecurringIndexLazyRoute,
}

const RecurringRouteLazyRouteWithChildren =
  RecurringRouteLazyRoute._addFileChildren(RecurringRouteLazyRouteChildren)

interface ResourceResIdPlatformaccountRouteLazyRouteChildren {
  ResourceResIdPlatformaccountIndexLazyRoute: typeof ResourceResIdPlatformaccountIndexLazyRoute
}

const ResourceResIdPlatformaccountRouteLazyRouteChildren: ResourceResIdPlatformaccountRouteLazyRouteChildren =
  {
    ResourceResIdPlatformaccountIndexLazyRoute:
      ResourceResIdPlatformaccountIndexLazyRoute,
  }

const ResourceResIdPlatformaccountRouteLazyRouteWithChildren =
  ResourceResIdPlatformaccountRouteLazyRoute._addFileChildren(
    ResourceResIdPlatformaccountRouteLazyRouteChildren,
  )

interface ResourceResIdRouteLazyRouteChildren {
  ResourceResIdIndexLazyRoute: typeof ResourceResIdIndexLazyRoute
  ResourceResIdPlatformaccountRouteLazyRoute: typeof ResourceResIdPlatformaccountRouteLazyRouteWithChildren
}

const ResourceResIdRouteLazyRouteChildren: ResourceResIdRouteLazyRouteChildren =
  {
    ResourceResIdIndexLazyRoute: ResourceResIdIndexLazyRoute,
    ResourceResIdPlatformaccountRouteLazyRoute:
      ResourceResIdPlatformaccountRouteLazyRouteWithChildren,
  }

const ResourceResIdRouteLazyRouteWithChildren =
  ResourceResIdRouteLazyRoute._addFileChildren(
    ResourceResIdRouteLazyRouteChildren,
  )

interface ResourceNewResRouteLazyRouteChildren {
  ResourceNewResIndexLazyRoute: typeof ResourceNewResIndexLazyRoute
  ResourceNewResBrowserLazyRoute: typeof ResourceNewResBrowserLazyRoute
  ResourceNewResChatLazyRoute: typeof ResourceNewResChatLazyRoute
  ResourceNewResPlatformaccountLazyRoute: typeof ResourceNewResPlatformaccountLazyRoute
}

const ResourceNewResRouteLazyRouteChildren: ResourceNewResRouteLazyRouteChildren =
  {
    ResourceNewResIndexLazyRoute: ResourceNewResIndexLazyRoute,
    ResourceNewResBrowserLazyRoute: ResourceNewResBrowserLazyRoute,
    ResourceNewResChatLazyRoute: ResourceNewResChatLazyRoute,
    ResourceNewResPlatformaccountLazyRoute:
      ResourceNewResPlatformaccountLazyRoute,
  }

const ResourceNewResRouteLazyRouteWithChildren =
  ResourceNewResRouteLazyRoute._addFileChildren(
    ResourceNewResRouteLazyRouteChildren,
  )

interface ResourceNewRouteLazyRouteChildren {
  ResourceNewResRouteLazyRoute: typeof ResourceNewResRouteLazyRouteWithChildren
}

const ResourceNewRouteLazyRouteChildren: ResourceNewRouteLazyRouteChildren = {
  ResourceNewResRouteLazyRoute: ResourceNewResRouteLazyRouteWithChildren,
}

const ResourceNewRouteLazyRouteWithChildren =
  ResourceNewRouteLazyRoute._addFileChildren(ResourceNewRouteLazyRouteChildren)

interface ResourceRouteLazyRouteChildren {
  ResourceIndexLazyRoute: typeof ResourceIndexLazyRoute
  ResourceResIdRouteLazyRoute: typeof ResourceResIdRouteLazyRouteWithChildren
  ResourceNewRouteLazyRoute: typeof ResourceNewRouteLazyRouteWithChildren
}

const ResourceRouteLazyRouteChildren: ResourceRouteLazyRouteChildren = {
  ResourceIndexLazyRoute: ResourceIndexLazyRoute,
  ResourceResIdRouteLazyRoute: ResourceResIdRouteLazyRouteWithChildren,
  ResourceNewRouteLazyRoute: ResourceNewRouteLazyRouteWithChildren,
}

const ResourceRouteLazyRouteWithChildren =
  ResourceRouteLazyRoute._addFileChildren(ResourceRouteLazyRouteChildren)

interface ScheduledRunsRouteLazyRouteChildren {
  ScheduledRunsIndexLazyRoute: typeof ScheduledRunsIndexLazyRoute
}

const ScheduledRunsRouteLazyRouteChildren: ScheduledRunsRouteLazyRouteChildren =
  {
    ScheduledRunsIndexLazyRoute: ScheduledRunsIndexLazyRoute,
  }

const ScheduledRunsRouteLazyRouteWithChildren =
  ScheduledRunsRouteLazyRoute._addFileChildren(
    ScheduledRunsRouteLazyRouteChildren,
  )

interface SiteSiteIdHostRouteRouteChildren {
  SiteSiteIdHostIndexRoute: typeof SiteSiteIdHostIndexRoute
}

const SiteSiteIdHostRouteRouteChildren: SiteSiteIdHostRouteRouteChildren = {
  SiteSiteIdHostIndexRoute: SiteSiteIdHostIndexRoute,
}

const SiteSiteIdHostRouteRouteWithChildren =
  SiteSiteIdHostRouteRoute._addFileChildren(SiteSiteIdHostRouteRouteChildren)

interface SiteRouteLazyRouteChildren {
  SiteIndexRoute: typeof SiteIndexRoute
  SiteSiteIdHostRouteRoute: typeof SiteSiteIdHostRouteRouteWithChildren
}

const SiteRouteLazyRouteChildren: SiteRouteLazyRouteChildren = {
  SiteIndexRoute: SiteIndexRoute,
  SiteSiteIdHostRouteRoute: SiteSiteIdHostRouteRouteWithChildren,
}

const SiteRouteLazyRouteWithChildren = SiteRouteLazyRoute._addFileChildren(
  SiteRouteLazyRouteChildren,
)

interface TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteChildren {
  TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute: typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute
}

const TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteChildren: TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteChildren =
  {
    TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute:
      TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute,
  }

const TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren =
  TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute._addFileChildren(
    TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteChildren,
  )

interface TenantSettingsTenantSettingIdRouteLazyRouteChildren {
  TenantSettingsTenantSettingIdIndexLazyRoute: typeof TenantSettingsTenantSettingIdIndexLazyRoute
  TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute: typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren
}

const TenantSettingsTenantSettingIdRouteLazyRouteChildren: TenantSettingsTenantSettingIdRouteLazyRouteChildren =
  {
    TenantSettingsTenantSettingIdIndexLazyRoute:
      TenantSettingsTenantSettingIdIndexLazyRoute,
    TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute:
      TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren,
  }

const TenantSettingsTenantSettingIdRouteLazyRouteWithChildren =
  TenantSettingsTenantSettingIdRouteLazyRoute._addFileChildren(
    TenantSettingsTenantSettingIdRouteLazyRouteChildren,
  )

interface TenantSettingsNewRouteLazyRouteChildren {
  TenantSettingsNewIndexLazyRoute: typeof TenantSettingsNewIndexLazyRoute
}

const TenantSettingsNewRouteLazyRouteChildren: TenantSettingsNewRouteLazyRouteChildren =
  {
    TenantSettingsNewIndexLazyRoute: TenantSettingsNewIndexLazyRoute,
  }

const TenantSettingsNewRouteLazyRouteWithChildren =
  TenantSettingsNewRouteLazyRoute._addFileChildren(
    TenantSettingsNewRouteLazyRouteChildren,
  )

interface TenantSettingsRouteLazyRouteChildren {
  TenantSettingsIndexLazyRoute: typeof TenantSettingsIndexLazyRoute
  TenantSettingsTenantSettingIdRouteLazyRoute: typeof TenantSettingsTenantSettingIdRouteLazyRouteWithChildren
  TenantSettingsNewRouteLazyRoute: typeof TenantSettingsNewRouteLazyRouteWithChildren
}

const TenantSettingsRouteLazyRouteChildren: TenantSettingsRouteLazyRouteChildren =
  {
    TenantSettingsIndexLazyRoute: TenantSettingsIndexLazyRoute,
    TenantSettingsTenantSettingIdRouteLazyRoute:
      TenantSettingsTenantSettingIdRouteLazyRouteWithChildren,
    TenantSettingsNewRouteLazyRoute:
      TenantSettingsNewRouteLazyRouteWithChildren,
  }

const TenantSettingsRouteLazyRouteWithChildren =
  TenantSettingsRouteLazyRoute._addFileChildren(
    TenantSettingsRouteLazyRouteChildren,
  )

interface TenantRouteLazyRouteChildren {
  TenantIndexLazyRoute: typeof TenantIndexLazyRoute
  TenantSettingsRouteLazyRoute: typeof TenantSettingsRouteLazyRouteWithChildren
}

const TenantRouteLazyRouteChildren: TenantRouteLazyRouteChildren = {
  TenantIndexLazyRoute: TenantIndexLazyRoute,
  TenantSettingsRouteLazyRoute: TenantSettingsRouteLazyRouteWithChildren,
}

const TenantRouteLazyRouteWithChildren = TenantRouteLazyRoute._addFileChildren(
  TenantRouteLazyRouteChildren,
)

interface TkRouteLazyRouteChildren {
  TkIndexLazyRoute: typeof TkIndexLazyRoute
}

const TkRouteLazyRouteChildren: TkRouteLazyRouteChildren = {
  TkIndexLazyRoute: TkIndexLazyRoute,
}

const TkRouteLazyRouteWithChildren = TkRouteLazyRoute._addFileChildren(
  TkRouteLazyRouteChildren,
)

interface WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdChatIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
}

const WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdChatIndexLazyRoute:
      WorkflowRunsWorkflowRunIdChatIndexLazyRoute,
  }

const WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdChatRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren,
  )

interface WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
}

const WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute:
      WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute,
  }

const WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren,
  )

interface WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
}

const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute:
      WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute,
  }

const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren,
  )

interface WorkflowRunsWorkflowRunIdRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute: typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  WorkflowRunsWorkflowRunIdChatRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren
  WorkflowRunsWorkflowRunIdInputLazyRoute: typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  WorkflowRunsWorkflowRunIdSummaryLazyRoute: typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren
  WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren
}

const WorkflowRunsWorkflowRunIdRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdIndexLazyRoute:
      WorkflowRunsWorkflowRunIdIndexLazyRoute,
    WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute:
      WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute,
    WorkflowRunsWorkflowRunIdChatRouteLazyRoute:
      WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren,
    WorkflowRunsWorkflowRunIdInputLazyRoute:
      WorkflowRunsWorkflowRunIdInputLazyRoute,
    WorkflowRunsWorkflowRunIdSummaryLazyRoute:
      WorkflowRunsWorkflowRunIdSummaryLazyRoute,
    WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute:
      WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren,
    WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute:
      WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren,
  }

const WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdRouteLazyRouteChildren,
  )

interface WorkflowRunsRouteLazyRouteChildren {
  WorkflowRunsIndexLazyRoute: typeof WorkflowRunsIndexLazyRoute
  WorkflowRunsWorkflowRunIdRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren
}

const WorkflowRunsRouteLazyRouteChildren: WorkflowRunsRouteLazyRouteChildren = {
  WorkflowRunsIndexLazyRoute: WorkflowRunsIndexLazyRoute,
  WorkflowRunsWorkflowRunIdRouteLazyRoute:
    WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren,
}

const WorkflowRunsRouteLazyRouteWithChildren =
  WorkflowRunsRouteLazyRoute._addFileChildren(
    WorkflowRunsRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerAgRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerAgIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerAgIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerAgRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerAgRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerAgIndexLazyRoute:
      WorkflowsWorkflowIdTriggerAgIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerAgRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerAgRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute:
      WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerComRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerComIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerComIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerComRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerComRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerComIndexLazyRoute:
      WorkflowsWorkflowIdTriggerComIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerComRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerComRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerModelRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerModelIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerModelIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerModelRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerModelRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerModelIndexLazyRoute:
      WorkflowsWorkflowIdTriggerModelIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerModelRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerModelRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerResearchRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerResearchIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerResearchIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerResearchRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerResearchRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerResearchIndexLazyRoute:
      WorkflowsWorkflowIdTriggerResearchIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerResearchRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerResearchRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute:
      WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerTeamRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerTeamIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerTeamIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerTeamRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerTeamRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerTeamIndexLazyRoute:
      WorkflowsWorkflowIdTriggerTeamIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerTeamRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerTeamRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerTenantRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerTenantIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerTenantIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerTenantRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerTenantRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerTenantIndexLazyRoute:
      WorkflowsWorkflowIdTriggerTenantIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerTenantRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerTenantRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute:
      WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerIndexLazyRoute
  WorkflowsWorkflowIdTriggerSplatLazyRoute: typeof WorkflowsWorkflowIdTriggerSplatLazyRoute
  WorkflowsWorkflowIdTriggerAgRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerComRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerModelRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerResearchRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerTeamRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerTenantRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren
}

const WorkflowsWorkflowIdTriggerRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerIndexLazyRoute:
      WorkflowsWorkflowIdTriggerIndexLazyRoute,
    WorkflowsWorkflowIdTriggerSplatLazyRoute:
      WorkflowsWorkflowIdTriggerSplatLazyRoute,
    WorkflowsWorkflowIdTriggerAgRouteLazyRoute:
      WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute:
      WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerComRouteLazyRoute:
      WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerModelRouteLazyRoute:
      WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerResearchRouteLazyRoute:
      WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute:
      WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerTeamRouteLazyRoute:
      WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerTenantRouteLazyRoute:
      WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute:
      WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren,
  }

const WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdRouteLazyRouteChildren {
  WorkflowsWorkflowIdIndexLazyRoute: typeof WorkflowsWorkflowIdIndexLazyRoute
  WorkflowsWorkflowIdTriggerRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren
}

const WorkflowsWorkflowIdRouteLazyRouteChildren: WorkflowsWorkflowIdRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdIndexLazyRoute: WorkflowsWorkflowIdIndexLazyRoute,
    WorkflowsWorkflowIdTriggerRouteLazyRoute:
      WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren,
  }

const WorkflowsWorkflowIdRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdRouteLazyRouteChildren,
  )

interface WorkflowsRouteLazyRouteChildren {
  WorkflowsIndexLazyRoute: typeof WorkflowsIndexLazyRoute
  WorkflowsWorkflowIdRouteLazyRoute: typeof WorkflowsWorkflowIdRouteLazyRouteWithChildren
}

const WorkflowsRouteLazyRouteChildren: WorkflowsRouteLazyRouteChildren = {
  WorkflowsIndexLazyRoute: WorkflowsIndexLazyRoute,
  WorkflowsWorkflowIdRouteLazyRoute:
    WorkflowsWorkflowIdRouteLazyRouteWithChildren,
}

const WorkflowsRouteLazyRouteWithChildren =
  WorkflowsRouteLazyRoute._addFileChildren(WorkflowsRouteLazyRouteChildren)

interface AdkSessionSessionIdRouteLazyRouteChildren {
  AdkSessionSessionIdIndexLazyRoute: typeof AdkSessionSessionIdIndexLazyRoute
}

const AdkSessionSessionIdRouteLazyRouteChildren: AdkSessionSessionIdRouteLazyRouteChildren =
  {
    AdkSessionSessionIdIndexLazyRoute: AdkSessionSessionIdIndexLazyRoute,
  }

const AdkSessionSessionIdRouteLazyRouteWithChildren =
  AdkSessionSessionIdRouteLazyRoute._addFileChildren(
    AdkSessionSessionIdRouteLazyRouteChildren,
  )

interface AdkSessionRouteLazyRouteChildren {
  AdkSessionIndexLazyRoute: typeof AdkSessionIndexLazyRoute
  AdkSessionSessionIdRouteLazyRoute: typeof AdkSessionSessionIdRouteLazyRouteWithChildren
}

const AdkSessionRouteLazyRouteChildren: AdkSessionRouteLazyRouteChildren = {
  AdkSessionIndexLazyRoute: AdkSessionIndexLazyRoute,
  AdkSessionSessionIdRouteLazyRoute:
    AdkSessionSessionIdRouteLazyRouteWithChildren,
}

const AdkSessionRouteLazyRouteWithChildren =
  AdkSessionRouteLazyRoute._addFileChildren(AdkSessionRouteLazyRouteChildren)

interface ComsComIdTeambuilderv2InstagramteamRouteLazyRouteChildren {
  ComsComIdTeambuilderv2InstagramteamIndexLazyRoute: typeof ComsComIdTeambuilderv2InstagramteamIndexLazyRoute
}

const ComsComIdTeambuilderv2InstagramteamRouteLazyRouteChildren: ComsComIdTeambuilderv2InstagramteamRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderv2InstagramteamIndexLazyRoute:
      ComsComIdTeambuilderv2InstagramteamIndexLazyRoute,
  }

const ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren =
  ComsComIdTeambuilderv2InstagramteamRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderv2InstagramteamRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteChildren {
  ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute: typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute
}

const ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteChildren: ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute:
      ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute,
  }

const ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren =
  ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agents': typeof AgentsRouteLazyRouteWithChildren
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/automate': typeof AutomateRouteLazyRouteWithChildren
  '/browser': typeof BrowserRouteLazyRouteWithChildren
  '/bundler': typeof BundlerRouteLazyRouteWithChildren
  '/chat': typeof ChatRouteLazyRouteWithChildren
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/events': typeof EventsRouteLazyRouteWithChildren
  '/mttask': typeof MttaskRouteLazyRouteWithChildren
  '/platform-account': typeof PlatformAccountRouteLazyRouteWithChildren
  '/proxy': typeof ProxyRouteLazyRouteWithChildren
  '/recurring': typeof RecurringRouteLazyRouteWithChildren
  '/resource': typeof ResourceRouteLazyRouteWithChildren
  '/scheduled-runs': typeof ScheduledRunsRouteLazyRouteWithChildren
  '/site': typeof SiteRouteLazyRouteWithChildren
  '/tenant': typeof TenantRouteLazyRouteWithChildren
  '/tk': typeof TkRouteLazyRouteWithChildren
  '/workflow-runs': typeof WorkflowRunsRouteLazyRouteWithChildren
  '/workflows': typeof WorkflowsRouteLazyRouteWithChildren
  '/site/': typeof SiteIndexRoute
  '/bundler/test111': typeof BundlerTest111Route
  '/envs/create': typeof EnvsCreateRoute
  '/agents/': typeof AgentsIndexLazyRoute
  '/automate/': typeof AutomateIndexLazyRoute
  '/browser/': typeof BrowserIndexLazyRoute
  '/chat/': typeof ChatIndexLazyRoute
  '/envs/': typeof EnvsIndexLazyRoute
  '/events/': typeof EventsIndexLazyRoute
  '/mttask/': typeof MttaskIndexLazyRoute
  '/platform-account/': typeof PlatformAccountIndexLazyRoute
  '/proxy/': typeof ProxyIndexLazyRoute
  '/recurring/': typeof RecurringIndexLazyRoute
  '/resource/': typeof ResourceIndexLazyRoute
  '/scheduled-runs/': typeof ScheduledRunsIndexLazyRoute
  '/tenant/': typeof TenantIndexLazyRoute
  '/tk/': typeof TkIndexLazyRoute
  '/workflow-runs/': typeof WorkflowRunsIndexLazyRoute
  '/workflows/': typeof WorkflowsIndexLazyRoute
  '/adk/session': typeof AdkSessionRouteLazyRouteWithChildren
  '/auth/login': typeof AuthLoginRouteLazyRouteWithChildren
  '/auth/register': typeof AuthRegisterLazyRoute
  '/platform-account/$platformAccountId': typeof PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren
  '/platform-account/new': typeof PlatformAccountNewRouteLazyRouteWithChildren
  '/proxy/$proxyId': typeof ProxyProxyIdRouteLazyRouteWithChildren
  '/proxy/new': typeof ProxyNewRouteLazyRoute
  '/resource/$resId': typeof ResourceResIdRouteLazyRouteWithChildren
  '/resource/new': typeof ResourceNewRouteLazyRouteWithChildren
  '/tenant/settings': typeof TenantSettingsRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdRouteLazyRouteWithChildren
  '/site/$siteId/host': typeof SiteSiteIdHostRouteRouteWithChildren
  '/adk/session/': typeof AdkSessionIndexLazyRoute
  '/auth/login/': typeof AuthLoginIndexLazyRoute
  '/chat/$sessionId': typeof ChatSessionIdIndexLazyRoute
  '/platform-account/$platformAccountId/': typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  '/platform-account/new/': typeof PlatformAccountNewIndexLazyRoute
  '/proxy/$proxyId/': typeof ProxyProxyIdIndexLazyRoute
  '/resource/$resId/': typeof ResourceResIdIndexLazyRoute
  '/tenant/settings/': typeof TenantSettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/': typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  '/workflows/$workflowId/': typeof WorkflowsWorkflowIdIndexLazyRoute
  '/adk/session/$sessionId': typeof AdkSessionSessionIdRouteLazyRouteWithChildren
  '/agents/$agent/$sessionId': typeof AgentsAgentSessionIdRouteLazyRouteWithChildren
  '/platform-account/$platformAccountId/actions': typeof PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren
  '/proxy/$proxyId/actions': typeof ProxyProxyIdActionsRouteLazyRouteWithChildren
  '/resource/$resId/platform_account': typeof ResourceResIdPlatformaccountRouteLazyRouteWithChildren
  '/resource/new/res': typeof ResourceNewResRouteLazyRouteWithChildren
  '/tenant/settings/$tenantSettingId': typeof TenantSettingsTenantSettingIdRouteLazyRouteWithChildren
  '/tenant/settings/new': typeof TenantSettingsNewRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/additional-metadata': typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  '/workflow-runs/$workflowRunId/chat': typeof WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/input': typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  '/workflow-runs/$workflowRunId/summary': typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  '/workflow-runs/$workflowRunId/visualization': typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger': typeof WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren
  '/site/$siteId/host/': typeof SiteSiteIdHostIndexRoute
  '/adk/session/$sessionId/': typeof AdkSessionSessionIdIndexLazyRoute
  '/agents/$agent/$sessionId/': typeof AgentsAgentSessionIdIndexLazyRoute
  '/platform-account/$platformAccountId/actions/': typeof PlatformAccountPlatformAccountIdActionsIndexLazyRoute
  '/proxy/$proxyId/actions/': typeof ProxyProxyIdActionsIndexLazyRoute
  '/resource/$resId/platform_account/': typeof ResourceResIdPlatformaccountIndexLazyRoute
  '/resource/new/res/': typeof ResourceNewResIndexLazyRoute
  '/tenant/settings/$tenantSettingId/': typeof TenantSettingsTenantSettingIdIndexLazyRoute
  '/tenant/settings/new/': typeof TenantSettingsNewIndexLazyRoute
  '/workflow-runs/$workflowRunId/chat/': typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
  '/workflow-runs/$workflowRunId/visualization/': typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
  '/workflows/$workflowId/trigger/': typeof WorkflowsWorkflowIdTriggerIndexLazyRoute
  '/agents/$agent/$sessionId/actions': typeof AgentsAgentSessionIdActionsRouteLazyRouteWithChildren
  '/agents/$agent/$sessionId/config': typeof AgentsAgentSessionIdConfigRouteLazyRouteWithChildren
  '/agents/$agent/$sessionId/state': typeof AgentsAgentSessionIdStateRouteLazyRouteWithChildren
  '/coms/$comId/team_builderv2/instagram_team': typeof ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren
  '/resource/new/res/browser': typeof ResourceNewResBrowserLazyRoute
  '/resource/new/res/chat': typeof ResourceNewResChatLazyRoute
  '/resource/new/res/platform_account': typeof ResourceNewResPlatformaccountLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings': typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/$': typeof WorkflowsWorkflowIdTriggerSplatLazyRoute
  '/workflows/$workflowId/trigger/ag': typeof WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/browser': typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/com': typeof WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/model': typeof WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/research': typeof WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/smola': typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/team': typeof WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/tenant': typeof WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/test_team': typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren
  '/agents/$agent/$sessionId/actions/': typeof AgentsAgentSessionIdActionsIndexLazyRoute
  '/agents/$agent/$sessionId/config/': typeof AgentsAgentSessionIdConfigIndexLazyRoute
  '/agents/$agent/$sessionId/state/': typeof AgentsAgentSessionIdStateIndexLazyRoute
  '/coms/$comId/team_builderv2/instagram_team/': typeof ComsComIdTeambuilderv2InstagramteamIndexLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings/': typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId/': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
  '/workflows/$workflowId/trigger/ag/': typeof WorkflowsWorkflowIdTriggerAgIndexLazyRoute
  '/workflows/$workflowId/trigger/browser/': typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute
  '/workflows/$workflowId/trigger/com/': typeof WorkflowsWorkflowIdTriggerComIndexLazyRoute
  '/workflows/$workflowId/trigger/model/': typeof WorkflowsWorkflowIdTriggerModelIndexLazyRoute
  '/workflows/$workflowId/trigger/research/': typeof WorkflowsWorkflowIdTriggerResearchIndexLazyRoute
  '/workflows/$workflowId/trigger/smola/': typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute
  '/workflows/$workflowId/trigger/team/': typeof WorkflowsWorkflowIdTriggerTeamIndexLazyRoute
  '/workflows/$workflowId/trigger/tenant/': typeof WorkflowsWorkflowIdTriggerTenantIndexLazyRoute
  '/workflows/$workflowId/trigger/test_team/': typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/model': typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/agent/$agentId/model/': typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/bundler': typeof BundlerRouteLazyRouteWithChildren
  '/site': typeof SiteIndexRoute
  '/bundler/test111': typeof BundlerTest111Route
  '/envs/create': typeof EnvsCreateRoute
  '/agents': typeof AgentsIndexLazyRoute
  '/automate': typeof AutomateIndexLazyRoute
  '/browser': typeof BrowserIndexLazyRoute
  '/chat': typeof ChatIndexLazyRoute
  '/envs': typeof EnvsIndexLazyRoute
  '/events': typeof EventsIndexLazyRoute
  '/mttask': typeof MttaskIndexLazyRoute
  '/platform-account': typeof PlatformAccountIndexLazyRoute
  '/proxy': typeof ProxyIndexLazyRoute
  '/recurring': typeof RecurringIndexLazyRoute
  '/resource': typeof ResourceIndexLazyRoute
  '/scheduled-runs': typeof ScheduledRunsIndexLazyRoute
  '/tenant': typeof TenantIndexLazyRoute
  '/tk': typeof TkIndexLazyRoute
  '/workflow-runs': typeof WorkflowRunsIndexLazyRoute
  '/workflows': typeof WorkflowsIndexLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/proxy/new': typeof ProxyNewRouteLazyRoute
  '/resource/new': typeof ResourceNewRouteLazyRouteWithChildren
  '/adk/session': typeof AdkSessionIndexLazyRoute
  '/auth/login': typeof AuthLoginIndexLazyRoute
  '/chat/$sessionId': typeof ChatSessionIdIndexLazyRoute
  '/platform-account/$platformAccountId': typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  '/platform-account/new': typeof PlatformAccountNewIndexLazyRoute
  '/proxy/$proxyId': typeof ProxyProxyIdIndexLazyRoute
  '/resource/$resId': typeof ResourceResIdIndexLazyRoute
  '/tenant/settings': typeof TenantSettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdIndexLazyRoute
  '/workflow-runs/$workflowRunId/additional-metadata': typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  '/workflow-runs/$workflowRunId/input': typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  '/workflow-runs/$workflowRunId/summary': typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  '/site/$siteId/host': typeof SiteSiteIdHostIndexRoute
  '/adk/session/$sessionId': typeof AdkSessionSessionIdIndexLazyRoute
  '/agents/$agent/$sessionId': typeof AgentsAgentSessionIdIndexLazyRoute
  '/platform-account/$platformAccountId/actions': typeof PlatformAccountPlatformAccountIdActionsIndexLazyRoute
  '/proxy/$proxyId/actions': typeof ProxyProxyIdActionsIndexLazyRoute
  '/resource/$resId/platform_account': typeof ResourceResIdPlatformaccountIndexLazyRoute
  '/resource/new/res': typeof ResourceNewResIndexLazyRoute
  '/tenant/settings/$tenantSettingId': typeof TenantSettingsTenantSettingIdIndexLazyRoute
  '/tenant/settings/new': typeof TenantSettingsNewIndexLazyRoute
  '/workflow-runs/$workflowRunId/chat': typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
  '/workflow-runs/$workflowRunId/visualization': typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
  '/workflows/$workflowId/trigger': typeof WorkflowsWorkflowIdTriggerIndexLazyRoute
  '/resource/new/res/browser': typeof ResourceNewResBrowserLazyRoute
  '/resource/new/res/chat': typeof ResourceNewResChatLazyRoute
  '/resource/new/res/platform_account': typeof ResourceNewResPlatformaccountLazyRoute
  '/workflows/$workflowId/trigger/$': typeof WorkflowsWorkflowIdTriggerSplatLazyRoute
  '/agents/$agent/$sessionId/actions': typeof AgentsAgentSessionIdActionsIndexLazyRoute
  '/agents/$agent/$sessionId/config': typeof AgentsAgentSessionIdConfigIndexLazyRoute
  '/agents/$agent/$sessionId/state': typeof AgentsAgentSessionIdStateIndexLazyRoute
  '/coms/$comId/team_builderv2/instagram_team': typeof ComsComIdTeambuilderv2InstagramteamIndexLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings': typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
  '/workflows/$workflowId/trigger/ag': typeof WorkflowsWorkflowIdTriggerAgIndexLazyRoute
  '/workflows/$workflowId/trigger/browser': typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute
  '/workflows/$workflowId/trigger/com': typeof WorkflowsWorkflowIdTriggerComIndexLazyRoute
  '/workflows/$workflowId/trigger/model': typeof WorkflowsWorkflowIdTriggerModelIndexLazyRoute
  '/workflows/$workflowId/trigger/research': typeof WorkflowsWorkflowIdTriggerResearchIndexLazyRoute
  '/workflows/$workflowId/trigger/smola': typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute
  '/workflows/$workflowId/trigger/team': typeof WorkflowsWorkflowIdTriggerTeamIndexLazyRoute
  '/workflows/$workflowId/trigger/tenant': typeof WorkflowsWorkflowIdTriggerTenantIndexLazyRoute
  '/workflows/$workflowId/trigger/test_team': typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/model': typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/agents': typeof AgentsRouteLazyRouteWithChildren
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/automate': typeof AutomateRouteLazyRouteWithChildren
  '/browser': typeof BrowserRouteLazyRouteWithChildren
  '/bundler': typeof BundlerRouteLazyRouteWithChildren
  '/chat': typeof ChatRouteLazyRouteWithChildren
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/events': typeof EventsRouteLazyRouteWithChildren
  '/mttask': typeof MttaskRouteLazyRouteWithChildren
  '/platform-account': typeof PlatformAccountRouteLazyRouteWithChildren
  '/proxy': typeof ProxyRouteLazyRouteWithChildren
  '/recurring': typeof RecurringRouteLazyRouteWithChildren
  '/resource': typeof ResourceRouteLazyRouteWithChildren
  '/scheduled-runs': typeof ScheduledRunsRouteLazyRouteWithChildren
  '/site': typeof SiteRouteLazyRouteWithChildren
  '/tenant': typeof TenantRouteLazyRouteWithChildren
  '/tk': typeof TkRouteLazyRouteWithChildren
  '/workflow-runs': typeof WorkflowRunsRouteLazyRouteWithChildren
  '/workflows': typeof WorkflowsRouteLazyRouteWithChildren
  '/site/': typeof SiteIndexRoute
  '/bundler/test111': typeof BundlerTest111Route
  '/envs/create': typeof EnvsCreateRoute
  '/agents/': typeof AgentsIndexLazyRoute
  '/automate/': typeof AutomateIndexLazyRoute
  '/browser/': typeof BrowserIndexLazyRoute
  '/chat/': typeof ChatIndexLazyRoute
  '/envs/': typeof EnvsIndexLazyRoute
  '/events/': typeof EventsIndexLazyRoute
  '/mttask/': typeof MttaskIndexLazyRoute
  '/platform-account/': typeof PlatformAccountIndexLazyRoute
  '/proxy/': typeof ProxyIndexLazyRoute
  '/recurring/': typeof RecurringIndexLazyRoute
  '/resource/': typeof ResourceIndexLazyRoute
  '/scheduled-runs/': typeof ScheduledRunsIndexLazyRoute
  '/tenant/': typeof TenantIndexLazyRoute
  '/tk/': typeof TkIndexLazyRoute
  '/workflow-runs/': typeof WorkflowRunsIndexLazyRoute
  '/workflows/': typeof WorkflowsIndexLazyRoute
  '/adk/session': typeof AdkSessionRouteLazyRouteWithChildren
  '/auth/login': typeof AuthLoginRouteLazyRouteWithChildren
  '/auth/register': typeof AuthRegisterLazyRoute
  '/platform-account/$platformAccountId': typeof PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren
  '/platform-account/new': typeof PlatformAccountNewRouteLazyRouteWithChildren
  '/proxy/$proxyId': typeof ProxyProxyIdRouteLazyRouteWithChildren
  '/proxy/new': typeof ProxyNewRouteLazyRoute
  '/resource/$resId': typeof ResourceResIdRouteLazyRouteWithChildren
  '/resource/new': typeof ResourceNewRouteLazyRouteWithChildren
  '/tenant/settings': typeof TenantSettingsRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdRouteLazyRouteWithChildren
  '/site/$siteId/host': typeof SiteSiteIdHostRouteRouteWithChildren
  '/adk/session/': typeof AdkSessionIndexLazyRoute
  '/auth/login/': typeof AuthLoginIndexLazyRoute
  '/chat/$sessionId/': typeof ChatSessionIdIndexLazyRoute
  '/platform-account/$platformAccountId/': typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  '/platform-account/new/': typeof PlatformAccountNewIndexLazyRoute
  '/proxy/$proxyId/': typeof ProxyProxyIdIndexLazyRoute
  '/resource/$resId/': typeof ResourceResIdIndexLazyRoute
  '/tenant/settings/': typeof TenantSettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/': typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  '/workflows/$workflowId/': typeof WorkflowsWorkflowIdIndexLazyRoute
  '/adk/session/$sessionId': typeof AdkSessionSessionIdRouteLazyRouteWithChildren
  '/agents/$agent/$sessionId': typeof AgentsAgentSessionIdRouteLazyRouteWithChildren
  '/platform-account/$platformAccountId/actions': typeof PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren
  '/proxy/$proxyId/actions': typeof ProxyProxyIdActionsRouteLazyRouteWithChildren
  '/resource/$resId/platform_account': typeof ResourceResIdPlatformaccountRouteLazyRouteWithChildren
  '/resource/new/res': typeof ResourceNewResRouteLazyRouteWithChildren
  '/tenant/settings/$tenantSettingId': typeof TenantSettingsTenantSettingIdRouteLazyRouteWithChildren
  '/tenant/settings/new': typeof TenantSettingsNewRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/additional-metadata': typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  '/workflow-runs/$workflowRunId/chat': typeof WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/input': typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  '/workflow-runs/$workflowRunId/summary': typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  '/workflow-runs/$workflowRunId/visualization': typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger': typeof WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren
  '/site/$siteId/host/': typeof SiteSiteIdHostIndexRoute
  '/adk/session/$sessionId/': typeof AdkSessionSessionIdIndexLazyRoute
  '/agents/$agent/$sessionId/': typeof AgentsAgentSessionIdIndexLazyRoute
  '/platform-account/$platformAccountId/actions/': typeof PlatformAccountPlatformAccountIdActionsIndexLazyRoute
  '/proxy/$proxyId/actions/': typeof ProxyProxyIdActionsIndexLazyRoute
  '/resource/$resId/platform_account/': typeof ResourceResIdPlatformaccountIndexLazyRoute
  '/resource/new/res/': typeof ResourceNewResIndexLazyRoute
  '/tenant/settings/$tenantSettingId/': typeof TenantSettingsTenantSettingIdIndexLazyRoute
  '/tenant/settings/new/': typeof TenantSettingsNewIndexLazyRoute
  '/workflow-runs/$workflowRunId/chat/': typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
  '/workflow-runs/$workflowRunId/visualization/': typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
  '/workflows/$workflowId/trigger/': typeof WorkflowsWorkflowIdTriggerIndexLazyRoute
  '/agents/$agent/$sessionId/actions': typeof AgentsAgentSessionIdActionsRouteLazyRouteWithChildren
  '/agents/$agent/$sessionId/config': typeof AgentsAgentSessionIdConfigRouteLazyRouteWithChildren
  '/agents/$agent/$sessionId/state': typeof AgentsAgentSessionIdStateRouteLazyRouteWithChildren
  '/coms/$comId/team_builderv2/instagram_team': typeof ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren
  '/resource/new/res/browser': typeof ResourceNewResBrowserLazyRoute
  '/resource/new/res/chat': typeof ResourceNewResChatLazyRoute
  '/resource/new/res/platform_account': typeof ResourceNewResPlatformaccountLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings': typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/$': typeof WorkflowsWorkflowIdTriggerSplatLazyRoute
  '/workflows/$workflowId/trigger/ag': typeof WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/browser': typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/com': typeof WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/model': typeof WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/research': typeof WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/smola': typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/team': typeof WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/tenant': typeof WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/test_team': typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren
  '/agents/$agent/$sessionId/actions/': typeof AgentsAgentSessionIdActionsIndexLazyRoute
  '/agents/$agent/$sessionId/config/': typeof AgentsAgentSessionIdConfigIndexLazyRoute
  '/agents/$agent/$sessionId/state/': typeof AgentsAgentSessionIdStateIndexLazyRoute
  '/coms/$comId/team_builderv2/instagram_team/': typeof ComsComIdTeambuilderv2InstagramteamIndexLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings/': typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId/': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
  '/workflows/$workflowId/trigger/ag/': typeof WorkflowsWorkflowIdTriggerAgIndexLazyRoute
  '/workflows/$workflowId/trigger/browser/': typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute
  '/workflows/$workflowId/trigger/com/': typeof WorkflowsWorkflowIdTriggerComIndexLazyRoute
  '/workflows/$workflowId/trigger/model/': typeof WorkflowsWorkflowIdTriggerModelIndexLazyRoute
  '/workflows/$workflowId/trigger/research/': typeof WorkflowsWorkflowIdTriggerResearchIndexLazyRoute
  '/workflows/$workflowId/trigger/smola/': typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute
  '/workflows/$workflowId/trigger/team/': typeof WorkflowsWorkflowIdTriggerTeamIndexLazyRoute
  '/workflows/$workflowId/trigger/tenant/': typeof WorkflowsWorkflowIdTriggerTenantIndexLazyRoute
  '/workflows/$workflowId/trigger/test_team/': typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/model': typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/agent/$agentId/model/': typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agents'
    | '/auth'
    | '/automate'
    | '/browser'
    | '/bundler'
    | '/chat'
    | '/envs'
    | '/events'
    | '/mttask'
    | '/platform-account'
    | '/proxy'
    | '/recurring'
    | '/resource'
    | '/scheduled-runs'
    | '/site'
    | '/tenant'
    | '/tk'
    | '/workflow-runs'
    | '/workflows'
    | '/site/'
    | '/bundler/test111'
    | '/envs/create'
    | '/agents/'
    | '/automate/'
    | '/browser/'
    | '/chat/'
    | '/envs/'
    | '/events/'
    | '/mttask/'
    | '/platform-account/'
    | '/proxy/'
    | '/recurring/'
    | '/resource/'
    | '/scheduled-runs/'
    | '/tenant/'
    | '/tk/'
    | '/workflow-runs/'
    | '/workflows/'
    | '/adk/session'
    | '/auth/login'
    | '/auth/register'
    | '/platform-account/$platformAccountId'
    | '/platform-account/new'
    | '/proxy/$proxyId'
    | '/proxy/new'
    | '/resource/$resId'
    | '/resource/new'
    | '/tenant/settings'
    | '/workflow-runs/$workflowRunId'
    | '/workflows/$workflowId'
    | '/site/$siteId/host'
    | '/adk/session/'
    | '/auth/login/'
    | '/chat/$sessionId'
    | '/platform-account/$platformAccountId/'
    | '/platform-account/new/'
    | '/proxy/$proxyId/'
    | '/resource/$resId/'
    | '/tenant/settings/'
    | '/workflow-runs/$workflowRunId/'
    | '/workflows/$workflowId/'
    | '/adk/session/$sessionId'
    | '/agents/$agent/$sessionId'
    | '/platform-account/$platformAccountId/actions'
    | '/proxy/$proxyId/actions'
    | '/resource/$resId/platform_account'
    | '/resource/new/res'
    | '/tenant/settings/$tenantSettingId'
    | '/tenant/settings/new'
    | '/workflow-runs/$workflowRunId/additional-metadata'
    | '/workflow-runs/$workflowRunId/chat'
    | '/workflow-runs/$workflowRunId/input'
    | '/workflow-runs/$workflowRunId/summary'
    | '/workflow-runs/$workflowRunId/visualization'
    | '/workflows/$workflowId/trigger'
    | '/site/$siteId/host/'
    | '/adk/session/$sessionId/'
    | '/agents/$agent/$sessionId/'
    | '/platform-account/$platformAccountId/actions/'
    | '/proxy/$proxyId/actions/'
    | '/resource/$resId/platform_account/'
    | '/resource/new/res/'
    | '/tenant/settings/$tenantSettingId/'
    | '/tenant/settings/new/'
    | '/workflow-runs/$workflowRunId/chat/'
    | '/workflow-runs/$workflowRunId/visualization/'
    | '/workflows/$workflowId/trigger/'
    | '/agents/$agent/$sessionId/actions'
    | '/agents/$agent/$sessionId/config'
    | '/agents/$agent/$sessionId/state'
    | '/coms/$comId/team_builderv2/instagram_team'
    | '/resource/new/res/browser'
    | '/resource/new/res/chat'
    | '/resource/new/res/platform_account'
    | '/tenant/settings/$tenantSettingId/model_settings'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
    | '/workflows/$workflowId/trigger/$'
    | '/workflows/$workflowId/trigger/ag'
    | '/workflows/$workflowId/trigger/browser'
    | '/workflows/$workflowId/trigger/com'
    | '/workflows/$workflowId/trigger/model'
    | '/workflows/$workflowId/trigger/research'
    | '/workflows/$workflowId/trigger/smola'
    | '/workflows/$workflowId/trigger/team'
    | '/workflows/$workflowId/trigger/tenant'
    | '/workflows/$workflowId/trigger/test_team'
    | '/agents/$agent/$sessionId/actions/'
    | '/agents/$agent/$sessionId/config/'
    | '/agents/$agent/$sessionId/state/'
    | '/coms/$comId/team_builderv2/instagram_team/'
    | '/tenant/settings/$tenantSettingId/model_settings/'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
    | '/workflows/$workflowId/trigger/ag/'
    | '/workflows/$workflowId/trigger/browser/'
    | '/workflows/$workflowId/trigger/com/'
    | '/workflows/$workflowId/trigger/model/'
    | '/workflows/$workflowId/trigger/research/'
    | '/workflows/$workflowId/trigger/smola/'
    | '/workflows/$workflowId/trigger/team/'
    | '/workflows/$workflowId/trigger/tenant/'
    | '/workflows/$workflowId/trigger/test_team/'
    | '/coms/$comId/team_builder/agent/$agentId/model'
    | '/coms/$comId/team_builder/agent/$agentId/model/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/bundler'
    | '/site'
    | '/bundler/test111'
    | '/envs/create'
    | '/agents'
    | '/automate'
    | '/browser'
    | '/chat'
    | '/envs'
    | '/events'
    | '/mttask'
    | '/platform-account'
    | '/proxy'
    | '/recurring'
    | '/resource'
    | '/scheduled-runs'
    | '/tenant'
    | '/tk'
    | '/workflow-runs'
    | '/workflows'
    | '/auth/register'
    | '/proxy/new'
    | '/resource/new'
    | '/adk/session'
    | '/auth/login'
    | '/chat/$sessionId'
    | '/platform-account/$platformAccountId'
    | '/platform-account/new'
    | '/proxy/$proxyId'
    | '/resource/$resId'
    | '/tenant/settings'
    | '/workflow-runs/$workflowRunId'
    | '/workflows/$workflowId'
    | '/workflow-runs/$workflowRunId/additional-metadata'
    | '/workflow-runs/$workflowRunId/input'
    | '/workflow-runs/$workflowRunId/summary'
    | '/site/$siteId/host'
    | '/adk/session/$sessionId'
    | '/agents/$agent/$sessionId'
    | '/platform-account/$platformAccountId/actions'
    | '/proxy/$proxyId/actions'
    | '/resource/$resId/platform_account'
    | '/resource/new/res'
    | '/tenant/settings/$tenantSettingId'
    | '/tenant/settings/new'
    | '/workflow-runs/$workflowRunId/chat'
    | '/workflow-runs/$workflowRunId/visualization'
    | '/workflows/$workflowId/trigger'
    | '/resource/new/res/browser'
    | '/resource/new/res/chat'
    | '/resource/new/res/platform_account'
    | '/workflows/$workflowId/trigger/$'
    | '/agents/$agent/$sessionId/actions'
    | '/agents/$agent/$sessionId/config'
    | '/agents/$agent/$sessionId/state'
    | '/coms/$comId/team_builderv2/instagram_team'
    | '/tenant/settings/$tenantSettingId/model_settings'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
    | '/workflows/$workflowId/trigger/ag'
    | '/workflows/$workflowId/trigger/browser'
    | '/workflows/$workflowId/trigger/com'
    | '/workflows/$workflowId/trigger/model'
    | '/workflows/$workflowId/trigger/research'
    | '/workflows/$workflowId/trigger/smola'
    | '/workflows/$workflowId/trigger/team'
    | '/workflows/$workflowId/trigger/tenant'
    | '/workflows/$workflowId/trigger/test_team'
    | '/coms/$comId/team_builder/agent/$agentId/model'
  id:
    | '__root__'
    | '/'
    | '/agents'
    | '/auth'
    | '/automate'
    | '/browser'
    | '/bundler'
    | '/chat'
    | '/envs'
    | '/events'
    | '/mttask'
    | '/platform-account'
    | '/proxy'
    | '/recurring'
    | '/resource'
    | '/scheduled-runs'
    | '/site'
    | '/tenant'
    | '/tk'
    | '/workflow-runs'
    | '/workflows'
    | '/site/'
    | '/bundler/test111'
    | '/envs/create'
    | '/agents/'
    | '/automate/'
    | '/browser/'
    | '/chat/'
    | '/envs/'
    | '/events/'
    | '/mttask/'
    | '/platform-account/'
    | '/proxy/'
    | '/recurring/'
    | '/resource/'
    | '/scheduled-runs/'
    | '/tenant/'
    | '/tk/'
    | '/workflow-runs/'
    | '/workflows/'
    | '/adk/session'
    | '/auth/login'
    | '/auth/register'
    | '/platform-account/$platformAccountId'
    | '/platform-account/new'
    | '/proxy/$proxyId'
    | '/proxy/new'
    | '/resource/$resId'
    | '/resource/new'
    | '/tenant/settings'
    | '/workflow-runs/$workflowRunId'
    | '/workflows/$workflowId'
    | '/site/$siteId/host'
    | '/adk/session/'
    | '/auth/login/'
    | '/chat/$sessionId/'
    | '/platform-account/$platformAccountId/'
    | '/platform-account/new/'
    | '/proxy/$proxyId/'
    | '/resource/$resId/'
    | '/tenant/settings/'
    | '/workflow-runs/$workflowRunId/'
    | '/workflows/$workflowId/'
    | '/adk/session/$sessionId'
    | '/agents/$agent/$sessionId'
    | '/platform-account/$platformAccountId/actions'
    | '/proxy/$proxyId/actions'
    | '/resource/$resId/platform_account'
    | '/resource/new/res'
    | '/tenant/settings/$tenantSettingId'
    | '/tenant/settings/new'
    | '/workflow-runs/$workflowRunId/additional-metadata'
    | '/workflow-runs/$workflowRunId/chat'
    | '/workflow-runs/$workflowRunId/input'
    | '/workflow-runs/$workflowRunId/summary'
    | '/workflow-runs/$workflowRunId/visualization'
    | '/workflows/$workflowId/trigger'
    | '/site/$siteId/host/'
    | '/adk/session/$sessionId/'
    | '/agents/$agent/$sessionId/'
    | '/platform-account/$platformAccountId/actions/'
    | '/proxy/$proxyId/actions/'
    | '/resource/$resId/platform_account/'
    | '/resource/new/res/'
    | '/tenant/settings/$tenantSettingId/'
    | '/tenant/settings/new/'
    | '/workflow-runs/$workflowRunId/chat/'
    | '/workflow-runs/$workflowRunId/visualization/'
    | '/workflows/$workflowId/trigger/'
    | '/agents/$agent/$sessionId/actions'
    | '/agents/$agent/$sessionId/config'
    | '/agents/$agent/$sessionId/state'
    | '/coms/$comId/team_builderv2/instagram_team'
    | '/resource/new/res/browser'
    | '/resource/new/res/chat'
    | '/resource/new/res/platform_account'
    | '/tenant/settings/$tenantSettingId/model_settings'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
    | '/workflows/$workflowId/trigger/$'
    | '/workflows/$workflowId/trigger/ag'
    | '/workflows/$workflowId/trigger/browser'
    | '/workflows/$workflowId/trigger/com'
    | '/workflows/$workflowId/trigger/model'
    | '/workflows/$workflowId/trigger/research'
    | '/workflows/$workflowId/trigger/smola'
    | '/workflows/$workflowId/trigger/team'
    | '/workflows/$workflowId/trigger/tenant'
    | '/workflows/$workflowId/trigger/test_team'
    | '/agents/$agent/$sessionId/actions/'
    | '/agents/$agent/$sessionId/config/'
    | '/agents/$agent/$sessionId/state/'
    | '/coms/$comId/team_builderv2/instagram_team/'
    | '/tenant/settings/$tenantSettingId/model_settings/'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
    | '/workflows/$workflowId/trigger/ag/'
    | '/workflows/$workflowId/trigger/browser/'
    | '/workflows/$workflowId/trigger/com/'
    | '/workflows/$workflowId/trigger/model/'
    | '/workflows/$workflowId/trigger/research/'
    | '/workflows/$workflowId/trigger/smola/'
    | '/workflows/$workflowId/trigger/team/'
    | '/workflows/$workflowId/trigger/tenant/'
    | '/workflows/$workflowId/trigger/test_team/'
    | '/coms/$comId/team_builder/agent/$agentId/model'
    | '/coms/$comId/team_builder/agent/$agentId/model/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgentsRouteLazyRoute: typeof AgentsRouteLazyRouteWithChildren
  AuthRouteLazyRoute: typeof AuthRouteLazyRouteWithChildren
  AutomateRouteLazyRoute: typeof AutomateRouteLazyRouteWithChildren
  BrowserRouteLazyRoute: typeof BrowserRouteLazyRouteWithChildren
  BundlerRouteLazyRoute: typeof BundlerRouteLazyRouteWithChildren
  ChatRouteLazyRoute: typeof ChatRouteLazyRouteWithChildren
  EnvsRouteLazyRoute: typeof EnvsRouteLazyRouteWithChildren
  EventsRouteLazyRoute: typeof EventsRouteLazyRouteWithChildren
  MttaskRouteLazyRoute: typeof MttaskRouteLazyRouteWithChildren
  PlatformAccountRouteLazyRoute: typeof PlatformAccountRouteLazyRouteWithChildren
  ProxyRouteLazyRoute: typeof ProxyRouteLazyRouteWithChildren
  RecurringRouteLazyRoute: typeof RecurringRouteLazyRouteWithChildren
  ResourceRouteLazyRoute: typeof ResourceRouteLazyRouteWithChildren
  ScheduledRunsRouteLazyRoute: typeof ScheduledRunsRouteLazyRouteWithChildren
  SiteRouteLazyRoute: typeof SiteRouteLazyRouteWithChildren
  TenantRouteLazyRoute: typeof TenantRouteLazyRouteWithChildren
  TkRouteLazyRoute: typeof TkRouteLazyRouteWithChildren
  WorkflowRunsRouteLazyRoute: typeof WorkflowRunsRouteLazyRouteWithChildren
  WorkflowsRouteLazyRoute: typeof WorkflowsRouteLazyRouteWithChildren
  AdkSessionRouteLazyRoute: typeof AdkSessionRouteLazyRouteWithChildren
  ComsComIdTeambuilderv2InstagramteamRouteLazyRoute: typeof ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren
  ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute: typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgentsRouteLazyRoute: AgentsRouteLazyRouteWithChildren,
  AuthRouteLazyRoute: AuthRouteLazyRouteWithChildren,
  AutomateRouteLazyRoute: AutomateRouteLazyRouteWithChildren,
  BrowserRouteLazyRoute: BrowserRouteLazyRouteWithChildren,
  BundlerRouteLazyRoute: BundlerRouteLazyRouteWithChildren,
  ChatRouteLazyRoute: ChatRouteLazyRouteWithChildren,
  EnvsRouteLazyRoute: EnvsRouteLazyRouteWithChildren,
  EventsRouteLazyRoute: EventsRouteLazyRouteWithChildren,
  MttaskRouteLazyRoute: MttaskRouteLazyRouteWithChildren,
  PlatformAccountRouteLazyRoute: PlatformAccountRouteLazyRouteWithChildren,
  ProxyRouteLazyRoute: ProxyRouteLazyRouteWithChildren,
  RecurringRouteLazyRoute: RecurringRouteLazyRouteWithChildren,
  ResourceRouteLazyRoute: ResourceRouteLazyRouteWithChildren,
  ScheduledRunsRouteLazyRoute: ScheduledRunsRouteLazyRouteWithChildren,
  SiteRouteLazyRoute: SiteRouteLazyRouteWithChildren,
  TenantRouteLazyRoute: TenantRouteLazyRouteWithChildren,
  TkRouteLazyRoute: TkRouteLazyRouteWithChildren,
  WorkflowRunsRouteLazyRoute: WorkflowRunsRouteLazyRouteWithChildren,
  WorkflowsRouteLazyRoute: WorkflowsRouteLazyRouteWithChildren,
  AdkSessionRouteLazyRoute: AdkSessionRouteLazyRouteWithChildren,
  ComsComIdTeambuilderv2InstagramteamRouteLazyRoute:
    ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren,
  ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute:
    ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/agents",
        "/auth",
        "/automate",
        "/browser",
        "/bundler",
        "/chat",
        "/envs",
        "/events",
        "/mttask",
        "/platform-account",
        "/proxy",
        "/recurring",
        "/resource",
        "/scheduled-runs",
        "/site",
        "/tenant",
        "/tk",
        "/workflow-runs",
        "/workflows",
        "/adk/session",
        "/coms/$comId/team_builderv2/instagram_team",
        "/coms/$comId/team_builder/agent/$agentId/model"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/agents": {
      "filePath": "~agents/~route.lazy.tsx",
      "children": [
        "/agents/",
        "/agents/$agent/$sessionId"
      ]
    },
    "/auth": {
      "filePath": "~auth/~route.lazy.tsx",
      "children": [
        "/auth/login",
        "/auth/register"
      ]
    },
    "/automate": {
      "filePath": "~automate/~route.lazy.tsx",
      "children": [
        "/automate/"
      ]
    },
    "/browser": {
      "filePath": "~browser/~route.lazy.tsx",
      "children": [
        "/browser/"
      ]
    },
    "/bundler": {
      "filePath": "~bundler/~route.lazy.tsx",
      "children": [
        "/bundler/test111"
      ]
    },
    "/chat": {
      "filePath": "~chat/~route.lazy.tsx",
      "children": [
        "/chat/",
        "/chat/$sessionId/"
      ]
    },
    "/envs": {
      "filePath": "~envs/~route.lazy.tsx",
      "children": [
        "/envs/create",
        "/envs/"
      ]
    },
    "/events": {
      "filePath": "~events/~route.lazy.tsx",
      "children": [
        "/events/"
      ]
    },
    "/mttask": {
      "filePath": "~mttask/~route.lazy.tsx",
      "children": [
        "/mttask/"
      ]
    },
    "/platform-account": {
      "filePath": "~platform-account/~route.lazy.tsx",
      "children": [
        "/platform-account/",
        "/platform-account/$platformAccountId",
        "/platform-account/new"
      ]
    },
    "/proxy": {
      "filePath": "~proxy/~route.lazy.tsx",
      "children": [
        "/proxy/",
        "/proxy/$proxyId",
        "/proxy/new"
      ]
    },
    "/recurring": {
      "filePath": "~recurring/~route.lazy.tsx",
      "children": [
        "/recurring/"
      ]
    },
    "/resource": {
      "filePath": "~resource/~route.lazy.tsx",
      "children": [
        "/resource/",
        "/resource/$resId",
        "/resource/new"
      ]
    },
    "/scheduled-runs": {
      "filePath": "~scheduled-runs/~route.lazy.tsx",
      "children": [
        "/scheduled-runs/"
      ]
    },
    "/site": {
      "filePath": "~site/~route.lazy.tsx",
      "children": [
        "/site/",
        "/site/$siteId/host"
      ]
    },
    "/tenant": {
      "filePath": "~tenant/~route.lazy.tsx",
      "children": [
        "/tenant/",
        "/tenant/settings"
      ]
    },
    "/tk": {
      "filePath": "~tk/~route.lazy.tsx",
      "children": [
        "/tk/"
      ]
    },
    "/workflow-runs": {
      "filePath": "~workflow-runs/~route.lazy.tsx",
      "children": [
        "/workflow-runs/",
        "/workflow-runs/$workflowRunId"
      ]
    },
    "/workflows": {
      "filePath": "~workflows/~route.lazy.tsx",
      "children": [
        "/workflows/",
        "/workflows/$workflowId"
      ]
    },
    "/site/": {
      "filePath": "~site/~index.tsx",
      "parent": "/site"
    },
    "/bundler/test111": {
      "filePath": "~bundler/~test111.tsx",
      "parent": "/bundler"
    },
    "/envs/create": {
      "filePath": "~envs/~create.tsx",
      "parent": "/envs"
    },
    "/agents/": {
      "filePath": "~agents/~index.lazy.tsx",
      "parent": "/agents"
    },
    "/automate/": {
      "filePath": "~automate/~index.lazy.tsx",
      "parent": "/automate"
    },
    "/browser/": {
      "filePath": "~browser/~index.lazy.tsx",
      "parent": "/browser"
    },
    "/chat/": {
      "filePath": "~chat/~index.lazy.tsx",
      "parent": "/chat"
    },
    "/envs/": {
      "filePath": "~envs/~index.lazy.tsx",
      "parent": "/envs"
    },
    "/events/": {
      "filePath": "~events/~index.lazy.tsx",
      "parent": "/events"
    },
    "/mttask/": {
      "filePath": "~mttask/~index.lazy.tsx",
      "parent": "/mttask"
    },
    "/platform-account/": {
      "filePath": "~platform-account/~index.lazy.tsx",
      "parent": "/platform-account"
    },
    "/proxy/": {
      "filePath": "~proxy/~index.lazy.tsx",
      "parent": "/proxy"
    },
    "/recurring/": {
      "filePath": "~recurring/~index.lazy.tsx",
      "parent": "/recurring"
    },
    "/resource/": {
      "filePath": "~resource/~index.lazy.tsx",
      "parent": "/resource"
    },
    "/scheduled-runs/": {
      "filePath": "~scheduled-runs/~index.lazy.tsx",
      "parent": "/scheduled-runs"
    },
    "/tenant/": {
      "filePath": "~tenant/~index.lazy.tsx",
      "parent": "/tenant"
    },
    "/tk/": {
      "filePath": "~tk/~index.lazy.tsx",
      "parent": "/tk"
    },
    "/workflow-runs/": {
      "filePath": "~workflow-runs/~index.lazy.tsx",
      "parent": "/workflow-runs"
    },
    "/workflows/": {
      "filePath": "~workflows/~index.lazy.tsx",
      "parent": "/workflows"
    },
    "/adk/session": {
      "filePath": "~adk/~session/~route.lazy.tsx",
      "children": [
        "/adk/session/",
        "/adk/session/$sessionId"
      ]
    },
    "/auth/login": {
      "filePath": "~auth/~login/~route.lazy.tsx",
      "parent": "/auth",
      "children": [
        "/auth/login/"
      ]
    },
    "/auth/register": {
      "filePath": "~auth/~register.lazy.tsx",
      "parent": "/auth"
    },
    "/platform-account/$platformAccountId": {
      "filePath": "~platform-account/~$platformAccountId/~route.lazy.tsx",
      "parent": "/platform-account",
      "children": [
        "/platform-account/$platformAccountId/",
        "/platform-account/$platformAccountId/actions"
      ]
    },
    "/platform-account/new": {
      "filePath": "~platform-account/~new/~route.lazy.tsx",
      "parent": "/platform-account",
      "children": [
        "/platform-account/new/"
      ]
    },
    "/proxy/$proxyId": {
      "filePath": "~proxy/~$proxyId/~route.lazy.tsx",
      "parent": "/proxy",
      "children": [
        "/proxy/$proxyId/",
        "/proxy/$proxyId/actions"
      ]
    },
    "/proxy/new": {
      "filePath": "~proxy/~new/~route.lazy.tsx",
      "parent": "/proxy"
    },
    "/resource/$resId": {
      "filePath": "~resource/~$resId/~route.lazy.tsx",
      "parent": "/resource",
      "children": [
        "/resource/$resId/",
        "/resource/$resId/platform_account"
      ]
    },
    "/resource/new": {
      "filePath": "~resource/~new/~route.lazy.tsx",
      "parent": "/resource",
      "children": [
        "/resource/new/res"
      ]
    },
    "/tenant/settings": {
      "filePath": "~tenant/~settings/~route.lazy.tsx",
      "parent": "/tenant",
      "children": [
        "/tenant/settings/",
        "/tenant/settings/$tenantSettingId",
        "/tenant/settings/new"
      ]
    },
    "/workflow-runs/$workflowRunId": {
      "filePath": "~workflow-runs/~$workflowRunId/~route.lazy.tsx",
      "parent": "/workflow-runs",
      "children": [
        "/workflow-runs/$workflowRunId/",
        "/workflow-runs/$workflowRunId/additional-metadata",
        "/workflow-runs/$workflowRunId/chat",
        "/workflow-runs/$workflowRunId/input",
        "/workflow-runs/$workflowRunId/summary",
        "/workflow-runs/$workflowRunId/visualization",
        "/workflow-runs/$workflowRunId/stepRun/$stepRunId"
      ]
    },
    "/workflows/$workflowId": {
      "filePath": "~workflows/~$workflowId/~route.lazy.tsx",
      "parent": "/workflows",
      "children": [
        "/workflows/$workflowId/",
        "/workflows/$workflowId/trigger"
      ]
    },
    "/site/$siteId/host": {
      "filePath": "~site/~$siteId/~host/~route.tsx",
      "parent": "/site",
      "children": [
        "/site/$siteId/host/"
      ]
    },
    "/adk/session/": {
      "filePath": "~adk/~session/~index.lazy.tsx",
      "parent": "/adk/session"
    },
    "/auth/login/": {
      "filePath": "~auth/~login/~index.lazy.tsx",
      "parent": "/auth/login"
    },
    "/chat/$sessionId/": {
      "filePath": "~chat/~$sessionId/~index.lazy.tsx",
      "parent": "/chat"
    },
    "/platform-account/$platformAccountId/": {
      "filePath": "~platform-account/~$platformAccountId/~index.lazy.tsx",
      "parent": "/platform-account/$platformAccountId"
    },
    "/platform-account/new/": {
      "filePath": "~platform-account/~new/~index.lazy.tsx",
      "parent": "/platform-account/new"
    },
    "/proxy/$proxyId/": {
      "filePath": "~proxy/~$proxyId/~index.lazy.tsx",
      "parent": "/proxy/$proxyId"
    },
    "/resource/$resId/": {
      "filePath": "~resource/~$resId/~index.lazy.tsx",
      "parent": "/resource/$resId"
    },
    "/tenant/settings/": {
      "filePath": "~tenant/~settings/~index.lazy.tsx",
      "parent": "/tenant/settings"
    },
    "/workflow-runs/$workflowRunId/": {
      "filePath": "~workflow-runs/~$workflowRunId/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflows/$workflowId/": {
      "filePath": "~workflows/~$workflowId/~index.lazy.tsx",
      "parent": "/workflows/$workflowId"
    },
    "/adk/session/$sessionId": {
      "filePath": "~adk/~session/~$sessionId/~route.lazy.tsx",
      "parent": "/adk/session",
      "children": [
        "/adk/session/$sessionId/"
      ]
    },
    "/agents/$agent/$sessionId": {
      "filePath": "~agents/~$agent/~$sessionId/~route.lazy.tsx",
      "parent": "/agents",
      "children": [
        "/agents/$agent/$sessionId/",
        "/agents/$agent/$sessionId/actions",
        "/agents/$agent/$sessionId/config",
        "/agents/$agent/$sessionId/state"
      ]
    },
    "/platform-account/$platformAccountId/actions": {
      "filePath": "~platform-account/~$platformAccountId/~actions/~route.lazy.tsx",
      "parent": "/platform-account/$platformAccountId",
      "children": [
        "/platform-account/$platformAccountId/actions/"
      ]
    },
    "/proxy/$proxyId/actions": {
      "filePath": "~proxy/~$proxyId/~actions/~route.lazy.tsx",
      "parent": "/proxy/$proxyId",
      "children": [
        "/proxy/$proxyId/actions/"
      ]
    },
    "/resource/$resId/platform_account": {
      "filePath": "~resource/~$resId/~platform_account/~route.lazy.tsx",
      "parent": "/resource/$resId",
      "children": [
        "/resource/$resId/platform_account/"
      ]
    },
    "/resource/new/res": {
      "filePath": "~resource/~new/~res/~route.lazy.tsx",
      "parent": "/resource/new",
      "children": [
        "/resource/new/res/",
        "/resource/new/res/browser",
        "/resource/new/res/chat",
        "/resource/new/res/platform_account"
      ]
    },
    "/tenant/settings/$tenantSettingId": {
      "filePath": "~tenant/~settings/~$tenantSettingId/~route.lazy.tsx",
      "parent": "/tenant/settings",
      "children": [
        "/tenant/settings/$tenantSettingId/",
        "/tenant/settings/$tenantSettingId/model_settings"
      ]
    },
    "/tenant/settings/new": {
      "filePath": "~tenant/~settings/~new/~route.lazy.tsx",
      "parent": "/tenant/settings",
      "children": [
        "/tenant/settings/new/"
      ]
    },
    "/workflow-runs/$workflowRunId/additional-metadata": {
      "filePath": "~workflow-runs/~$workflowRunId/~additional-metadata.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflow-runs/$workflowRunId/chat": {
      "filePath": "~workflow-runs/~$workflowRunId/~chat/~route.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId",
      "children": [
        "/workflow-runs/$workflowRunId/chat/"
      ]
    },
    "/workflow-runs/$workflowRunId/input": {
      "filePath": "~workflow-runs/~$workflowRunId/~input.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflow-runs/$workflowRunId/summary": {
      "filePath": "~workflow-runs/~$workflowRunId/~summary.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflow-runs/$workflowRunId/visualization": {
      "filePath": "~workflow-runs/~$workflowRunId/~visualization/~route.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId",
      "children": [
        "/workflow-runs/$workflowRunId/visualization/"
      ]
    },
    "/workflows/$workflowId/trigger": {
      "filePath": "~workflows/~$workflowId/~trigger/~route.lazy.tsx",
      "parent": "/workflows/$workflowId",
      "children": [
        "/workflows/$workflowId/trigger/",
        "/workflows/$workflowId/trigger/$",
        "/workflows/$workflowId/trigger/ag",
        "/workflows/$workflowId/trigger/browser",
        "/workflows/$workflowId/trigger/com",
        "/workflows/$workflowId/trigger/model",
        "/workflows/$workflowId/trigger/research",
        "/workflows/$workflowId/trigger/smola",
        "/workflows/$workflowId/trigger/team",
        "/workflows/$workflowId/trigger/tenant",
        "/workflows/$workflowId/trigger/test_team"
      ]
    },
    "/site/$siteId/host/": {
      "filePath": "~site/~$siteId/~host/~index.tsx",
      "parent": "/site/$siteId/host"
    },
    "/adk/session/$sessionId/": {
      "filePath": "~adk/~session/~$sessionId/~index.lazy.tsx",
      "parent": "/adk/session/$sessionId"
    },
    "/agents/$agent/$sessionId/": {
      "filePath": "~agents/~$agent/~$sessionId/~index.lazy.tsx",
      "parent": "/agents/$agent/$sessionId"
    },
    "/platform-account/$platformAccountId/actions/": {
      "filePath": "~platform-account/~$platformAccountId/~actions/~index.lazy.tsx",
      "parent": "/platform-account/$platformAccountId/actions"
    },
    "/proxy/$proxyId/actions/": {
      "filePath": "~proxy/~$proxyId/~actions/~index.lazy.tsx",
      "parent": "/proxy/$proxyId/actions"
    },
    "/resource/$resId/platform_account/": {
      "filePath": "~resource/~$resId/~platform_account/~index.lazy.tsx",
      "parent": "/resource/$resId/platform_account"
    },
    "/resource/new/res/": {
      "filePath": "~resource/~new/~res/~index.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/tenant/settings/$tenantSettingId/": {
      "filePath": "~tenant/~settings/~$tenantSettingId/~index.lazy.tsx",
      "parent": "/tenant/settings/$tenantSettingId"
    },
    "/tenant/settings/new/": {
      "filePath": "~tenant/~settings/~new/~index.lazy.tsx",
      "parent": "/tenant/settings/new"
    },
    "/workflow-runs/$workflowRunId/chat/": {
      "filePath": "~workflow-runs/~$workflowRunId/~chat/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId/chat"
    },
    "/workflow-runs/$workflowRunId/visualization/": {
      "filePath": "~workflow-runs/~$workflowRunId/~visualization/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId/visualization"
    },
    "/workflows/$workflowId/trigger/": {
      "filePath": "~workflows/~$workflowId/~trigger/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger"
    },
    "/agents/$agent/$sessionId/actions": {
      "filePath": "~agents/~$agent/~$sessionId/~actions/~route.lazy.tsx",
      "parent": "/agents/$agent/$sessionId",
      "children": [
        "/agents/$agent/$sessionId/actions/"
      ]
    },
    "/agents/$agent/$sessionId/config": {
      "filePath": "~agents/~$agent/~$sessionId/~config/~route.lazy.tsx",
      "parent": "/agents/$agent/$sessionId",
      "children": [
        "/agents/$agent/$sessionId/config/"
      ]
    },
    "/agents/$agent/$sessionId/state": {
      "filePath": "~agents/~$agent/~$sessionId/~state/~route.lazy.tsx",
      "parent": "/agents/$agent/$sessionId",
      "children": [
        "/agents/$agent/$sessionId/state/"
      ]
    },
    "/coms/$comId/team_builderv2/instagram_team": {
      "filePath": "~coms/~$comId/~team_builderv2/~instagram_team/~route.lazy.tsx",
      "children": [
        "/coms/$comId/team_builderv2/instagram_team/"
      ]
    },
    "/resource/new/res/browser": {
      "filePath": "~resource/~new/~res/~browser.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/resource/new/res/chat": {
      "filePath": "~resource/~new/~res/~chat.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/resource/new/res/platform_account": {
      "filePath": "~resource/~new/~res/~platform_account.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/tenant/settings/$tenantSettingId/model_settings": {
      "filePath": "~tenant/~settings/~$tenantSettingId/~model_settings/~route.lazy.tsx",
      "parent": "/tenant/settings/$tenantSettingId",
      "children": [
        "/tenant/settings/$tenantSettingId/model_settings/"
      ]
    },
    "/workflow-runs/$workflowRunId/stepRun/$stepRunId": {
      "filePath": "~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~route.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId",
      "children": [
        "/workflow-runs/$workflowRunId/stepRun/$stepRunId/"
      ]
    },
    "/workflows/$workflowId/trigger/$": {
      "filePath": "~workflows/~$workflowId/~trigger/~$.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger"
    },
    "/workflows/$workflowId/trigger/ag": {
      "filePath": "~workflows/~$workflowId/~trigger/~ag/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/ag/"
      ]
    },
    "/workflows/$workflowId/trigger/browser": {
      "filePath": "~workflows/~$workflowId/~trigger/~browser/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/browser/"
      ]
    },
    "/workflows/$workflowId/trigger/com": {
      "filePath": "~workflows/~$workflowId/~trigger/~com/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/com/"
      ]
    },
    "/workflows/$workflowId/trigger/model": {
      "filePath": "~workflows/~$workflowId/~trigger/~model/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/model/"
      ]
    },
    "/workflows/$workflowId/trigger/research": {
      "filePath": "~workflows/~$workflowId/~trigger/~research/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/research/"
      ]
    },
    "/workflows/$workflowId/trigger/smola": {
      "filePath": "~workflows/~$workflowId/~trigger/~smola/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/smola/"
      ]
    },
    "/workflows/$workflowId/trigger/team": {
      "filePath": "~workflows/~$workflowId/~trigger/~team/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/team/"
      ]
    },
    "/workflows/$workflowId/trigger/tenant": {
      "filePath": "~workflows/~$workflowId/~trigger/~tenant/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/tenant/"
      ]
    },
    "/workflows/$workflowId/trigger/test_team": {
      "filePath": "~workflows/~$workflowId/~trigger/~test_team/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/test_team/"
      ]
    },
    "/agents/$agent/$sessionId/actions/": {
      "filePath": "~agents/~$agent/~$sessionId/~actions/~index.lazy.tsx",
      "parent": "/agents/$agent/$sessionId/actions"
    },
    "/agents/$agent/$sessionId/config/": {
      "filePath": "~agents/~$agent/~$sessionId/~config/~index.lazy.tsx",
      "parent": "/agents/$agent/$sessionId/config"
    },
    "/agents/$agent/$sessionId/state/": {
      "filePath": "~agents/~$agent/~$sessionId/~state/~index.lazy.tsx",
      "parent": "/agents/$agent/$sessionId/state"
    },
    "/coms/$comId/team_builderv2/instagram_team/": {
      "filePath": "~coms/~$comId/~team_builderv2/~instagram_team/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builderv2/instagram_team"
    },
    "/tenant/settings/$tenantSettingId/model_settings/": {
      "filePath": "~tenant/~settings/~$tenantSettingId/~model_settings/~index.lazy.tsx",
      "parent": "/tenant/settings/$tenantSettingId/model_settings"
    },
    "/workflow-runs/$workflowRunId/stepRun/$stepRunId/": {
      "filePath": "~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId/stepRun/$stepRunId"
    },
    "/workflows/$workflowId/trigger/ag/": {
      "filePath": "~workflows/~$workflowId/~trigger/~ag/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/ag"
    },
    "/workflows/$workflowId/trigger/browser/": {
      "filePath": "~workflows/~$workflowId/~trigger/~browser/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/browser"
    },
    "/workflows/$workflowId/trigger/com/": {
      "filePath": "~workflows/~$workflowId/~trigger/~com/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/com"
    },
    "/workflows/$workflowId/trigger/model/": {
      "filePath": "~workflows/~$workflowId/~trigger/~model/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/model"
    },
    "/workflows/$workflowId/trigger/research/": {
      "filePath": "~workflows/~$workflowId/~trigger/~research/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/research"
    },
    "/workflows/$workflowId/trigger/smola/": {
      "filePath": "~workflows/~$workflowId/~trigger/~smola/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/smola"
    },
    "/workflows/$workflowId/trigger/team/": {
      "filePath": "~workflows/~$workflowId/~trigger/~team/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/team"
    },
    "/workflows/$workflowId/trigger/tenant/": {
      "filePath": "~workflows/~$workflowId/~trigger/~tenant/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/tenant"
    },
    "/workflows/$workflowId/trigger/test_team/": {
      "filePath": "~workflows/~$workflowId/~trigger/~test_team/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/test_team"
    },
    "/coms/$comId/team_builder/agent/$agentId/model": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~$agentId/~model/~route.lazy.tsx",
      "children": [
        "/coms/$comId/team_builder/agent/$agentId/model/"
      ]
    },
    "/coms/$comId/team_builder/agent/$agentId/model/": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~$agentId/~model/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builder/agent/$agentId/model"
    }
  }
}
ROUTE_MANIFEST_END */
