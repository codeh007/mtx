/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as AuthRouteImport } from './routes/~auth/~route'
import { Route as IndexImport } from './routes/~index'
import { Route as WorkflowRunsWorkflowRunIdImport } from './routes/~workflow-runs/~$workflowRunId'
import { Route as TeamTeamIdImport } from './routes/~team/~$teamId'
import { Route as SiteSiteIdRouteImport } from './routes/~site/~$siteId/~route'
import { Route as PlatformAccountCreateImport } from './routes/~platform-account/~create'
import { Route as PlatformAccountIdImport } from './routes/~platform-account/~$id'
import { Route as GalleryGalleryIdImport } from './routes/~gallery/~$galleryId'
import { Route as EnvsCreateImport } from './routes/~envs/~create'
import { Route as ChatCanvasImport } from './routes/~chat/~canvas'
import { Route as ChatChatSessionIdImport } from './routes/~chat/~$chatSessionId'
import { Route as AuthLoginRouteImport } from './routes/~auth/~login/~route'
import { Route as WorkflowsIndexImport } from './routes/~workflows/~index'
import { Route as WorkflowRunsIndexImport } from './routes/~workflow-runs/~index'
import { Route as SiteIndexImport } from './routes/~site/~index'
import { Route as PlatformIndexImport } from './routes/~platform/~index'
import { Route as GalleryIndexImport } from './routes/~gallery/~index'
import { Route as WorkflowsTriggerAssisantImport } from './routes/~workflows/~trigger/~assisant'
import { Route as WorkflowsTriggerIdImport } from './routes/~workflows/~trigger/~$id'
import { Route as SiteSiteIdHostRouteImport } from './routes/~site/~$siteId/~host/~route'
import { Route as SiteSiteIdEditImport } from './routes/~site/~$siteId/~edit'
import { Route as SiteCreateIndexImport } from './routes/~site/~create/~index'
import { Route as SiteSiteIdIndexImport } from './routes/~site/~$siteId/~index'
import { Route as OnboardingCreateTenantIndexImport } from './routes/~onboarding/~create-tenant/~index'
import { Route as SiteSiteIdHostIndexImport } from './routes/~site/~$siteId/~host/~index'

// Create Virtual Routes

const WorkflowsRouteLazyImport = createFileRoute('/workflows')()
const WorkflowRunsRouteLazyImport = createFileRoute('/workflow-runs')()
const TeamRouteLazyImport = createFileRoute('/team')()
const SiteRouteLazyImport = createFileRoute('/site')()
const PostRouteLazyImport = createFileRoute('/post')()
const PlatformAccountRouteLazyImport = createFileRoute('/platform-account')()
const PlatformRouteLazyImport = createFileRoute('/platform')()
const ModelRouteLazyImport = createFileRoute('/model')()
const GalleryRouteLazyImport = createFileRoute('/gallery')()
const EnvsRouteLazyImport = createFileRoute('/envs')()
const EndpointRouteLazyImport = createFileRoute('/endpoint')()
const ChatRouteLazyImport = createFileRoute('/chat')()
const AgEventsRouteLazyImport = createFileRoute('/agEvents')()
const WorkflowsWorkflowIdLazyImport = createFileRoute(
  '/workflows/$workflowId',
)()
const PostCreateLazyImport = createFileRoute('/post/create')()
const TeamIndexLazyImport = createFileRoute('/team/')()
const PostIndexLazyImport = createFileRoute('/post/')()
const PlatformAccountIndexLazyImport = createFileRoute('/platform-account/')()
const ModelIndexLazyImport = createFileRoute('/model/')()
const EnvsIndexLazyImport = createFileRoute('/envs/')()
const EndpointIndexLazyImport = createFileRoute('/endpoint/')()
const ChatIndexLazyImport = createFileRoute('/chat/')()
const AgEventsIndexLazyImport = createFileRoute('/agEvents/')()
const AuthLoginIndexLazyImport = createFileRoute('/auth/login/')()

// Create/Update Routes

const WorkflowsRouteLazyRoute = WorkflowsRouteLazyImport.update({
  id: '/workflows',
  path: '/workflows',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~workflows/~route.lazy').then((d) => d.Route),
)

const WorkflowRunsRouteLazyRoute = WorkflowRunsRouteLazyImport.update({
  id: '/workflow-runs',
  path: '/workflow-runs',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~workflow-runs/~route.lazy').then((d) => d.Route),
)

const TeamRouteLazyRoute = TeamRouteLazyImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~team/~route.lazy').then((d) => d.Route))

const SiteRouteLazyRoute = SiteRouteLazyImport.update({
  id: '/site',
  path: '/site',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~site/~route.lazy').then((d) => d.Route))

const PostRouteLazyRoute = PostRouteLazyImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~post/~route.lazy').then((d) => d.Route))

const PlatformAccountRouteLazyRoute = PlatformAccountRouteLazyImport.update({
  id: '/platform-account',
  path: '/platform-account',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~platform-account/~route.lazy').then((d) => d.Route),
)

const PlatformRouteLazyRoute = PlatformRouteLazyImport.update({
  id: '/platform',
  path: '/platform',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~platform/~route.lazy').then((d) => d.Route),
)

const ModelRouteLazyRoute = ModelRouteLazyImport.update({
  id: '/model',
  path: '/model',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~model/~route.lazy').then((d) => d.Route))

const GalleryRouteLazyRoute = GalleryRouteLazyImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~gallery/~route.lazy').then((d) => d.Route),
)

const EnvsRouteLazyRoute = EnvsRouteLazyImport.update({
  id: '/envs',
  path: '/envs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~envs/~route.lazy').then((d) => d.Route))

const EndpointRouteLazyRoute = EndpointRouteLazyImport.update({
  id: '/endpoint',
  path: '/endpoint',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~endpoint/~route.lazy').then((d) => d.Route),
)

const ChatRouteLazyRoute = ChatRouteLazyImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~chat/~route.lazy').then((d) => d.Route))

const AgEventsRouteLazyRoute = AgEventsRouteLazyImport.update({
  id: '/agEvents',
  path: '/agEvents',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~agEvents/~route.lazy').then((d) => d.Route),
)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowsWorkflowIdLazyRoute = WorkflowsWorkflowIdLazyImport.update({
  id: '/$workflowId',
  path: '/$workflowId',
  getParentRoute: () => WorkflowsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~workflows/~$workflowId.lazy').then((d) => d.Route),
)

const PostCreateLazyRoute = PostCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PostRouteLazyRoute,
} as any).lazy(() => import('./routes/~post/~create.lazy').then((d) => d.Route))

const TeamIndexLazyRoute = TeamIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TeamRouteLazyRoute,
} as any).lazy(() => import('./routes/~team/~index.lazy').then((d) => d.Route))

const PostIndexLazyRoute = PostIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostRouteLazyRoute,
} as any).lazy(() => import('./routes/~post/~index.lazy').then((d) => d.Route))

const PlatformAccountIndexLazyRoute = PlatformAccountIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlatformAccountRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~platform-account/~index.lazy').then((d) => d.Route),
)

const ModelIndexLazyRoute = ModelIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ModelRouteLazyRoute,
} as any).lazy(() => import('./routes/~model/~index.lazy').then((d) => d.Route))

const EnvsIndexLazyRoute = EnvsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EnvsRouteLazyRoute,
} as any).lazy(() => import('./routes/~envs/~index.lazy').then((d) => d.Route))

const EndpointIndexLazyRoute = EndpointIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EndpointRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~endpoint/~index.lazy').then((d) => d.Route),
)

const ChatIndexLazyRoute = ChatIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRouteLazyRoute,
} as any).lazy(() => import('./routes/~chat/~index.lazy').then((d) => d.Route))

const AgEventsIndexLazyRoute = AgEventsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AgEventsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~agEvents/~index.lazy').then((d) => d.Route),
)

const WorkflowRunsWorkflowRunIdRoute = WorkflowRunsWorkflowRunIdImport.update({
  id: '/$workflowRunId',
  path: '/$workflowRunId',
  getParentRoute: () => WorkflowRunsRouteLazyRoute,
} as any)

const TeamTeamIdRoute = TeamTeamIdImport.update({
  id: '/$teamId',
  path: '/$teamId',
  getParentRoute: () => TeamRouteLazyRoute,
} as any)

const SiteSiteIdRouteRoute = SiteSiteIdRouteImport.update({
  id: '/$siteId',
  path: '/$siteId',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const PlatformAccountCreateRoute = PlatformAccountCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PlatformAccountRouteLazyRoute,
} as any)

const PlatformAccountIdRoute = PlatformAccountIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => PlatformAccountRouteLazyRoute,
} as any)

const GalleryGalleryIdRoute = GalleryGalleryIdImport.update({
  id: '/$galleryId',
  path: '/$galleryId',
  getParentRoute: () => GalleryRouteLazyRoute,
} as any)

const EnvsCreateRoute = EnvsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => EnvsRouteLazyRoute,
} as any)

const ChatCanvasRoute = ChatCanvasImport.update({
  id: '/canvas',
  path: '/canvas',
  getParentRoute: () => ChatRouteLazyRoute,
} as any)

const ChatChatSessionIdRoute = ChatChatSessionIdImport.update({
  id: '/$chatSessionId',
  path: '/$chatSessionId',
  getParentRoute: () => ChatRouteLazyRoute,
} as any)

const AuthLoginRouteRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const WorkflowsIndexRoute = WorkflowsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkflowsRouteLazyRoute,
} as any)

const WorkflowRunsIndexRoute = WorkflowRunsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkflowRunsRouteLazyRoute,
} as any)

const SiteIndexRoute = SiteIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const PlatformIndexRoute = PlatformIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlatformRouteLazyRoute,
} as any)

const GalleryIndexRoute = GalleryIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GalleryRouteLazyRoute,
} as any)

const AuthLoginIndexLazyRoute = AuthLoginIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthLoginRouteRoute,
} as any).lazy(() =>
  import('./routes/~auth/~login/~index.lazy').then((d) => d.Route),
)

const WorkflowsTriggerAssisantRoute = WorkflowsTriggerAssisantImport.update({
  id: '/trigger/assisant',
  path: '/trigger/assisant',
  getParentRoute: () => WorkflowsRouteLazyRoute,
} as any)

const WorkflowsTriggerIdRoute = WorkflowsTriggerIdImport.update({
  id: '/trigger/$id',
  path: '/trigger/$id',
  getParentRoute: () => WorkflowsRouteLazyRoute,
} as any)

const SiteSiteIdHostRouteRoute = SiteSiteIdHostRouteImport.update({
  id: '/host',
  path: '/host',
  getParentRoute: () => SiteSiteIdRouteRoute,
} as any)

const SiteSiteIdEditRoute = SiteSiteIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => SiteSiteIdRouteRoute,
} as any)

const SiteCreateIndexRoute = SiteCreateIndexImport.update({
  id: '/create/',
  path: '/create/',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const SiteSiteIdIndexRoute = SiteSiteIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteSiteIdRouteRoute,
} as any)

const OnboardingCreateTenantIndexRoute =
  OnboardingCreateTenantIndexImport.update({
    id: '/onboarding/create-tenant/',
    path: '/onboarding/create-tenant/',
    getParentRoute: () => rootRoute,
  } as any)

const SiteSiteIdHostIndexRoute = SiteSiteIdHostIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteSiteIdHostRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/agEvents': {
      id: '/agEvents'
      path: '/agEvents'
      fullPath: '/agEvents'
      preLoaderRoute: typeof AgEventsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/endpoint': {
      id: '/endpoint'
      path: '/endpoint'
      fullPath: '/endpoint'
      preLoaderRoute: typeof EndpointRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/envs': {
      id: '/envs'
      path: '/envs'
      fullPath: '/envs'
      preLoaderRoute: typeof EnvsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/model': {
      id: '/model'
      path: '/model'
      fullPath: '/model'
      preLoaderRoute: typeof ModelRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/platform': {
      id: '/platform'
      path: '/platform'
      fullPath: '/platform'
      preLoaderRoute: typeof PlatformRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/platform-account': {
      id: '/platform-account'
      path: '/platform-account'
      fullPath: '/platform-account'
      preLoaderRoute: typeof PlatformAccountRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/site': {
      id: '/site'
      path: '/site'
      fullPath: '/site'
      preLoaderRoute: typeof SiteRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/team': {
      id: '/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/workflow-runs': {
      id: '/workflow-runs'
      path: '/workflow-runs'
      fullPath: '/workflow-runs'
      preLoaderRoute: typeof WorkflowRunsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/workflows': {
      id: '/workflows'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery/': {
      id: '/gallery/'
      path: '/'
      fullPath: '/gallery/'
      preLoaderRoute: typeof GalleryIndexImport
      parentRoute: typeof GalleryRouteLazyImport
    }
    '/platform/': {
      id: '/platform/'
      path: '/'
      fullPath: '/platform/'
      preLoaderRoute: typeof PlatformIndexImport
      parentRoute: typeof PlatformRouteLazyImport
    }
    '/site/': {
      id: '/site/'
      path: '/'
      fullPath: '/site/'
      preLoaderRoute: typeof SiteIndexImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/workflow-runs/': {
      id: '/workflow-runs/'
      path: '/'
      fullPath: '/workflow-runs/'
      preLoaderRoute: typeof WorkflowRunsIndexImport
      parentRoute: typeof WorkflowRunsRouteLazyImport
    }
    '/workflows/': {
      id: '/workflows/'
      path: '/'
      fullPath: '/workflows/'
      preLoaderRoute: typeof WorkflowsIndexImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/chat/$chatSessionId': {
      id: '/chat/$chatSessionId'
      path: '/$chatSessionId'
      fullPath: '/chat/$chatSessionId'
      preLoaderRoute: typeof ChatChatSessionIdImport
      parentRoute: typeof ChatRouteLazyImport
    }
    '/chat/canvas': {
      id: '/chat/canvas'
      path: '/canvas'
      fullPath: '/chat/canvas'
      preLoaderRoute: typeof ChatCanvasImport
      parentRoute: typeof ChatRouteLazyImport
    }
    '/envs/create': {
      id: '/envs/create'
      path: '/create'
      fullPath: '/envs/create'
      preLoaderRoute: typeof EnvsCreateImport
      parentRoute: typeof EnvsRouteLazyImport
    }
    '/gallery/$galleryId': {
      id: '/gallery/$galleryId'
      path: '/$galleryId'
      fullPath: '/gallery/$galleryId'
      preLoaderRoute: typeof GalleryGalleryIdImport
      parentRoute: typeof GalleryRouteLazyImport
    }
    '/platform-account/$id': {
      id: '/platform-account/$id'
      path: '/$id'
      fullPath: '/platform-account/$id'
      preLoaderRoute: typeof PlatformAccountIdImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/platform-account/create': {
      id: '/platform-account/create'
      path: '/create'
      fullPath: '/platform-account/create'
      preLoaderRoute: typeof PlatformAccountCreateImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/site/$siteId': {
      id: '/site/$siteId'
      path: '/$siteId'
      fullPath: '/site/$siteId'
      preLoaderRoute: typeof SiteSiteIdRouteImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/team/$teamId': {
      id: '/team/$teamId'
      path: '/$teamId'
      fullPath: '/team/$teamId'
      preLoaderRoute: typeof TeamTeamIdImport
      parentRoute: typeof TeamRouteLazyImport
    }
    '/workflow-runs/$workflowRunId': {
      id: '/workflow-runs/$workflowRunId'
      path: '/$workflowRunId'
      fullPath: '/workflow-runs/$workflowRunId'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdImport
      parentRoute: typeof WorkflowRunsRouteLazyImport
    }
    '/agEvents/': {
      id: '/agEvents/'
      path: '/'
      fullPath: '/agEvents/'
      preLoaderRoute: typeof AgEventsIndexLazyImport
      parentRoute: typeof AgEventsRouteLazyImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatIndexLazyImport
      parentRoute: typeof ChatRouteLazyImport
    }
    '/endpoint/': {
      id: '/endpoint/'
      path: '/'
      fullPath: '/endpoint/'
      preLoaderRoute: typeof EndpointIndexLazyImport
      parentRoute: typeof EndpointRouteLazyImport
    }
    '/envs/': {
      id: '/envs/'
      path: '/'
      fullPath: '/envs/'
      preLoaderRoute: typeof EnvsIndexLazyImport
      parentRoute: typeof EnvsRouteLazyImport
    }
    '/model/': {
      id: '/model/'
      path: '/'
      fullPath: '/model/'
      preLoaderRoute: typeof ModelIndexLazyImport
      parentRoute: typeof ModelRouteLazyImport
    }
    '/platform-account/': {
      id: '/platform-account/'
      path: '/'
      fullPath: '/platform-account/'
      preLoaderRoute: typeof PlatformAccountIndexLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/post/': {
      id: '/post/'
      path: '/'
      fullPath: '/post/'
      preLoaderRoute: typeof PostIndexLazyImport
      parentRoute: typeof PostRouteLazyImport
    }
    '/team/': {
      id: '/team/'
      path: '/'
      fullPath: '/team/'
      preLoaderRoute: typeof TeamIndexLazyImport
      parentRoute: typeof TeamRouteLazyImport
    }
    '/post/create': {
      id: '/post/create'
      path: '/create'
      fullPath: '/post/create'
      preLoaderRoute: typeof PostCreateLazyImport
      parentRoute: typeof PostRouteLazyImport
    }
    '/workflows/$workflowId': {
      id: '/workflows/$workflowId'
      path: '/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof WorkflowsWorkflowIdLazyImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/onboarding/create-tenant/': {
      id: '/onboarding/create-tenant/'
      path: '/onboarding/create-tenant'
      fullPath: '/onboarding/create-tenant'
      preLoaderRoute: typeof OnboardingCreateTenantIndexImport
      parentRoute: typeof rootRoute
    }
    '/site/$siteId/': {
      id: '/site/$siteId/'
      path: '/'
      fullPath: '/site/$siteId/'
      preLoaderRoute: typeof SiteSiteIdIndexImport
      parentRoute: typeof SiteSiteIdRouteImport
    }
    '/site/create/': {
      id: '/site/create/'
      path: '/create'
      fullPath: '/site/create'
      preLoaderRoute: typeof SiteCreateIndexImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/site/$siteId/edit': {
      id: '/site/$siteId/edit'
      path: '/edit'
      fullPath: '/site/$siteId/edit'
      preLoaderRoute: typeof SiteSiteIdEditImport
      parentRoute: typeof SiteSiteIdRouteImport
    }
    '/site/$siteId/host': {
      id: '/site/$siteId/host'
      path: '/host'
      fullPath: '/site/$siteId/host'
      preLoaderRoute: typeof SiteSiteIdHostRouteImport
      parentRoute: typeof SiteSiteIdRouteImport
    }
    '/workflows/trigger/$id': {
      id: '/workflows/trigger/$id'
      path: '/trigger/$id'
      fullPath: '/workflows/trigger/$id'
      preLoaderRoute: typeof WorkflowsTriggerIdImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/workflows/trigger/assisant': {
      id: '/workflows/trigger/assisant'
      path: '/trigger/assisant'
      fullPath: '/workflows/trigger/assisant'
      preLoaderRoute: typeof WorkflowsTriggerAssisantImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/'
      fullPath: '/auth/login/'
      preLoaderRoute: typeof AuthLoginIndexLazyImport
      parentRoute: typeof AuthLoginRouteImport
    }
    '/site/$siteId/host/': {
      id: '/site/$siteId/host/'
      path: '/'
      fullPath: '/site/$siteId/host/'
      preLoaderRoute: typeof SiteSiteIdHostIndexImport
      parentRoute: typeof SiteSiteIdHostRouteImport
    }
  }
}

// Create and export the route tree

interface AuthLoginRouteRouteChildren {
  AuthLoginIndexLazyRoute: typeof AuthLoginIndexLazyRoute
}

const AuthLoginRouteRouteChildren: AuthLoginRouteRouteChildren = {
  AuthLoginIndexLazyRoute: AuthLoginIndexLazyRoute,
}

const AuthLoginRouteRouteWithChildren = AuthLoginRouteRoute._addFileChildren(
  AuthLoginRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRouteRoute: typeof AuthLoginRouteRouteWithChildren
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRouteRoute: AuthLoginRouteRouteWithChildren,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface AgEventsRouteLazyRouteChildren {
  AgEventsIndexLazyRoute: typeof AgEventsIndexLazyRoute
}

const AgEventsRouteLazyRouteChildren: AgEventsRouteLazyRouteChildren = {
  AgEventsIndexLazyRoute: AgEventsIndexLazyRoute,
}

const AgEventsRouteLazyRouteWithChildren =
  AgEventsRouteLazyRoute._addFileChildren(AgEventsRouteLazyRouteChildren)

interface ChatRouteLazyRouteChildren {
  ChatChatSessionIdRoute: typeof ChatChatSessionIdRoute
  ChatCanvasRoute: typeof ChatCanvasRoute
  ChatIndexLazyRoute: typeof ChatIndexLazyRoute
}

const ChatRouteLazyRouteChildren: ChatRouteLazyRouteChildren = {
  ChatChatSessionIdRoute: ChatChatSessionIdRoute,
  ChatCanvasRoute: ChatCanvasRoute,
  ChatIndexLazyRoute: ChatIndexLazyRoute,
}

const ChatRouteLazyRouteWithChildren = ChatRouteLazyRoute._addFileChildren(
  ChatRouteLazyRouteChildren,
)

interface EndpointRouteLazyRouteChildren {
  EndpointIndexLazyRoute: typeof EndpointIndexLazyRoute
}

const EndpointRouteLazyRouteChildren: EndpointRouteLazyRouteChildren = {
  EndpointIndexLazyRoute: EndpointIndexLazyRoute,
}

const EndpointRouteLazyRouteWithChildren =
  EndpointRouteLazyRoute._addFileChildren(EndpointRouteLazyRouteChildren)

interface EnvsRouteLazyRouteChildren {
  EnvsCreateRoute: typeof EnvsCreateRoute
  EnvsIndexLazyRoute: typeof EnvsIndexLazyRoute
}

const EnvsRouteLazyRouteChildren: EnvsRouteLazyRouteChildren = {
  EnvsCreateRoute: EnvsCreateRoute,
  EnvsIndexLazyRoute: EnvsIndexLazyRoute,
}

const EnvsRouteLazyRouteWithChildren = EnvsRouteLazyRoute._addFileChildren(
  EnvsRouteLazyRouteChildren,
)

interface GalleryRouteLazyRouteChildren {
  GalleryIndexRoute: typeof GalleryIndexRoute
  GalleryGalleryIdRoute: typeof GalleryGalleryIdRoute
}

const GalleryRouteLazyRouteChildren: GalleryRouteLazyRouteChildren = {
  GalleryIndexRoute: GalleryIndexRoute,
  GalleryGalleryIdRoute: GalleryGalleryIdRoute,
}

const GalleryRouteLazyRouteWithChildren =
  GalleryRouteLazyRoute._addFileChildren(GalleryRouteLazyRouteChildren)

interface ModelRouteLazyRouteChildren {
  ModelIndexLazyRoute: typeof ModelIndexLazyRoute
}

const ModelRouteLazyRouteChildren: ModelRouteLazyRouteChildren = {
  ModelIndexLazyRoute: ModelIndexLazyRoute,
}

const ModelRouteLazyRouteWithChildren = ModelRouteLazyRoute._addFileChildren(
  ModelRouteLazyRouteChildren,
)

interface PlatformRouteLazyRouteChildren {
  PlatformIndexRoute: typeof PlatformIndexRoute
}

const PlatformRouteLazyRouteChildren: PlatformRouteLazyRouteChildren = {
  PlatformIndexRoute: PlatformIndexRoute,
}

const PlatformRouteLazyRouteWithChildren =
  PlatformRouteLazyRoute._addFileChildren(PlatformRouteLazyRouteChildren)

interface PlatformAccountRouteLazyRouteChildren {
  PlatformAccountIdRoute: typeof PlatformAccountIdRoute
  PlatformAccountCreateRoute: typeof PlatformAccountCreateRoute
  PlatformAccountIndexLazyRoute: typeof PlatformAccountIndexLazyRoute
}

const PlatformAccountRouteLazyRouteChildren: PlatformAccountRouteLazyRouteChildren =
  {
    PlatformAccountIdRoute: PlatformAccountIdRoute,
    PlatformAccountCreateRoute: PlatformAccountCreateRoute,
    PlatformAccountIndexLazyRoute: PlatformAccountIndexLazyRoute,
  }

const PlatformAccountRouteLazyRouteWithChildren =
  PlatformAccountRouteLazyRoute._addFileChildren(
    PlatformAccountRouteLazyRouteChildren,
  )

interface PostRouteLazyRouteChildren {
  PostIndexLazyRoute: typeof PostIndexLazyRoute
  PostCreateLazyRoute: typeof PostCreateLazyRoute
}

const PostRouteLazyRouteChildren: PostRouteLazyRouteChildren = {
  PostIndexLazyRoute: PostIndexLazyRoute,
  PostCreateLazyRoute: PostCreateLazyRoute,
}

const PostRouteLazyRouteWithChildren = PostRouteLazyRoute._addFileChildren(
  PostRouteLazyRouteChildren,
)

interface SiteSiteIdHostRouteRouteChildren {
  SiteSiteIdHostIndexRoute: typeof SiteSiteIdHostIndexRoute
}

const SiteSiteIdHostRouteRouteChildren: SiteSiteIdHostRouteRouteChildren = {
  SiteSiteIdHostIndexRoute: SiteSiteIdHostIndexRoute,
}

const SiteSiteIdHostRouteRouteWithChildren =
  SiteSiteIdHostRouteRoute._addFileChildren(SiteSiteIdHostRouteRouteChildren)

interface SiteSiteIdRouteRouteChildren {
  SiteSiteIdIndexRoute: typeof SiteSiteIdIndexRoute
  SiteSiteIdEditRoute: typeof SiteSiteIdEditRoute
  SiteSiteIdHostRouteRoute: typeof SiteSiteIdHostRouteRouteWithChildren
}

const SiteSiteIdRouteRouteChildren: SiteSiteIdRouteRouteChildren = {
  SiteSiteIdIndexRoute: SiteSiteIdIndexRoute,
  SiteSiteIdEditRoute: SiteSiteIdEditRoute,
  SiteSiteIdHostRouteRoute: SiteSiteIdHostRouteRouteWithChildren,
}

const SiteSiteIdRouteRouteWithChildren = SiteSiteIdRouteRoute._addFileChildren(
  SiteSiteIdRouteRouteChildren,
)

interface SiteRouteLazyRouteChildren {
  SiteIndexRoute: typeof SiteIndexRoute
  SiteSiteIdRouteRoute: typeof SiteSiteIdRouteRouteWithChildren
  SiteCreateIndexRoute: typeof SiteCreateIndexRoute
}

const SiteRouteLazyRouteChildren: SiteRouteLazyRouteChildren = {
  SiteIndexRoute: SiteIndexRoute,
  SiteSiteIdRouteRoute: SiteSiteIdRouteRouteWithChildren,
  SiteCreateIndexRoute: SiteCreateIndexRoute,
}

const SiteRouteLazyRouteWithChildren = SiteRouteLazyRoute._addFileChildren(
  SiteRouteLazyRouteChildren,
)

interface TeamRouteLazyRouteChildren {
  TeamTeamIdRoute: typeof TeamTeamIdRoute
  TeamIndexLazyRoute: typeof TeamIndexLazyRoute
}

const TeamRouteLazyRouteChildren: TeamRouteLazyRouteChildren = {
  TeamTeamIdRoute: TeamTeamIdRoute,
  TeamIndexLazyRoute: TeamIndexLazyRoute,
}

const TeamRouteLazyRouteWithChildren = TeamRouteLazyRoute._addFileChildren(
  TeamRouteLazyRouteChildren,
)

interface WorkflowRunsRouteLazyRouteChildren {
  WorkflowRunsIndexRoute: typeof WorkflowRunsIndexRoute
  WorkflowRunsWorkflowRunIdRoute: typeof WorkflowRunsWorkflowRunIdRoute
}

const WorkflowRunsRouteLazyRouteChildren: WorkflowRunsRouteLazyRouteChildren = {
  WorkflowRunsIndexRoute: WorkflowRunsIndexRoute,
  WorkflowRunsWorkflowRunIdRoute: WorkflowRunsWorkflowRunIdRoute,
}

const WorkflowRunsRouteLazyRouteWithChildren =
  WorkflowRunsRouteLazyRoute._addFileChildren(
    WorkflowRunsRouteLazyRouteChildren,
  )

interface WorkflowsRouteLazyRouteChildren {
  WorkflowsIndexRoute: typeof WorkflowsIndexRoute
  WorkflowsWorkflowIdLazyRoute: typeof WorkflowsWorkflowIdLazyRoute
  WorkflowsTriggerIdRoute: typeof WorkflowsTriggerIdRoute
  WorkflowsTriggerAssisantRoute: typeof WorkflowsTriggerAssisantRoute
}

const WorkflowsRouteLazyRouteChildren: WorkflowsRouteLazyRouteChildren = {
  WorkflowsIndexRoute: WorkflowsIndexRoute,
  WorkflowsWorkflowIdLazyRoute: WorkflowsWorkflowIdLazyRoute,
  WorkflowsTriggerIdRoute: WorkflowsTriggerIdRoute,
  WorkflowsTriggerAssisantRoute: WorkflowsTriggerAssisantRoute,
}

const WorkflowsRouteLazyRouteWithChildren =
  WorkflowsRouteLazyRoute._addFileChildren(WorkflowsRouteLazyRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/agEvents': typeof AgEventsRouteLazyRouteWithChildren
  '/chat': typeof ChatRouteLazyRouteWithChildren
  '/endpoint': typeof EndpointRouteLazyRouteWithChildren
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/gallery': typeof GalleryRouteLazyRouteWithChildren
  '/model': typeof ModelRouteLazyRouteWithChildren
  '/platform': typeof PlatformRouteLazyRouteWithChildren
  '/platform-account': typeof PlatformAccountRouteLazyRouteWithChildren
  '/post': typeof PostRouteLazyRouteWithChildren
  '/site': typeof SiteRouteLazyRouteWithChildren
  '/team': typeof TeamRouteLazyRouteWithChildren
  '/workflow-runs': typeof WorkflowRunsRouteLazyRouteWithChildren
  '/workflows': typeof WorkflowsRouteLazyRouteWithChildren
  '/gallery/': typeof GalleryIndexRoute
  '/platform/': typeof PlatformIndexRoute
  '/site/': typeof SiteIndexRoute
  '/workflow-runs/': typeof WorkflowRunsIndexRoute
  '/workflows/': typeof WorkflowsIndexRoute
  '/auth/login': typeof AuthLoginRouteRouteWithChildren
  '/chat/$chatSessionId': typeof ChatChatSessionIdRoute
  '/chat/canvas': typeof ChatCanvasRoute
  '/envs/create': typeof EnvsCreateRoute
  '/gallery/$galleryId': typeof GalleryGalleryIdRoute
  '/platform-account/$id': typeof PlatformAccountIdRoute
  '/platform-account/create': typeof PlatformAccountCreateRoute
  '/site/$siteId': typeof SiteSiteIdRouteRouteWithChildren
  '/team/$teamId': typeof TeamTeamIdRoute
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdRoute
  '/agEvents/': typeof AgEventsIndexLazyRoute
  '/chat/': typeof ChatIndexLazyRoute
  '/endpoint/': typeof EndpointIndexLazyRoute
  '/envs/': typeof EnvsIndexLazyRoute
  '/model/': typeof ModelIndexLazyRoute
  '/platform-account/': typeof PlatformAccountIndexLazyRoute
  '/post/': typeof PostIndexLazyRoute
  '/team/': typeof TeamIndexLazyRoute
  '/post/create': typeof PostCreateLazyRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdLazyRoute
  '/onboarding/create-tenant': typeof OnboardingCreateTenantIndexRoute
  '/site/$siteId/': typeof SiteSiteIdIndexRoute
  '/site/create': typeof SiteCreateIndexRoute
  '/site/$siteId/edit': typeof SiteSiteIdEditRoute
  '/site/$siteId/host': typeof SiteSiteIdHostRouteRouteWithChildren
  '/workflows/trigger/$id': typeof WorkflowsTriggerIdRoute
  '/workflows/trigger/assisant': typeof WorkflowsTriggerAssisantRoute
  '/auth/login/': typeof AuthLoginIndexLazyRoute
  '/site/$siteId/host/': typeof SiteSiteIdHostIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/gallery': typeof GalleryIndexRoute
  '/platform': typeof PlatformIndexRoute
  '/site': typeof SiteIndexRoute
  '/workflow-runs': typeof WorkflowRunsIndexRoute
  '/workflows': typeof WorkflowsIndexRoute
  '/chat/$chatSessionId': typeof ChatChatSessionIdRoute
  '/chat/canvas': typeof ChatCanvasRoute
  '/envs/create': typeof EnvsCreateRoute
  '/gallery/$galleryId': typeof GalleryGalleryIdRoute
  '/platform-account/$id': typeof PlatformAccountIdRoute
  '/platform-account/create': typeof PlatformAccountCreateRoute
  '/team/$teamId': typeof TeamTeamIdRoute
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdRoute
  '/agEvents': typeof AgEventsIndexLazyRoute
  '/chat': typeof ChatIndexLazyRoute
  '/endpoint': typeof EndpointIndexLazyRoute
  '/envs': typeof EnvsIndexLazyRoute
  '/model': typeof ModelIndexLazyRoute
  '/platform-account': typeof PlatformAccountIndexLazyRoute
  '/post': typeof PostIndexLazyRoute
  '/team': typeof TeamIndexLazyRoute
  '/post/create': typeof PostCreateLazyRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdLazyRoute
  '/onboarding/create-tenant': typeof OnboardingCreateTenantIndexRoute
  '/site/$siteId': typeof SiteSiteIdIndexRoute
  '/site/create': typeof SiteCreateIndexRoute
  '/site/$siteId/edit': typeof SiteSiteIdEditRoute
  '/workflows/trigger/$id': typeof WorkflowsTriggerIdRoute
  '/workflows/trigger/assisant': typeof WorkflowsTriggerAssisantRoute
  '/auth/login': typeof AuthLoginIndexLazyRoute
  '/site/$siteId/host': typeof SiteSiteIdHostIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/agEvents': typeof AgEventsRouteLazyRouteWithChildren
  '/chat': typeof ChatRouteLazyRouteWithChildren
  '/endpoint': typeof EndpointRouteLazyRouteWithChildren
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/gallery': typeof GalleryRouteLazyRouteWithChildren
  '/model': typeof ModelRouteLazyRouteWithChildren
  '/platform': typeof PlatformRouteLazyRouteWithChildren
  '/platform-account': typeof PlatformAccountRouteLazyRouteWithChildren
  '/post': typeof PostRouteLazyRouteWithChildren
  '/site': typeof SiteRouteLazyRouteWithChildren
  '/team': typeof TeamRouteLazyRouteWithChildren
  '/workflow-runs': typeof WorkflowRunsRouteLazyRouteWithChildren
  '/workflows': typeof WorkflowsRouteLazyRouteWithChildren
  '/gallery/': typeof GalleryIndexRoute
  '/platform/': typeof PlatformIndexRoute
  '/site/': typeof SiteIndexRoute
  '/workflow-runs/': typeof WorkflowRunsIndexRoute
  '/workflows/': typeof WorkflowsIndexRoute
  '/auth/login': typeof AuthLoginRouteRouteWithChildren
  '/chat/$chatSessionId': typeof ChatChatSessionIdRoute
  '/chat/canvas': typeof ChatCanvasRoute
  '/envs/create': typeof EnvsCreateRoute
  '/gallery/$galleryId': typeof GalleryGalleryIdRoute
  '/platform-account/$id': typeof PlatformAccountIdRoute
  '/platform-account/create': typeof PlatformAccountCreateRoute
  '/site/$siteId': typeof SiteSiteIdRouteRouteWithChildren
  '/team/$teamId': typeof TeamTeamIdRoute
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdRoute
  '/agEvents/': typeof AgEventsIndexLazyRoute
  '/chat/': typeof ChatIndexLazyRoute
  '/endpoint/': typeof EndpointIndexLazyRoute
  '/envs/': typeof EnvsIndexLazyRoute
  '/model/': typeof ModelIndexLazyRoute
  '/platform-account/': typeof PlatformAccountIndexLazyRoute
  '/post/': typeof PostIndexLazyRoute
  '/team/': typeof TeamIndexLazyRoute
  '/post/create': typeof PostCreateLazyRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdLazyRoute
  '/onboarding/create-tenant/': typeof OnboardingCreateTenantIndexRoute
  '/site/$siteId/': typeof SiteSiteIdIndexRoute
  '/site/create/': typeof SiteCreateIndexRoute
  '/site/$siteId/edit': typeof SiteSiteIdEditRoute
  '/site/$siteId/host': typeof SiteSiteIdHostRouteRouteWithChildren
  '/workflows/trigger/$id': typeof WorkflowsTriggerIdRoute
  '/workflows/trigger/assisant': typeof WorkflowsTriggerAssisantRoute
  '/auth/login/': typeof AuthLoginIndexLazyRoute
  '/site/$siteId/host/': typeof SiteSiteIdHostIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/agEvents'
    | '/chat'
    | '/endpoint'
    | '/envs'
    | '/gallery'
    | '/model'
    | '/platform'
    | '/platform-account'
    | '/post'
    | '/site'
    | '/team'
    | '/workflow-runs'
    | '/workflows'
    | '/gallery/'
    | '/platform/'
    | '/site/'
    | '/workflow-runs/'
    | '/workflows/'
    | '/auth/login'
    | '/chat/$chatSessionId'
    | '/chat/canvas'
    | '/envs/create'
    | '/gallery/$galleryId'
    | '/platform-account/$id'
    | '/platform-account/create'
    | '/site/$siteId'
    | '/team/$teamId'
    | '/workflow-runs/$workflowRunId'
    | '/agEvents/'
    | '/chat/'
    | '/endpoint/'
    | '/envs/'
    | '/model/'
    | '/platform-account/'
    | '/post/'
    | '/team/'
    | '/post/create'
    | '/workflows/$workflowId'
    | '/onboarding/create-tenant'
    | '/site/$siteId/'
    | '/site/create'
    | '/site/$siteId/edit'
    | '/site/$siteId/host'
    | '/workflows/trigger/$id'
    | '/workflows/trigger/assisant'
    | '/auth/login/'
    | '/site/$siteId/host/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/gallery'
    | '/platform'
    | '/site'
    | '/workflow-runs'
    | '/workflows'
    | '/chat/$chatSessionId'
    | '/chat/canvas'
    | '/envs/create'
    | '/gallery/$galleryId'
    | '/platform-account/$id'
    | '/platform-account/create'
    | '/team/$teamId'
    | '/workflow-runs/$workflowRunId'
    | '/agEvents'
    | '/chat'
    | '/endpoint'
    | '/envs'
    | '/model'
    | '/platform-account'
    | '/post'
    | '/team'
    | '/post/create'
    | '/workflows/$workflowId'
    | '/onboarding/create-tenant'
    | '/site/$siteId'
    | '/site/create'
    | '/site/$siteId/edit'
    | '/workflows/trigger/$id'
    | '/workflows/trigger/assisant'
    | '/auth/login'
    | '/site/$siteId/host'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/agEvents'
    | '/chat'
    | '/endpoint'
    | '/envs'
    | '/gallery'
    | '/model'
    | '/platform'
    | '/platform-account'
    | '/post'
    | '/site'
    | '/team'
    | '/workflow-runs'
    | '/workflows'
    | '/gallery/'
    | '/platform/'
    | '/site/'
    | '/workflow-runs/'
    | '/workflows/'
    | '/auth/login'
    | '/chat/$chatSessionId'
    | '/chat/canvas'
    | '/envs/create'
    | '/gallery/$galleryId'
    | '/platform-account/$id'
    | '/platform-account/create'
    | '/site/$siteId'
    | '/team/$teamId'
    | '/workflow-runs/$workflowRunId'
    | '/agEvents/'
    | '/chat/'
    | '/endpoint/'
    | '/envs/'
    | '/model/'
    | '/platform-account/'
    | '/post/'
    | '/team/'
    | '/post/create'
    | '/workflows/$workflowId'
    | '/onboarding/create-tenant/'
    | '/site/$siteId/'
    | '/site/create/'
    | '/site/$siteId/edit'
    | '/site/$siteId/host'
    | '/workflows/trigger/$id'
    | '/workflows/trigger/assisant'
    | '/auth/login/'
    | '/site/$siteId/host/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AgEventsRouteLazyRoute: typeof AgEventsRouteLazyRouteWithChildren
  ChatRouteLazyRoute: typeof ChatRouteLazyRouteWithChildren
  EndpointRouteLazyRoute: typeof EndpointRouteLazyRouteWithChildren
  EnvsRouteLazyRoute: typeof EnvsRouteLazyRouteWithChildren
  GalleryRouteLazyRoute: typeof GalleryRouteLazyRouteWithChildren
  ModelRouteLazyRoute: typeof ModelRouteLazyRouteWithChildren
  PlatformRouteLazyRoute: typeof PlatformRouteLazyRouteWithChildren
  PlatformAccountRouteLazyRoute: typeof PlatformAccountRouteLazyRouteWithChildren
  PostRouteLazyRoute: typeof PostRouteLazyRouteWithChildren
  SiteRouteLazyRoute: typeof SiteRouteLazyRouteWithChildren
  TeamRouteLazyRoute: typeof TeamRouteLazyRouteWithChildren
  WorkflowRunsRouteLazyRoute: typeof WorkflowRunsRouteLazyRouteWithChildren
  WorkflowsRouteLazyRoute: typeof WorkflowsRouteLazyRouteWithChildren
  OnboardingCreateTenantIndexRoute: typeof OnboardingCreateTenantIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AgEventsRouteLazyRoute: AgEventsRouteLazyRouteWithChildren,
  ChatRouteLazyRoute: ChatRouteLazyRouteWithChildren,
  EndpointRouteLazyRoute: EndpointRouteLazyRouteWithChildren,
  EnvsRouteLazyRoute: EnvsRouteLazyRouteWithChildren,
  GalleryRouteLazyRoute: GalleryRouteLazyRouteWithChildren,
  ModelRouteLazyRoute: ModelRouteLazyRouteWithChildren,
  PlatformRouteLazyRoute: PlatformRouteLazyRouteWithChildren,
  PlatformAccountRouteLazyRoute: PlatformAccountRouteLazyRouteWithChildren,
  PostRouteLazyRoute: PostRouteLazyRouteWithChildren,
  SiteRouteLazyRoute: SiteRouteLazyRouteWithChildren,
  TeamRouteLazyRoute: TeamRouteLazyRouteWithChildren,
  WorkflowRunsRouteLazyRoute: WorkflowRunsRouteLazyRouteWithChildren,
  WorkflowsRouteLazyRoute: WorkflowsRouteLazyRouteWithChildren,
  OnboardingCreateTenantIndexRoute: OnboardingCreateTenantIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/auth",
        "/agEvents",
        "/chat",
        "/endpoint",
        "/envs",
        "/gallery",
        "/model",
        "/platform",
        "/platform-account",
        "/post",
        "/site",
        "/team",
        "/workflow-runs",
        "/workflows",
        "/onboarding/create-tenant/"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/auth": {
      "filePath": "~auth/~route.tsx",
      "children": [
        "/auth/login"
      ]
    },
    "/agEvents": {
      "filePath": "~agEvents/~route.lazy.tsx",
      "children": [
        "/agEvents/"
      ]
    },
    "/chat": {
      "filePath": "~chat/~route.lazy.tsx",
      "children": [
        "/chat/$chatSessionId",
        "/chat/canvas",
        "/chat/"
      ]
    },
    "/endpoint": {
      "filePath": "~endpoint/~route.lazy.tsx",
      "children": [
        "/endpoint/"
      ]
    },
    "/envs": {
      "filePath": "~envs/~route.lazy.tsx",
      "children": [
        "/envs/create",
        "/envs/"
      ]
    },
    "/gallery": {
      "filePath": "~gallery/~route.lazy.tsx",
      "children": [
        "/gallery/",
        "/gallery/$galleryId"
      ]
    },
    "/model": {
      "filePath": "~model/~route.lazy.tsx",
      "children": [
        "/model/"
      ]
    },
    "/platform": {
      "filePath": "~platform/~route.lazy.tsx",
      "children": [
        "/platform/"
      ]
    },
    "/platform-account": {
      "filePath": "~platform-account/~route.lazy.tsx",
      "children": [
        "/platform-account/$id",
        "/platform-account/create",
        "/platform-account/"
      ]
    },
    "/post": {
      "filePath": "~post/~route.lazy.tsx",
      "children": [
        "/post/",
        "/post/create"
      ]
    },
    "/site": {
      "filePath": "~site/~route.lazy.tsx",
      "children": [
        "/site/",
        "/site/$siteId",
        "/site/create/"
      ]
    },
    "/team": {
      "filePath": "~team/~route.lazy.tsx",
      "children": [
        "/team/$teamId",
        "/team/"
      ]
    },
    "/workflow-runs": {
      "filePath": "~workflow-runs/~route.lazy.tsx",
      "children": [
        "/workflow-runs/",
        "/workflow-runs/$workflowRunId"
      ]
    },
    "/workflows": {
      "filePath": "~workflows/~route.lazy.tsx",
      "children": [
        "/workflows/",
        "/workflows/$workflowId",
        "/workflows/trigger/$id",
        "/workflows/trigger/assisant"
      ]
    },
    "/gallery/": {
      "filePath": "~gallery/~index.tsx",
      "parent": "/gallery"
    },
    "/platform/": {
      "filePath": "~platform/~index.tsx",
      "parent": "/platform"
    },
    "/site/": {
      "filePath": "~site/~index.tsx",
      "parent": "/site"
    },
    "/workflow-runs/": {
      "filePath": "~workflow-runs/~index.tsx",
      "parent": "/workflow-runs"
    },
    "/workflows/": {
      "filePath": "~workflows/~index.tsx",
      "parent": "/workflows"
    },
    "/auth/login": {
      "filePath": "~auth/~login/~route.tsx",
      "parent": "/auth",
      "children": [
        "/auth/login/"
      ]
    },
    "/chat/$chatSessionId": {
      "filePath": "~chat/~$chatSessionId.tsx",
      "parent": "/chat"
    },
    "/chat/canvas": {
      "filePath": "~chat/~canvas.tsx",
      "parent": "/chat"
    },
    "/envs/create": {
      "filePath": "~envs/~create.tsx",
      "parent": "/envs"
    },
    "/gallery/$galleryId": {
      "filePath": "~gallery/~$galleryId.tsx",
      "parent": "/gallery"
    },
    "/platform-account/$id": {
      "filePath": "~platform-account/~$id.tsx",
      "parent": "/platform-account"
    },
    "/platform-account/create": {
      "filePath": "~platform-account/~create.tsx",
      "parent": "/platform-account"
    },
    "/site/$siteId": {
      "filePath": "~site/~$siteId/~route.tsx",
      "parent": "/site",
      "children": [
        "/site/$siteId/",
        "/site/$siteId/edit",
        "/site/$siteId/host"
      ]
    },
    "/team/$teamId": {
      "filePath": "~team/~$teamId.tsx",
      "parent": "/team"
    },
    "/workflow-runs/$workflowRunId": {
      "filePath": "~workflow-runs/~$workflowRunId.tsx",
      "parent": "/workflow-runs"
    },
    "/agEvents/": {
      "filePath": "~agEvents/~index.lazy.tsx",
      "parent": "/agEvents"
    },
    "/chat/": {
      "filePath": "~chat/~index.lazy.tsx",
      "parent": "/chat"
    },
    "/endpoint/": {
      "filePath": "~endpoint/~index.lazy.tsx",
      "parent": "/endpoint"
    },
    "/envs/": {
      "filePath": "~envs/~index.lazy.tsx",
      "parent": "/envs"
    },
    "/model/": {
      "filePath": "~model/~index.lazy.tsx",
      "parent": "/model"
    },
    "/platform-account/": {
      "filePath": "~platform-account/~index.lazy.tsx",
      "parent": "/platform-account"
    },
    "/post/": {
      "filePath": "~post/~index.lazy.tsx",
      "parent": "/post"
    },
    "/team/": {
      "filePath": "~team/~index.lazy.tsx",
      "parent": "/team"
    },
    "/post/create": {
      "filePath": "~post/~create.lazy.tsx",
      "parent": "/post"
    },
    "/workflows/$workflowId": {
      "filePath": "~workflows/~$workflowId.lazy.tsx",
      "parent": "/workflows"
    },
    "/onboarding/create-tenant/": {
      "filePath": "~onboarding/~create-tenant/~index.tsx"
    },
    "/site/$siteId/": {
      "filePath": "~site/~$siteId/~index.tsx",
      "parent": "/site/$siteId"
    },
    "/site/create/": {
      "filePath": "~site/~create/~index.tsx",
      "parent": "/site"
    },
    "/site/$siteId/edit": {
      "filePath": "~site/~$siteId/~edit.tsx",
      "parent": "/site/$siteId"
    },
    "/site/$siteId/host": {
      "filePath": "~site/~$siteId/~host/~route.tsx",
      "parent": "/site/$siteId",
      "children": [
        "/site/$siteId/host/"
      ]
    },
    "/workflows/trigger/$id": {
      "filePath": "~workflows/~trigger/~$id.tsx",
      "parent": "/workflows"
    },
    "/workflows/trigger/assisant": {
      "filePath": "~workflows/~trigger/~assisant.tsx",
      "parent": "/workflows"
    },
    "/auth/login/": {
      "filePath": "~auth/~login/~index.lazy.tsx",
      "parent": "/auth/login"
    },
    "/site/$siteId/host/": {
      "filePath": "~site/~$siteId/~host/~index.tsx",
      "parent": "/site/$siteId/host"
    }
  }
}
ROUTE_MANIFEST_END */
