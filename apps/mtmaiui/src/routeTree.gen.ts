/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as IndexImport } from './routes/~index'
import { Route as SiteSiteIdRouteImport } from './routes/~site/~$siteId/~route'
import { Route as EnvsCreateImport } from './routes/~envs/~create'
import { Route as SiteIndexImport } from './routes/~site/~index'
import { Route as PlatformIndexImport } from './routes/~platform/~index'
import { Route as SiteSiteIdHostRouteImport } from './routes/~site/~$siteId/~host/~route'
import { Route as SiteSiteIdEditImport } from './routes/~site/~$siteId/~edit'
import { Route as SiteCreateIndexImport } from './routes/~site/~create/~index'
import { Route as SiteSiteIdIndexImport } from './routes/~site/~$siteId/~index'
import { Route as OnboardingCreateTenantIndexImport } from './routes/~onboarding/~create-tenant/~index'
import { Route as ComsComIdTypeModelClientImport } from './routes/~coms/~$comId/~type/~modelClient'
import { Route as ComsComIdComponenteditorSmolaAgentImport } from './routes/~coms/~$comId/~component_editor/~SmolaAgent'
import { Route as ComsComIdComponenteditorMtOpenAIChatCompletionClientImport } from './routes/~coms/~$comId/~component_editor/~MtOpenAIChatCompletionClient'
import { Route as ComsComIdComponenteditorInstagramAgentImport } from './routes/~coms/~$comId/~component_editor/~InstagramAgent'
import { Route as ComsComIdComponenteditorAssistantAgentImport } from './routes/~coms/~$comId/~component_editor/~AssistantAgent'
import { Route as ComsComIdComponenteditorSplatImport } from './routes/~coms/~$comId/~component_editor/~$'
import { Route as SiteSiteIdHostIndexImport } from './routes/~site/~$siteId/~host/~index'
import { Route as ComsComIdComponenteditorIndexImport } from './routes/~coms/~$comId/~component_editor/~index'

// Create Virtual Routes

const WorkflowsRouteLazyImport = createFileRoute('/workflows')()
const WorkflowRunsRouteLazyImport = createFileRoute('/workflow-runs')()
const TenantRouteLazyImport = createFileRoute('/tenant')()
const TeamRouteLazyImport = createFileRoute('/team')()
const SiteRouteLazyImport = createFileRoute('/site')()
const SessionRouteLazyImport = createFileRoute('/session')()
const ScheduledRunsRouteLazyImport = createFileRoute('/scheduled-runs')()
const ResourceRouteLazyImport = createFileRoute('/resource')()
const RecurringRouteLazyImport = createFileRoute('/recurring')()
const ProxyRouteLazyImport = createFileRoute('/proxy')()
const PostRouteLazyImport = createFileRoute('/post')()
const PlatformAccountRouteLazyImport = createFileRoute('/platform-account')()
const PlatformRouteLazyImport = createFileRoute('/platform')()
const ModelRouteLazyImport = createFileRoute('/model')()
const EventsRouteLazyImport = createFileRoute('/events')()
const EnvsRouteLazyImport = createFileRoute('/envs')()
const EndpointRouteLazyImport = createFileRoute('/endpoint')()
const ComsRouteLazyImport = createFileRoute('/coms')()
const AuthRouteLazyImport = createFileRoute('/auth')()
const AdminRouteLazyImport = createFileRoute('/admin')()
const WorkflowsWorkflowIdRouteLazyImport = createFileRoute(
  '/workflows/$workflowId',
)()
const WorkflowRunsWorkflowRunIdRouteLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId',
)()
const TenantSettingsRouteLazyImport = createFileRoute('/tenant/settings')()
const TeamTeamIdRouteLazyImport = createFileRoute('/team/$teamId')()
const SessionSessionIdRouteLazyImport = createFileRoute('/session/$sessionId')()
const ResourceNewRouteLazyImport = createFileRoute('/resource/new')()
const ResourceResIdRouteLazyImport = createFileRoute('/resource/$resId')()
const ProxyNewRouteLazyImport = createFileRoute('/proxy/new')()
const ProxyProxyIdRouteLazyImport = createFileRoute('/proxy/$proxyId')()
const PostCreateLazyImport = createFileRoute('/post/create')()
const PlatformAccountNewRouteLazyImport = createFileRoute(
  '/platform-account/new',
)()
const PlatformAccountPlatformAccountIdRouteLazyImport = createFileRoute(
  '/platform-account/$platformAccountId',
)()
const ModelNewRouteLazyImport = createFileRoute('/model/new')()
const ModelModelIdRouteLazyImport = createFileRoute('/model/$modelId')()
const ComsComIdRouteLazyImport = createFileRoute('/coms/$comId')()
const AuthRegisterLazyImport = createFileRoute('/auth/register')()
const AuthLoginRouteLazyImport = createFileRoute('/auth/login')()
const WorkflowsIndexLazyImport = createFileRoute('/workflows/')()
const WorkflowRunsIndexLazyImport = createFileRoute('/workflow-runs/')()
const TenantIndexLazyImport = createFileRoute('/tenant/')()
const TeamIndexLazyImport = createFileRoute('/team/')()
const SessionIndexLazyImport = createFileRoute('/session/')()
const ScheduledRunsIndexLazyImport = createFileRoute('/scheduled-runs/')()
const ResourceIndexLazyImport = createFileRoute('/resource/')()
const RecurringIndexLazyImport = createFileRoute('/recurring/')()
const ProxyIndexLazyImport = createFileRoute('/proxy/')()
const PostIndexLazyImport = createFileRoute('/post/')()
const PlatformAccountIndexLazyImport = createFileRoute('/platform-account/')()
const ModelIndexLazyImport = createFileRoute('/model/')()
const EventsIndexLazyImport = createFileRoute('/events/')()
const EnvsIndexLazyImport = createFileRoute('/envs/')()
const EndpointIndexLazyImport = createFileRoute('/endpoint/')()
const ComsIndexLazyImport = createFileRoute('/coms/')()
const AdminIndexLazyImport = createFileRoute('/admin/')()
const WorkflowsWorkflowIdTriggerRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger',
)()
const WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/visualization',
)()
const WorkflowRunsWorkflowRunIdSummaryLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/summary',
)()
const WorkflowRunsWorkflowRunIdInputLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/input',
)()
const WorkflowRunsWorkflowRunIdChatRouteLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/chat',
)()
const WorkflowRunsWorkflowRunIdAdditionalMetadataLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/additional-metadata',
)()
const TenantSettingsNewRouteLazyImport = createFileRoute(
  '/tenant/settings/new',
)()
const TenantSettingsTenantSettingIdRouteLazyImport = createFileRoute(
  '/tenant/settings/$tenantSettingId',
)()
const SessionSessionIdTeamstateRouteLazyImport = createFileRoute(
  '/session/$sessionId/team_state',
)()
const SessionSessionIdConfigRouteLazyImport = createFileRoute(
  '/session/$sessionId/config',
)()
const SessionSessionIdActionsRouteLazyImport = createFileRoute(
  '/session/$sessionId/actions',
)()
const ResourceNewResRouteLazyImport = createFileRoute('/resource/new/res')()
const ResourceResIdPlatformaccountRouteLazyImport = createFileRoute(
  '/resource/$resId/platform_account',
)()
const ProxyProxyIdActionsRouteLazyImport = createFileRoute(
  '/proxy/$proxyId/actions',
)()
const PlatformAccountPlatformAccountIdActionsRouteLazyImport = createFileRoute(
  '/platform-account/$platformAccountId/actions',
)()
const ComsComIdVisualizationRouteLazyImport = createFileRoute(
  '/coms/$comId/visualization',
)()
const ComsComIdViewRouteLazyImport = createFileRoute('/coms/$comId/view')()
const ComsComIdTypeRouteLazyImport = createFileRoute('/coms/$comId/type')()
const ComsComIdTeambuilderv2RouteLazyImport = createFileRoute(
  '/coms/$comId/team_builderv2',
)()
const ComsComIdTeambuilderRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builder',
)()
const ComsComIdRunRouteLazyImport = createFileRoute('/coms/$comId/run')()
const ComsComIdComponenteditorRouteLazyImport = createFileRoute(
  '/coms/$comId/component_editor',
)()
const WorkflowsWorkflowIdIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/',
)()
const WorkflowRunsWorkflowRunIdIndexLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/',
)()
const TenantSettingsIndexLazyImport = createFileRoute('/tenant/settings/')()
const SessionSessionIdIndexLazyImport = createFileRoute(
  '/session/$sessionId/',
)()
const ResourceResIdIndexLazyImport = createFileRoute('/resource/$resId/')()
const ProxyProxyIdIndexLazyImport = createFileRoute('/proxy/$proxyId/')()
const PlatformAccountNewIndexLazyImport = createFileRoute(
  '/platform-account/new/',
)()
const PlatformAccountPlatformAccountIdIndexLazyImport = createFileRoute(
  '/platform-account/$platformAccountId/',
)()
const ModelNewIndexLazyImport = createFileRoute('/model/new/')()
const ModelModelIdIndexLazyImport = createFileRoute('/model/$modelId/')()
const ComsComIdIndexLazyImport = createFileRoute('/coms/$comId/')()
const AuthLoginIndexLazyImport = createFileRoute('/auth/login/')()
const WorkflowsWorkflowIdTriggerTestteamRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/test_team',
)()
const WorkflowsWorkflowIdTriggerTenantRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/tenant',
)()
const WorkflowsWorkflowIdTriggerTeamRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/team',
)()
const WorkflowsWorkflowIdTriggerSmolaRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/smola',
)()
const WorkflowsWorkflowIdTriggerResearchRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/research',
)()
const WorkflowsWorkflowIdTriggerModelRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/model',
)()
const WorkflowsWorkflowIdTriggerComRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/com',
)()
const WorkflowsWorkflowIdTriggerBrowserRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/browser',
)()
const WorkflowsWorkflowIdTriggerAgRouteLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/ag',
)()
const WorkflowsWorkflowIdTriggerSplatLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/$',
)()
const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport =
  createFileRoute('/workflow-runs/$workflowRunId/stepRun/$stepRunId')()
const TenantSettingsTenantSettingIdModelsettingsRouteLazyImport =
  createFileRoute('/tenant/settings/$tenantSettingId/model_settings')()
const ResourceNewResPlatformaccountLazyImport = createFileRoute(
  '/resource/new/res/platform_account',
)()
const ResourceNewResChatLazyImport = createFileRoute('/resource/new/res/chat')()
const ResourceNewResBrowserLazyImport = createFileRoute(
  '/resource/new/res/browser',
)()
const ComsComIdViewSubComIdRouteLazyImport = createFileRoute(
  '/coms/$comId/view/$subComId',
)()
const ComsComIdTypeInstagramTeamLazyImport = createFileRoute(
  '/coms/$comId/type/instagramTeam',
)()
const ComsComIdTypeAssisantLazyImport = createFileRoute(
  '/coms/$comId/type/assisant',
)()
const ComsComIdTeambuilderv2InstagramteamRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builderv2/instagram_team',
)()
const ComsComIdTeambuilderJsonviewRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builder/jsonview',
)()
const ComsComIdTeambuilderComponentRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builder/component',
)()
const ComsComIdEditModelRouteLazyImport = createFileRoute(
  '/coms/$comId/edit/model',
)()
const ComsComIdComponenteditorInstagramTeamLazyImport = createFileRoute(
  '/coms/$comId/component_editor/InstagramTeam',
)()
const WorkflowsWorkflowIdTriggerIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/',
)()
const WorkflowRunsWorkflowRunIdVisualizationIndexLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/visualization/',
)()
const WorkflowRunsWorkflowRunIdChatIndexLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/chat/',
)()
const TenantSettingsNewIndexLazyImport = createFileRoute(
  '/tenant/settings/new/',
)()
const TenantSettingsTenantSettingIdIndexLazyImport = createFileRoute(
  '/tenant/settings/$tenantSettingId/',
)()
const TeamTeamIdNewIndexLazyImport = createFileRoute('/team/$teamId/new/')()
const SessionSessionIdTeamstateIndexLazyImport = createFileRoute(
  '/session/$sessionId/team_state/',
)()
const SessionSessionIdConfigIndexLazyImport = createFileRoute(
  '/session/$sessionId/config/',
)()
const SessionSessionIdActionsIndexLazyImport = createFileRoute(
  '/session/$sessionId/actions/',
)()
const ResourceNewResIndexLazyImport = createFileRoute('/resource/new/res/')()
const ResourceResIdPlatformaccountIndexLazyImport = createFileRoute(
  '/resource/$resId/platform_account/',
)()
const ProxyProxyIdActionsIndexLazyImport = createFileRoute(
  '/proxy/$proxyId/actions/',
)()
const PlatformAccountPlatformAccountIdActionsIndexLazyImport = createFileRoute(
  '/platform-account/$platformAccountId/actions/',
)()
const ComsComIdTeambuilderv2IndexLazyImport = createFileRoute(
  '/coms/$comId/team_builderv2/',
)()
const ComsComIdTeambuilderIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builder/',
)()
const ComsComIdRunIndexLazyImport = createFileRoute('/coms/$comId/run/')()
const ComsComIdTeambuilderComponentNodeIdLazyImport = createFileRoute(
  '/coms/$comId/team_builder/component/$nodeId',
)()
const ComsComIdTeambuilderAgentNewRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/new',
)()
const ComsComIdTeambuilderAgentAgentIdRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/$agentId',
)()
const WorkflowsWorkflowIdTriggerTestteamIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/test_team/',
)()
const WorkflowsWorkflowIdTriggerTenantIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/tenant/',
)()
const WorkflowsWorkflowIdTriggerTeamIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/team/',
)()
const WorkflowsWorkflowIdTriggerSmolaIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/smola/',
)()
const WorkflowsWorkflowIdTriggerResearchIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/research/',
)()
const WorkflowsWorkflowIdTriggerModelIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/model/',
)()
const WorkflowsWorkflowIdTriggerComIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/com/',
)()
const WorkflowsWorkflowIdTriggerBrowserIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/browser/',
)()
const WorkflowsWorkflowIdTriggerAgIndexLazyImport = createFileRoute(
  '/workflows/$workflowId/trigger/ag/',
)()
const WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyImport =
  createFileRoute('/workflow-runs/$workflowRunId/stepRun/$stepRunId/')()
const TenantSettingsTenantSettingIdModelsettingsIndexLazyImport =
  createFileRoute('/tenant/settings/$tenantSettingId/model_settings/')()
const ComsComIdViewSubComIdIndexLazyImport = createFileRoute(
  '/coms/$comId/view/$subComId/',
)()
const ComsComIdTeambuilderv2InstagramteamIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builderv2/instagram_team/',
)()
const ComsComIdTeambuilderJsonviewIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builder/jsonview/',
)()
const ComsComIdEditModelIndexLazyImport = createFileRoute(
  '/coms/$comId/edit/model/',
)()
const ComsComIdTeambuilderAgentAgentIdModelRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/$agentId/model',
)()
const ComsComIdTeambuilderAgentAgentIdAgentRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/$agentId/agent',
)()
const ComsComIdTeambuilderAgentNewIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/new/',
)()
const ComsComIdTeambuilderAgentAgentIdIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/$agentId/',
)()
const ComsComIdTeambuilderAgentAgentIdModelIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/$agentId/model/',
)()
const ComsComIdTeambuilderAgentAgentIdAgentIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builder/agent/$agentId/agent/',
)()

// Create/Update Routes

const WorkflowsRouteLazyRoute = WorkflowsRouteLazyImport.update({
  id: '/workflows',
  path: '/workflows',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~workflows/~route.lazy').then((d) => d.Route),
)

const WorkflowRunsRouteLazyRoute = WorkflowRunsRouteLazyImport.update({
  id: '/workflow-runs',
  path: '/workflow-runs',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~workflow-runs/~route.lazy').then((d) => d.Route),
)

const TenantRouteLazyRoute = TenantRouteLazyImport.update({
  id: '/tenant',
  path: '/tenant',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~tenant/~route.lazy').then((d) => d.Route),
)

const TeamRouteLazyRoute = TeamRouteLazyImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~team/~route.lazy').then((d) => d.Route))

const SiteRouteLazyRoute = SiteRouteLazyImport.update({
  id: '/site',
  path: '/site',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~site/~route.lazy').then((d) => d.Route))

const SessionRouteLazyRoute = SessionRouteLazyImport.update({
  id: '/session',
  path: '/session',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~session/~route.lazy').then((d) => d.Route),
)

const ScheduledRunsRouteLazyRoute = ScheduledRunsRouteLazyImport.update({
  id: '/scheduled-runs',
  path: '/scheduled-runs',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~scheduled-runs/~route.lazy').then((d) => d.Route),
)

const ResourceRouteLazyRoute = ResourceRouteLazyImport.update({
  id: '/resource',
  path: '/resource',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~resource/~route.lazy').then((d) => d.Route),
)

const RecurringRouteLazyRoute = RecurringRouteLazyImport.update({
  id: '/recurring',
  path: '/recurring',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~recurring/~route.lazy').then((d) => d.Route),
)

const ProxyRouteLazyRoute = ProxyRouteLazyImport.update({
  id: '/proxy',
  path: '/proxy',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~proxy/~route.lazy').then((d) => d.Route))

const PostRouteLazyRoute = PostRouteLazyImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~post/~route.lazy').then((d) => d.Route))

const PlatformAccountRouteLazyRoute = PlatformAccountRouteLazyImport.update({
  id: '/platform-account',
  path: '/platform-account',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~platform-account/~route.lazy').then((d) => d.Route),
)

const PlatformRouteLazyRoute = PlatformRouteLazyImport.update({
  id: '/platform',
  path: '/platform',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~platform/~route.lazy').then((d) => d.Route),
)

const ModelRouteLazyRoute = ModelRouteLazyImport.update({
  id: '/model',
  path: '/model',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~model/~route.lazy').then((d) => d.Route))

const EventsRouteLazyRoute = EventsRouteLazyImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~events/~route.lazy').then((d) => d.Route),
)

const EnvsRouteLazyRoute = EnvsRouteLazyImport.update({
  id: '/envs',
  path: '/envs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~envs/~route.lazy').then((d) => d.Route))

const EndpointRouteLazyRoute = EndpointRouteLazyImport.update({
  id: '/endpoint',
  path: '/endpoint',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~endpoint/~route.lazy').then((d) => d.Route),
)

const ComsRouteLazyRoute = ComsRouteLazyImport.update({
  id: '/coms',
  path: '/coms',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~coms/~route.lazy').then((d) => d.Route))

const AuthRouteLazyRoute = AuthRouteLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~auth/~route.lazy').then((d) => d.Route))

const AdminRouteLazyRoute = AdminRouteLazyImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~admin/~route.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowsWorkflowIdRouteLazyRoute =
  WorkflowsWorkflowIdRouteLazyImport.update({
    id: '/$workflowId',
    path: '/$workflowId',
    getParentRoute: () => WorkflowsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~route.lazy').then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdRouteLazyRoute =
  WorkflowRunsWorkflowRunIdRouteLazyImport.update({
    id: '/$workflowRunId',
    path: '/$workflowRunId',
    getParentRoute: () => WorkflowRunsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const TenantSettingsRouteLazyRoute = TenantSettingsRouteLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => TenantRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~tenant/~settings/~route.lazy').then((d) => d.Route),
)

const TeamTeamIdRouteLazyRoute = TeamTeamIdRouteLazyImport.update({
  id: '/$teamId',
  path: '/$teamId',
  getParentRoute: () => TeamRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~team/~$teamId/~route.lazy').then((d) => d.Route),
)

const SessionSessionIdRouteLazyRoute = SessionSessionIdRouteLazyImport.update({
  id: '/$sessionId',
  path: '/$sessionId',
  getParentRoute: () => SessionRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~session/~$sessionId/~route.lazy').then((d) => d.Route),
)

const ResourceNewRouteLazyRoute = ResourceNewRouteLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ResourceRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~route.lazy').then((d) => d.Route),
)

const ResourceResIdRouteLazyRoute = ResourceResIdRouteLazyImport.update({
  id: '/$resId',
  path: '/$resId',
  getParentRoute: () => ResourceRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~$resId/~route.lazy').then((d) => d.Route),
)

const ProxyNewRouteLazyRoute = ProxyNewRouteLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ProxyRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~proxy/~new/~route.lazy').then((d) => d.Route),
)

const ProxyProxyIdRouteLazyRoute = ProxyProxyIdRouteLazyImport.update({
  id: '/$proxyId',
  path: '/$proxyId',
  getParentRoute: () => ProxyRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~proxy/~$proxyId/~route.lazy').then((d) => d.Route),
)

const PostCreateLazyRoute = PostCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PostRouteLazyRoute,
} as any).lazy(() => import('./routes/~post/~create.lazy').then((d) => d.Route))

const PlatformAccountNewRouteLazyRoute =
  PlatformAccountNewRouteLazyImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => PlatformAccountRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~new/~route.lazy').then((d) => d.Route),
  )

const PlatformAccountPlatformAccountIdRouteLazyRoute =
  PlatformAccountPlatformAccountIdRouteLazyImport.update({
    id: '/$platformAccountId',
    path: '/$platformAccountId',
    getParentRoute: () => PlatformAccountRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~$platformAccountId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ModelNewRouteLazyRoute = ModelNewRouteLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ModelRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~model/~new/~route.lazy').then((d) => d.Route),
)

const ModelModelIdRouteLazyRoute = ModelModelIdRouteLazyImport.update({
  id: '/$modelId',
  path: '/$modelId',
  getParentRoute: () => ModelRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~model/~$modelId/~route.lazy').then((d) => d.Route),
)

const ComsComIdRouteLazyRoute = ComsComIdRouteLazyImport.update({
  id: '/$comId',
  path: '/$comId',
  getParentRoute: () => ComsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~route.lazy').then((d) => d.Route),
)

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~register.lazy').then((d) => d.Route),
)

const AuthLoginRouteLazyRoute = AuthLoginRouteLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~login/~route.lazy').then((d) => d.Route),
)

const WorkflowsIndexLazyRoute = WorkflowsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkflowsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~workflows/~index.lazy').then((d) => d.Route),
)

const WorkflowRunsIndexLazyRoute = WorkflowRunsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkflowRunsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~workflow-runs/~index.lazy').then((d) => d.Route),
)

const TenantIndexLazyRoute = TenantIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TenantRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~tenant/~index.lazy').then((d) => d.Route),
)

const TeamIndexLazyRoute = TeamIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TeamRouteLazyRoute,
} as any).lazy(() => import('./routes/~team/~index.lazy').then((d) => d.Route))

const SessionIndexLazyRoute = SessionIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SessionRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~session/~index.lazy').then((d) => d.Route),
)

const ScheduledRunsIndexLazyRoute = ScheduledRunsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ScheduledRunsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~scheduled-runs/~index.lazy').then((d) => d.Route),
)

const ResourceIndexLazyRoute = ResourceIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourceRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~index.lazy').then((d) => d.Route),
)

const RecurringIndexLazyRoute = RecurringIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RecurringRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~recurring/~index.lazy').then((d) => d.Route),
)

const ProxyIndexLazyRoute = ProxyIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProxyRouteLazyRoute,
} as any).lazy(() => import('./routes/~proxy/~index.lazy').then((d) => d.Route))

const PostIndexLazyRoute = PostIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostRouteLazyRoute,
} as any).lazy(() => import('./routes/~post/~index.lazy').then((d) => d.Route))

const PlatformAccountIndexLazyRoute = PlatformAccountIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlatformAccountRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~platform-account/~index.lazy').then((d) => d.Route),
)

const ModelIndexLazyRoute = ModelIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ModelRouteLazyRoute,
} as any).lazy(() => import('./routes/~model/~index.lazy').then((d) => d.Route))

const EventsIndexLazyRoute = EventsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EventsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~events/~index.lazy').then((d) => d.Route),
)

const EnvsIndexLazyRoute = EnvsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EnvsRouteLazyRoute,
} as any).lazy(() => import('./routes/~envs/~index.lazy').then((d) => d.Route))

const EndpointIndexLazyRoute = EndpointIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EndpointRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~endpoint/~index.lazy').then((d) => d.Route),
)

const ComsIndexLazyRoute = ComsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ComsRouteLazyRoute,
} as any).lazy(() => import('./routes/~coms/~index.lazy').then((d) => d.Route))

const AdminIndexLazyRoute = AdminIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteLazyRoute,
} as any).lazy(() => import('./routes/~admin/~index.lazy').then((d) => d.Route))

const SiteSiteIdRouteRoute = SiteSiteIdRouteImport.update({
  id: '/$siteId',
  path: '/$siteId',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const EnvsCreateRoute = EnvsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => EnvsRouteLazyRoute,
} as any)

const SiteIndexRoute = SiteIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const PlatformIndexRoute = PlatformIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlatformRouteLazyRoute,
} as any)

const WorkflowsWorkflowIdTriggerRouteLazyRoute =
  WorkflowsWorkflowIdTriggerRouteLazyImport.update({
    id: '/trigger',
    path: '/trigger',
    getParentRoute: () => WorkflowsWorkflowIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute =
  WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport.update({
    id: '/visualization',
    path: '/visualization',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~visualization/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdSummaryLazyRoute =
  WorkflowRunsWorkflowRunIdSummaryLazyImport.update({
    id: '/summary',
    path: '/summary',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~summary.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdInputLazyRoute =
  WorkflowRunsWorkflowRunIdInputLazyImport.update({
    id: '/input',
    path: '/input',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~input.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdChatRouteLazyRoute =
  WorkflowRunsWorkflowRunIdChatRouteLazyImport.update({
    id: '/chat',
    path: '/chat',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~chat/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute =
  WorkflowRunsWorkflowRunIdAdditionalMetadataLazyImport.update({
    id: '/additional-metadata',
    path: '/additional-metadata',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~additional-metadata.lazy'
    ).then((d) => d.Route),
  )

const TenantSettingsNewRouteLazyRoute = TenantSettingsNewRouteLazyImport.update(
  {
    id: '/new',
    path: '/new',
    getParentRoute: () => TenantSettingsRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/~tenant/~settings/~new/~route.lazy').then((d) => d.Route),
)

const TenantSettingsTenantSettingIdRouteLazyRoute =
  TenantSettingsTenantSettingIdRouteLazyImport.update({
    id: '/$tenantSettingId',
    path: '/$tenantSettingId',
    getParentRoute: () => TenantSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~tenant/~settings/~$tenantSettingId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const SessionSessionIdTeamstateRouteLazyRoute =
  SessionSessionIdTeamstateRouteLazyImport.update({
    id: '/team_state',
    path: '/team_state',
    getParentRoute: () => SessionSessionIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~session/~$sessionId/~team_state/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const SessionSessionIdConfigRouteLazyRoute =
  SessionSessionIdConfigRouteLazyImport.update({
    id: '/config',
    path: '/config',
    getParentRoute: () => SessionSessionIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~session/~$sessionId/~config/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const SessionSessionIdActionsRouteLazyRoute =
  SessionSessionIdActionsRouteLazyImport.update({
    id: '/actions',
    path: '/actions',
    getParentRoute: () => SessionSessionIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~session/~$sessionId/~actions/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ResourceNewResRouteLazyRoute = ResourceNewResRouteLazyImport.update({
  id: '/res',
  path: '/res',
  getParentRoute: () => ResourceNewRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~route.lazy').then((d) => d.Route),
)

const ResourceResIdPlatformaccountRouteLazyRoute =
  ResourceResIdPlatformaccountRouteLazyImport.update({
    id: '/platform_account',
    path: '/platform_account',
    getParentRoute: () => ResourceResIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~resource/~$resId/~platform_account/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ProxyProxyIdActionsRouteLazyRoute =
  ProxyProxyIdActionsRouteLazyImport.update({
    id: '/actions',
    path: '/actions',
    getParentRoute: () => ProxyProxyIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~proxy/~$proxyId/~actions/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const PlatformAccountPlatformAccountIdActionsRouteLazyRoute =
  PlatformAccountPlatformAccountIdActionsRouteLazyImport.update({
    id: '/actions',
    path: '/actions',
    getParentRoute: () => PlatformAccountPlatformAccountIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~platform-account/~$platformAccountId/~actions/~route.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdVisualizationRouteLazyRoute =
  ComsComIdVisualizationRouteLazyImport.update({
    id: '/visualization',
    path: '/visualization',
    getParentRoute: () => ComsComIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~visualization/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdViewRouteLazyRoute = ComsComIdViewRouteLazyImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => ComsComIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~view/~route.lazy').then((d) => d.Route),
)

const ComsComIdTypeRouteLazyRoute = ComsComIdTypeRouteLazyImport.update({
  id: '/type',
  path: '/type',
  getParentRoute: () => ComsComIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~type/~route.lazy').then((d) => d.Route),
)

const ComsComIdTeambuilderv2RouteLazyRoute =
  ComsComIdTeambuilderv2RouteLazyImport.update({
    id: '/team_builderv2',
    path: '/team_builderv2',
    getParentRoute: () => ComsComIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builderv2/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTeambuilderRouteLazyRoute =
  ComsComIdTeambuilderRouteLazyImport.update({
    id: '/team_builder',
    path: '/team_builder',
    getParentRoute: () => ComsComIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builder/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdRunRouteLazyRoute = ComsComIdRunRouteLazyImport.update({
  id: '/run',
  path: '/run',
  getParentRoute: () => ComsComIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~run/~route.lazy').then((d) => d.Route),
)

const ComsComIdComponenteditorRouteLazyRoute =
  ComsComIdComponenteditorRouteLazyImport.update({
    id: '/component_editor',
    path: '/component_editor',
    getParentRoute: () => ComsComIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~component_editor/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdIndexLazyRoute =
  WorkflowsWorkflowIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~index.lazy').then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdIndexLazyRoute =
  WorkflowRunsWorkflowRunIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const TenantSettingsIndexLazyRoute = TenantSettingsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TenantSettingsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~tenant/~settings/~index.lazy').then((d) => d.Route),
)

const SessionSessionIdIndexLazyRoute = SessionSessionIdIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SessionSessionIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~session/~$sessionId/~index.lazy').then((d) => d.Route),
)

const ResourceResIdIndexLazyRoute = ResourceResIdIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourceResIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~$resId/~index.lazy').then((d) => d.Route),
)

const ProxyProxyIdIndexLazyRoute = ProxyProxyIdIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProxyProxyIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~proxy/~$proxyId/~index.lazy').then((d) => d.Route),
)

const PlatformAccountNewIndexLazyRoute =
  PlatformAccountNewIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PlatformAccountNewRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~new/~index.lazy').then((d) => d.Route),
  )

const PlatformAccountPlatformAccountIdIndexLazyRoute =
  PlatformAccountPlatformAccountIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PlatformAccountPlatformAccountIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~$platformAccountId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ModelNewIndexLazyRoute = ModelNewIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ModelNewRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~model/~new/~index.lazy').then((d) => d.Route),
)

const ModelModelIdIndexLazyRoute = ModelModelIdIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ModelModelIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~model/~$modelId/~index.lazy').then((d) => d.Route),
)

const ComsComIdIndexLazyRoute = ComsComIdIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ComsComIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~index.lazy').then((d) => d.Route),
)

const AuthLoginIndexLazyRoute = AuthLoginIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthLoginRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~login/~index.lazy').then((d) => d.Route),
)

const SiteSiteIdHostRouteRoute = SiteSiteIdHostRouteImport.update({
  id: '/host',
  path: '/host',
  getParentRoute: () => SiteSiteIdRouteRoute,
} as any)

const SiteSiteIdEditRoute = SiteSiteIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => SiteSiteIdRouteRoute,
} as any)

const SiteCreateIndexRoute = SiteCreateIndexImport.update({
  id: '/create/',
  path: '/create/',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const SiteSiteIdIndexRoute = SiteSiteIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteSiteIdRouteRoute,
} as any)

const OnboardingCreateTenantIndexRoute =
  OnboardingCreateTenantIndexImport.update({
    id: '/onboarding/create-tenant/',
    path: '/onboarding/create-tenant/',
    getParentRoute: () => rootRoute,
  } as any)

const WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute =
  WorkflowsWorkflowIdTriggerTestteamRouteLazyImport.update({
    id: '/test_team',
    path: '/test_team',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~test_team/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerTenantRouteLazyRoute =
  WorkflowsWorkflowIdTriggerTenantRouteLazyImport.update({
    id: '/tenant',
    path: '/tenant',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~tenant/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerTeamRouteLazyRoute =
  WorkflowsWorkflowIdTriggerTeamRouteLazyImport.update({
    id: '/team',
    path: '/team',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~team/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute =
  WorkflowsWorkflowIdTriggerSmolaRouteLazyImport.update({
    id: '/smola',
    path: '/smola',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~smola/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerResearchRouteLazyRoute =
  WorkflowsWorkflowIdTriggerResearchRouteLazyImport.update({
    id: '/research',
    path: '/research',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~research/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerModelRouteLazyRoute =
  WorkflowsWorkflowIdTriggerModelRouteLazyImport.update({
    id: '/model',
    path: '/model',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~model/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerComRouteLazyRoute =
  WorkflowsWorkflowIdTriggerComRouteLazyImport.update({
    id: '/com',
    path: '/com',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~com/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute =
  WorkflowsWorkflowIdTriggerBrowserRouteLazyImport.update({
    id: '/browser',
    path: '/browser',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~browser/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerAgRouteLazyRoute =
  WorkflowsWorkflowIdTriggerAgRouteLazyImport.update({
    id: '/ag',
    path: '/ag',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~ag/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerSplatLazyRoute =
  WorkflowsWorkflowIdTriggerSplatLazyImport.update({
    id: '/$',
    path: '/$',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~$.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute =
  WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport.update({
    id: '/stepRun/$stepRunId',
    path: '/stepRun/$stepRunId',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~route.lazy'
    ).then((d) => d.Route),
  )

const TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute =
  TenantSettingsTenantSettingIdModelsettingsRouteLazyImport.update({
    id: '/model_settings',
    path: '/model_settings',
    getParentRoute: () => TenantSettingsTenantSettingIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~tenant/~settings/~$tenantSettingId/~model_settings/~route.lazy'
    ).then((d) => d.Route),
  )

const ResourceNewResPlatformaccountLazyRoute =
  ResourceNewResPlatformaccountLazyImport.update({
    id: '/platform_account',
    path: '/platform_account',
    getParentRoute: () => ResourceNewResRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~resource/~new/~res/~platform_account.lazy').then(
      (d) => d.Route,
    ),
  )

const ResourceNewResChatLazyRoute = ResourceNewResChatLazyImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => ResourceNewResRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~chat.lazy').then((d) => d.Route),
)

const ResourceNewResBrowserLazyRoute = ResourceNewResBrowserLazyImport.update({
  id: '/browser',
  path: '/browser',
  getParentRoute: () => ResourceNewResRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~browser.lazy').then((d) => d.Route),
)

const ComsComIdViewSubComIdRouteLazyRoute =
  ComsComIdViewSubComIdRouteLazyImport.update({
    id: '/$subComId',
    path: '/$subComId',
    getParentRoute: () => ComsComIdViewRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~view/~$subComId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTypeInstagramTeamLazyRoute =
  ComsComIdTypeInstagramTeamLazyImport.update({
    id: '/instagramTeam',
    path: '/instagramTeam',
    getParentRoute: () => ComsComIdTypeRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~type/~instagramTeam.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTypeAssisantLazyRoute = ComsComIdTypeAssisantLazyImport.update({
  id: '/assisant',
  path: '/assisant',
  getParentRoute: () => ComsComIdTypeRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~type/~assisant.lazy').then((d) => d.Route),
)

const ComsComIdTeambuilderv2InstagramteamRouteLazyRoute =
  ComsComIdTeambuilderv2InstagramteamRouteLazyImport.update({
    id: '/instagram_team',
    path: '/instagram_team',
    getParentRoute: () => ComsComIdTeambuilderv2RouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builderv2/~instagram_team/~route.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderJsonviewRouteLazyRoute =
  ComsComIdTeambuilderJsonviewRouteLazyImport.update({
    id: '/jsonview',
    path: '/jsonview',
    getParentRoute: () => ComsComIdTeambuilderRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builder/~jsonview/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTeambuilderComponentRouteLazyRoute =
  ComsComIdTeambuilderComponentRouteLazyImport.update({
    id: '/component',
    path: '/component',
    getParentRoute: () => ComsComIdTeambuilderRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builder/~component/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdEditModelRouteLazyRoute =
  ComsComIdEditModelRouteLazyImport.update({
    id: '/edit/model',
    path: '/edit/model',
    getParentRoute: () => ComsComIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~edit/~model/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdComponenteditorInstagramTeamLazyRoute =
  ComsComIdComponenteditorInstagramTeamLazyImport.update({
    id: '/InstagramTeam',
    path: '/InstagramTeam',
    getParentRoute: () => ComsComIdComponenteditorRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~component_editor/~InstagramTeam.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerIndexLazyRoute =
  WorkflowsWorkflowIdTriggerIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute =
  WorkflowRunsWorkflowRunIdVisualizationIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~visualization/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdChatIndexLazyRoute =
  WorkflowRunsWorkflowRunIdChatIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowRunsWorkflowRunIdChatRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~chat/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const TenantSettingsNewIndexLazyRoute = TenantSettingsNewIndexLazyImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => TenantSettingsNewRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/~tenant/~settings/~new/~index.lazy').then((d) => d.Route),
)

const TenantSettingsTenantSettingIdIndexLazyRoute =
  TenantSettingsTenantSettingIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TenantSettingsTenantSettingIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~tenant/~settings/~$tenantSettingId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const TeamTeamIdNewIndexLazyRoute = TeamTeamIdNewIndexLazyImport.update({
  id: '/new/',
  path: '/new/',
  getParentRoute: () => TeamTeamIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~team/~$teamId/~new/~index.lazy').then((d) => d.Route),
)

const SessionSessionIdTeamstateIndexLazyRoute =
  SessionSessionIdTeamstateIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => SessionSessionIdTeamstateRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~session/~$sessionId/~team_state/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const SessionSessionIdConfigIndexLazyRoute =
  SessionSessionIdConfigIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => SessionSessionIdConfigRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~session/~$sessionId/~config/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const SessionSessionIdActionsIndexLazyRoute =
  SessionSessionIdActionsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => SessionSessionIdActionsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~session/~$sessionId/~actions/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ResourceNewResIndexLazyRoute = ResourceNewResIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourceNewResRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~index.lazy').then((d) => d.Route),
)

const ResourceResIdPlatformaccountIndexLazyRoute =
  ResourceResIdPlatformaccountIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ResourceResIdPlatformaccountRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~resource/~$resId/~platform_account/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ProxyProxyIdActionsIndexLazyRoute =
  ProxyProxyIdActionsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProxyProxyIdActionsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~proxy/~$proxyId/~actions/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const PlatformAccountPlatformAccountIdActionsIndexLazyRoute =
  PlatformAccountPlatformAccountIdActionsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PlatformAccountPlatformAccountIdActionsRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~platform-account/~$platformAccountId/~actions/~index.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderv2IndexLazyRoute =
  ComsComIdTeambuilderv2IndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderv2RouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builderv2/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTeambuilderIndexLazyRoute =
  ComsComIdTeambuilderIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builder/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdRunIndexLazyRoute = ComsComIdRunIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ComsComIdRunRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~run/~index.lazy').then((d) => d.Route),
)

const ComsComIdTypeModelClientRoute = ComsComIdTypeModelClientImport.update({
  id: '/modelClient',
  path: '/modelClient',
  getParentRoute: () => ComsComIdTypeRouteLazyRoute,
} as any)

const ComsComIdComponenteditorSmolaAgentRoute =
  ComsComIdComponenteditorSmolaAgentImport.update({
    id: '/SmolaAgent',
    path: '/SmolaAgent',
    getParentRoute: () => ComsComIdComponenteditorRouteLazyRoute,
  } as any)

const ComsComIdComponenteditorMtOpenAIChatCompletionClientRoute =
  ComsComIdComponenteditorMtOpenAIChatCompletionClientImport.update({
    id: '/MtOpenAIChatCompletionClient',
    path: '/MtOpenAIChatCompletionClient',
    getParentRoute: () => ComsComIdComponenteditorRouteLazyRoute,
  } as any)

const ComsComIdComponenteditorInstagramAgentRoute =
  ComsComIdComponenteditorInstagramAgentImport.update({
    id: '/InstagramAgent',
    path: '/InstagramAgent',
    getParentRoute: () => ComsComIdComponenteditorRouteLazyRoute,
  } as any)

const ComsComIdComponenteditorAssistantAgentRoute =
  ComsComIdComponenteditorAssistantAgentImport.update({
    id: '/AssistantAgent',
    path: '/AssistantAgent',
    getParentRoute: () => ComsComIdComponenteditorRouteLazyRoute,
  } as any)

const ComsComIdComponenteditorSplatRoute =
  ComsComIdComponenteditorSplatImport.update({
    id: '/$',
    path: '/$',
    getParentRoute: () => ComsComIdComponenteditorRouteLazyRoute,
  } as any)

const SiteSiteIdHostIndexRoute = SiteSiteIdHostIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteSiteIdHostRouteRoute,
} as any)

const ComsComIdComponenteditorIndexRoute =
  ComsComIdComponenteditorIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdComponenteditorRouteLazyRoute,
  } as any)

const ComsComIdTeambuilderComponentNodeIdLazyRoute =
  ComsComIdTeambuilderComponentNodeIdLazyImport.update({
    id: '/$nodeId',
    path: '/$nodeId',
    getParentRoute: () => ComsComIdTeambuilderComponentRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builder/~component/~$nodeId.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderAgentNewRouteLazyRoute =
  ComsComIdTeambuilderAgentNewRouteLazyImport.update({
    id: '/agent/new',
    path: '/agent/new',
    getParentRoute: () => ComsComIdTeambuilderRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builder/~agent/~new/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTeambuilderAgentAgentIdRouteLazyRoute =
  ComsComIdTeambuilderAgentAgentIdRouteLazyImport.update({
    id: '/agent/$agentId',
    path: '/agent/$agentId',
    getParentRoute: () => ComsComIdTeambuilderRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builder/~agent/~$agentId/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute =
  WorkflowsWorkflowIdTriggerTestteamIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~test_team/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerTenantIndexLazyRoute =
  WorkflowsWorkflowIdTriggerTenantIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerTenantRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~tenant/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerTeamIndexLazyRoute =
  WorkflowsWorkflowIdTriggerTeamIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerTeamRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~team/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute =
  WorkflowsWorkflowIdTriggerSmolaIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~smola/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerResearchIndexLazyRoute =
  WorkflowsWorkflowIdTriggerResearchIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerResearchRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~research/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerModelIndexLazyRoute =
  WorkflowsWorkflowIdTriggerModelIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerModelRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~model/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerComIndexLazyRoute =
  WorkflowsWorkflowIdTriggerComIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerComRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~com/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute =
  WorkflowsWorkflowIdTriggerBrowserIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflows/~$workflowId/~trigger/~browser/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowsWorkflowIdTriggerAgIndexLazyRoute =
  WorkflowsWorkflowIdTriggerAgIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowsWorkflowIdTriggerAgRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflows/~$workflowId/~trigger/~ag/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute =
  WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~index.lazy'
    ).then((d) => d.Route),
  )

const TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute =
  TenantSettingsTenantSettingIdModelsettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~tenant/~settings/~$tenantSettingId/~model_settings/~index.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdViewSubComIdIndexLazyRoute =
  ComsComIdViewSubComIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdViewSubComIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~view/~$subComId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTeambuilderv2InstagramteamIndexLazyRoute =
  ComsComIdTeambuilderv2InstagramteamIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderv2InstagramteamRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builderv2/~instagram_team/~index.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderJsonviewIndexLazyRoute =
  ComsComIdTeambuilderJsonviewIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderJsonviewRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builder/~jsonview/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdEditModelIndexLazyRoute =
  ComsComIdEditModelIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdEditModelRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~edit/~model/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute =
  ComsComIdTeambuilderAgentAgentIdModelRouteLazyImport.update({
    id: '/model',
    path: '/model',
    getParentRoute: () => ComsComIdTeambuilderAgentAgentIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builder/~agent/~$agentId/~model/~route.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRoute =
  ComsComIdTeambuilderAgentAgentIdAgentRouteLazyImport.update({
    id: '/agent',
    path: '/agent',
    getParentRoute: () => ComsComIdTeambuilderAgentAgentIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builder/~agent/~$agentId/~agent/~route.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderAgentNewIndexLazyRoute =
  ComsComIdTeambuilderAgentNewIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderAgentNewRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builder/~agent/~new/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTeambuilderAgentAgentIdIndexLazyRoute =
  ComsComIdTeambuilderAgentAgentIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderAgentAgentIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builder/~agent/~$agentId/~index.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute =
  ComsComIdTeambuilderAgentAgentIdModelIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builder/~agent/~$agentId/~model/~index.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdTeambuilderAgentAgentIdAgentIndexLazyRoute =
  ComsComIdTeambuilderAgentAgentIdAgentIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~coms/~$comId/~team_builder/~agent/~$agentId/~agent/~index.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/coms': {
      id: '/coms'
      path: '/coms'
      fullPath: '/coms'
      preLoaderRoute: typeof ComsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/endpoint': {
      id: '/endpoint'
      path: '/endpoint'
      fullPath: '/endpoint'
      preLoaderRoute: typeof EndpointRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/envs': {
      id: '/envs'
      path: '/envs'
      fullPath: '/envs'
      preLoaderRoute: typeof EnvsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/model': {
      id: '/model'
      path: '/model'
      fullPath: '/model'
      preLoaderRoute: typeof ModelRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/platform': {
      id: '/platform'
      path: '/platform'
      fullPath: '/platform'
      preLoaderRoute: typeof PlatformRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/platform-account': {
      id: '/platform-account'
      path: '/platform-account'
      fullPath: '/platform-account'
      preLoaderRoute: typeof PlatformAccountRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/proxy': {
      id: '/proxy'
      path: '/proxy'
      fullPath: '/proxy'
      preLoaderRoute: typeof ProxyRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/recurring': {
      id: '/recurring'
      path: '/recurring'
      fullPath: '/recurring'
      preLoaderRoute: typeof RecurringRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/resource': {
      id: '/resource'
      path: '/resource'
      fullPath: '/resource'
      preLoaderRoute: typeof ResourceRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/scheduled-runs': {
      id: '/scheduled-runs'
      path: '/scheduled-runs'
      fullPath: '/scheduled-runs'
      preLoaderRoute: typeof ScheduledRunsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/session': {
      id: '/session'
      path: '/session'
      fullPath: '/session'
      preLoaderRoute: typeof SessionRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/site': {
      id: '/site'
      path: '/site'
      fullPath: '/site'
      preLoaderRoute: typeof SiteRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/team': {
      id: '/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/tenant': {
      id: '/tenant'
      path: '/tenant'
      fullPath: '/tenant'
      preLoaderRoute: typeof TenantRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/workflow-runs': {
      id: '/workflow-runs'
      path: '/workflow-runs'
      fullPath: '/workflow-runs'
      preLoaderRoute: typeof WorkflowRunsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/workflows': {
      id: '/workflows'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/platform/': {
      id: '/platform/'
      path: '/'
      fullPath: '/platform/'
      preLoaderRoute: typeof PlatformIndexImport
      parentRoute: typeof PlatformRouteLazyImport
    }
    '/site/': {
      id: '/site/'
      path: '/'
      fullPath: '/site/'
      preLoaderRoute: typeof SiteIndexImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/envs/create': {
      id: '/envs/create'
      path: '/create'
      fullPath: '/envs/create'
      preLoaderRoute: typeof EnvsCreateImport
      parentRoute: typeof EnvsRouteLazyImport
    }
    '/site/$siteId': {
      id: '/site/$siteId'
      path: '/$siteId'
      fullPath: '/site/$siteId'
      preLoaderRoute: typeof SiteSiteIdRouteImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexLazyImport
      parentRoute: typeof AdminRouteLazyImport
    }
    '/coms/': {
      id: '/coms/'
      path: '/'
      fullPath: '/coms/'
      preLoaderRoute: typeof ComsIndexLazyImport
      parentRoute: typeof ComsRouteLazyImport
    }
    '/endpoint/': {
      id: '/endpoint/'
      path: '/'
      fullPath: '/endpoint/'
      preLoaderRoute: typeof EndpointIndexLazyImport
      parentRoute: typeof EndpointRouteLazyImport
    }
    '/envs/': {
      id: '/envs/'
      path: '/'
      fullPath: '/envs/'
      preLoaderRoute: typeof EnvsIndexLazyImport
      parentRoute: typeof EnvsRouteLazyImport
    }
    '/events/': {
      id: '/events/'
      path: '/'
      fullPath: '/events/'
      preLoaderRoute: typeof EventsIndexLazyImport
      parentRoute: typeof EventsRouteLazyImport
    }
    '/model/': {
      id: '/model/'
      path: '/'
      fullPath: '/model/'
      preLoaderRoute: typeof ModelIndexLazyImport
      parentRoute: typeof ModelRouteLazyImport
    }
    '/platform-account/': {
      id: '/platform-account/'
      path: '/'
      fullPath: '/platform-account/'
      preLoaderRoute: typeof PlatformAccountIndexLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/post/': {
      id: '/post/'
      path: '/'
      fullPath: '/post/'
      preLoaderRoute: typeof PostIndexLazyImport
      parentRoute: typeof PostRouteLazyImport
    }
    '/proxy/': {
      id: '/proxy/'
      path: '/'
      fullPath: '/proxy/'
      preLoaderRoute: typeof ProxyIndexLazyImport
      parentRoute: typeof ProxyRouteLazyImport
    }
    '/recurring/': {
      id: '/recurring/'
      path: '/'
      fullPath: '/recurring/'
      preLoaderRoute: typeof RecurringIndexLazyImport
      parentRoute: typeof RecurringRouteLazyImport
    }
    '/resource/': {
      id: '/resource/'
      path: '/'
      fullPath: '/resource/'
      preLoaderRoute: typeof ResourceIndexLazyImport
      parentRoute: typeof ResourceRouteLazyImport
    }
    '/scheduled-runs/': {
      id: '/scheduled-runs/'
      path: '/'
      fullPath: '/scheduled-runs/'
      preLoaderRoute: typeof ScheduledRunsIndexLazyImport
      parentRoute: typeof ScheduledRunsRouteLazyImport
    }
    '/session/': {
      id: '/session/'
      path: '/'
      fullPath: '/session/'
      preLoaderRoute: typeof SessionIndexLazyImport
      parentRoute: typeof SessionRouteLazyImport
    }
    '/team/': {
      id: '/team/'
      path: '/'
      fullPath: '/team/'
      preLoaderRoute: typeof TeamIndexLazyImport
      parentRoute: typeof TeamRouteLazyImport
    }
    '/tenant/': {
      id: '/tenant/'
      path: '/'
      fullPath: '/tenant/'
      preLoaderRoute: typeof TenantIndexLazyImport
      parentRoute: typeof TenantRouteLazyImport
    }
    '/workflow-runs/': {
      id: '/workflow-runs/'
      path: '/'
      fullPath: '/workflow-runs/'
      preLoaderRoute: typeof WorkflowRunsIndexLazyImport
      parentRoute: typeof WorkflowRunsRouteLazyImport
    }
    '/workflows/': {
      id: '/workflows/'
      path: '/'
      fullPath: '/workflows/'
      preLoaderRoute: typeof WorkflowsIndexLazyImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
    '/coms/$comId': {
      id: '/coms/$comId'
      path: '/$comId'
      fullPath: '/coms/$comId'
      preLoaderRoute: typeof ComsComIdRouteLazyImport
      parentRoute: typeof ComsRouteLazyImport
    }
    '/model/$modelId': {
      id: '/model/$modelId'
      path: '/$modelId'
      fullPath: '/model/$modelId'
      preLoaderRoute: typeof ModelModelIdRouteLazyImport
      parentRoute: typeof ModelRouteLazyImport
    }
    '/model/new': {
      id: '/model/new'
      path: '/new'
      fullPath: '/model/new'
      preLoaderRoute: typeof ModelNewRouteLazyImport
      parentRoute: typeof ModelRouteLazyImport
    }
    '/platform-account/$platformAccountId': {
      id: '/platform-account/$platformAccountId'
      path: '/$platformAccountId'
      fullPath: '/platform-account/$platformAccountId'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdRouteLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/platform-account/new': {
      id: '/platform-account/new'
      path: '/new'
      fullPath: '/platform-account/new'
      preLoaderRoute: typeof PlatformAccountNewRouteLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/post/create': {
      id: '/post/create'
      path: '/create'
      fullPath: '/post/create'
      preLoaderRoute: typeof PostCreateLazyImport
      parentRoute: typeof PostRouteLazyImport
    }
    '/proxy/$proxyId': {
      id: '/proxy/$proxyId'
      path: '/$proxyId'
      fullPath: '/proxy/$proxyId'
      preLoaderRoute: typeof ProxyProxyIdRouteLazyImport
      parentRoute: typeof ProxyRouteLazyImport
    }
    '/proxy/new': {
      id: '/proxy/new'
      path: '/new'
      fullPath: '/proxy/new'
      preLoaderRoute: typeof ProxyNewRouteLazyImport
      parentRoute: typeof ProxyRouteLazyImport
    }
    '/resource/$resId': {
      id: '/resource/$resId'
      path: '/$resId'
      fullPath: '/resource/$resId'
      preLoaderRoute: typeof ResourceResIdRouteLazyImport
      parentRoute: typeof ResourceRouteLazyImport
    }
    '/resource/new': {
      id: '/resource/new'
      path: '/new'
      fullPath: '/resource/new'
      preLoaderRoute: typeof ResourceNewRouteLazyImport
      parentRoute: typeof ResourceRouteLazyImport
    }
    '/session/$sessionId': {
      id: '/session/$sessionId'
      path: '/$sessionId'
      fullPath: '/session/$sessionId'
      preLoaderRoute: typeof SessionSessionIdRouteLazyImport
      parentRoute: typeof SessionRouteLazyImport
    }
    '/team/$teamId': {
      id: '/team/$teamId'
      path: '/$teamId'
      fullPath: '/team/$teamId'
      preLoaderRoute: typeof TeamTeamIdRouteLazyImport
      parentRoute: typeof TeamRouteLazyImport
    }
    '/tenant/settings': {
      id: '/tenant/settings'
      path: '/settings'
      fullPath: '/tenant/settings'
      preLoaderRoute: typeof TenantSettingsRouteLazyImport
      parentRoute: typeof TenantRouteLazyImport
    }
    '/workflow-runs/$workflowRunId': {
      id: '/workflow-runs/$workflowRunId'
      path: '/$workflowRunId'
      fullPath: '/workflow-runs/$workflowRunId'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
      parentRoute: typeof WorkflowRunsRouteLazyImport
    }
    '/workflows/$workflowId': {
      id: '/workflows/$workflowId'
      path: '/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof WorkflowsWorkflowIdRouteLazyImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/onboarding/create-tenant/': {
      id: '/onboarding/create-tenant/'
      path: '/onboarding/create-tenant'
      fullPath: '/onboarding/create-tenant'
      preLoaderRoute: typeof OnboardingCreateTenantIndexImport
      parentRoute: typeof rootRoute
    }
    '/site/$siteId/': {
      id: '/site/$siteId/'
      path: '/'
      fullPath: '/site/$siteId/'
      preLoaderRoute: typeof SiteSiteIdIndexImport
      parentRoute: typeof SiteSiteIdRouteImport
    }
    '/site/create/': {
      id: '/site/create/'
      path: '/create'
      fullPath: '/site/create'
      preLoaderRoute: typeof SiteCreateIndexImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/site/$siteId/edit': {
      id: '/site/$siteId/edit'
      path: '/edit'
      fullPath: '/site/$siteId/edit'
      preLoaderRoute: typeof SiteSiteIdEditImport
      parentRoute: typeof SiteSiteIdRouteImport
    }
    '/site/$siteId/host': {
      id: '/site/$siteId/host'
      path: '/host'
      fullPath: '/site/$siteId/host'
      preLoaderRoute: typeof SiteSiteIdHostRouteImport
      parentRoute: typeof SiteSiteIdRouteImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/'
      fullPath: '/auth/login/'
      preLoaderRoute: typeof AuthLoginIndexLazyImport
      parentRoute: typeof AuthLoginRouteLazyImport
    }
    '/coms/$comId/': {
      id: '/coms/$comId/'
      path: '/'
      fullPath: '/coms/$comId/'
      preLoaderRoute: typeof ComsComIdIndexLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/model/$modelId/': {
      id: '/model/$modelId/'
      path: '/'
      fullPath: '/model/$modelId/'
      preLoaderRoute: typeof ModelModelIdIndexLazyImport
      parentRoute: typeof ModelModelIdRouteLazyImport
    }
    '/model/new/': {
      id: '/model/new/'
      path: '/'
      fullPath: '/model/new/'
      preLoaderRoute: typeof ModelNewIndexLazyImport
      parentRoute: typeof ModelNewRouteLazyImport
    }
    '/platform-account/$platformAccountId/': {
      id: '/platform-account/$platformAccountId/'
      path: '/'
      fullPath: '/platform-account/$platformAccountId/'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdIndexLazyImport
      parentRoute: typeof PlatformAccountPlatformAccountIdRouteLazyImport
    }
    '/platform-account/new/': {
      id: '/platform-account/new/'
      path: '/'
      fullPath: '/platform-account/new/'
      preLoaderRoute: typeof PlatformAccountNewIndexLazyImport
      parentRoute: typeof PlatformAccountNewRouteLazyImport
    }
    '/proxy/$proxyId/': {
      id: '/proxy/$proxyId/'
      path: '/'
      fullPath: '/proxy/$proxyId/'
      preLoaderRoute: typeof ProxyProxyIdIndexLazyImport
      parentRoute: typeof ProxyProxyIdRouteLazyImport
    }
    '/resource/$resId/': {
      id: '/resource/$resId/'
      path: '/'
      fullPath: '/resource/$resId/'
      preLoaderRoute: typeof ResourceResIdIndexLazyImport
      parentRoute: typeof ResourceResIdRouteLazyImport
    }
    '/session/$sessionId/': {
      id: '/session/$sessionId/'
      path: '/'
      fullPath: '/session/$sessionId/'
      preLoaderRoute: typeof SessionSessionIdIndexLazyImport
      parentRoute: typeof SessionSessionIdRouteLazyImport
    }
    '/tenant/settings/': {
      id: '/tenant/settings/'
      path: '/'
      fullPath: '/tenant/settings/'
      preLoaderRoute: typeof TenantSettingsIndexLazyImport
      parentRoute: typeof TenantSettingsRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/': {
      id: '/workflow-runs/$workflowRunId/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflows/$workflowId/': {
      id: '/workflows/$workflowId/'
      path: '/'
      fullPath: '/workflows/$workflowId/'
      preLoaderRoute: typeof WorkflowsWorkflowIdIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdRouteLazyImport
    }
    '/coms/$comId/component_editor': {
      id: '/coms/$comId/component_editor'
      path: '/component_editor'
      fullPath: '/coms/$comId/component_editor'
      preLoaderRoute: typeof ComsComIdComponenteditorRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/run': {
      id: '/coms/$comId/run'
      path: '/run'
      fullPath: '/coms/$comId/run'
      preLoaderRoute: typeof ComsComIdRunRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/team_builder': {
      id: '/coms/$comId/team_builder'
      path: '/team_builder'
      fullPath: '/coms/$comId/team_builder'
      preLoaderRoute: typeof ComsComIdTeambuilderRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/team_builderv2': {
      id: '/coms/$comId/team_builderv2'
      path: '/team_builderv2'
      fullPath: '/coms/$comId/team_builderv2'
      preLoaderRoute: typeof ComsComIdTeambuilderv2RouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/type': {
      id: '/coms/$comId/type'
      path: '/type'
      fullPath: '/coms/$comId/type'
      preLoaderRoute: typeof ComsComIdTypeRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/view': {
      id: '/coms/$comId/view'
      path: '/view'
      fullPath: '/coms/$comId/view'
      preLoaderRoute: typeof ComsComIdViewRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/visualization': {
      id: '/coms/$comId/visualization'
      path: '/visualization'
      fullPath: '/coms/$comId/visualization'
      preLoaderRoute: typeof ComsComIdVisualizationRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/platform-account/$platformAccountId/actions': {
      id: '/platform-account/$platformAccountId/actions'
      path: '/actions'
      fullPath: '/platform-account/$platformAccountId/actions'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdActionsRouteLazyImport
      parentRoute: typeof PlatformAccountPlatformAccountIdRouteLazyImport
    }
    '/proxy/$proxyId/actions': {
      id: '/proxy/$proxyId/actions'
      path: '/actions'
      fullPath: '/proxy/$proxyId/actions'
      preLoaderRoute: typeof ProxyProxyIdActionsRouteLazyImport
      parentRoute: typeof ProxyProxyIdRouteLazyImport
    }
    '/resource/$resId/platform_account': {
      id: '/resource/$resId/platform_account'
      path: '/platform_account'
      fullPath: '/resource/$resId/platform_account'
      preLoaderRoute: typeof ResourceResIdPlatformaccountRouteLazyImport
      parentRoute: typeof ResourceResIdRouteLazyImport
    }
    '/resource/new/res': {
      id: '/resource/new/res'
      path: '/res'
      fullPath: '/resource/new/res'
      preLoaderRoute: typeof ResourceNewResRouteLazyImport
      parentRoute: typeof ResourceNewRouteLazyImport
    }
    '/session/$sessionId/actions': {
      id: '/session/$sessionId/actions'
      path: '/actions'
      fullPath: '/session/$sessionId/actions'
      preLoaderRoute: typeof SessionSessionIdActionsRouteLazyImport
      parentRoute: typeof SessionSessionIdRouteLazyImport
    }
    '/session/$sessionId/config': {
      id: '/session/$sessionId/config'
      path: '/config'
      fullPath: '/session/$sessionId/config'
      preLoaderRoute: typeof SessionSessionIdConfigRouteLazyImport
      parentRoute: typeof SessionSessionIdRouteLazyImport
    }
    '/session/$sessionId/team_state': {
      id: '/session/$sessionId/team_state'
      path: '/team_state'
      fullPath: '/session/$sessionId/team_state'
      preLoaderRoute: typeof SessionSessionIdTeamstateRouteLazyImport
      parentRoute: typeof SessionSessionIdRouteLazyImport
    }
    '/tenant/settings/$tenantSettingId': {
      id: '/tenant/settings/$tenantSettingId'
      path: '/$tenantSettingId'
      fullPath: '/tenant/settings/$tenantSettingId'
      preLoaderRoute: typeof TenantSettingsTenantSettingIdRouteLazyImport
      parentRoute: typeof TenantSettingsRouteLazyImport
    }
    '/tenant/settings/new': {
      id: '/tenant/settings/new'
      path: '/new'
      fullPath: '/tenant/settings/new'
      preLoaderRoute: typeof TenantSettingsNewRouteLazyImport
      parentRoute: typeof TenantSettingsRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/additional-metadata': {
      id: '/workflow-runs/$workflowRunId/additional-metadata'
      path: '/additional-metadata'
      fullPath: '/workflow-runs/$workflowRunId/additional-metadata'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/chat': {
      id: '/workflow-runs/$workflowRunId/chat'
      path: '/chat'
      fullPath: '/workflow-runs/$workflowRunId/chat'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdChatRouteLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/input': {
      id: '/workflow-runs/$workflowRunId/input'
      path: '/input'
      fullPath: '/workflow-runs/$workflowRunId/input'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdInputLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/summary': {
      id: '/workflow-runs/$workflowRunId/summary'
      path: '/summary'
      fullPath: '/workflow-runs/$workflowRunId/summary'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdSummaryLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/visualization': {
      id: '/workflow-runs/$workflowRunId/visualization'
      path: '/visualization'
      fullPath: '/workflow-runs/$workflowRunId/visualization'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflows/$workflowId/trigger': {
      id: '/workflows/$workflowId/trigger'
      path: '/trigger'
      fullPath: '/workflows/$workflowId/trigger'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdRouteLazyImport
    }
    '/coms/$comId/component_editor/': {
      id: '/coms/$comId/component_editor/'
      path: '/'
      fullPath: '/coms/$comId/component_editor/'
      preLoaderRoute: typeof ComsComIdComponenteditorIndexImport
      parentRoute: typeof ComsComIdComponenteditorRouteLazyImport
    }
    '/site/$siteId/host/': {
      id: '/site/$siteId/host/'
      path: '/'
      fullPath: '/site/$siteId/host/'
      preLoaderRoute: typeof SiteSiteIdHostIndexImport
      parentRoute: typeof SiteSiteIdHostRouteImport
    }
    '/coms/$comId/component_editor/$': {
      id: '/coms/$comId/component_editor/$'
      path: '/$'
      fullPath: '/coms/$comId/component_editor/$'
      preLoaderRoute: typeof ComsComIdComponenteditorSplatImport
      parentRoute: typeof ComsComIdComponenteditorRouteLazyImport
    }
    '/coms/$comId/component_editor/AssistantAgent': {
      id: '/coms/$comId/component_editor/AssistantAgent'
      path: '/AssistantAgent'
      fullPath: '/coms/$comId/component_editor/AssistantAgent'
      preLoaderRoute: typeof ComsComIdComponenteditorAssistantAgentImport
      parentRoute: typeof ComsComIdComponenteditorRouteLazyImport
    }
    '/coms/$comId/component_editor/InstagramAgent': {
      id: '/coms/$comId/component_editor/InstagramAgent'
      path: '/InstagramAgent'
      fullPath: '/coms/$comId/component_editor/InstagramAgent'
      preLoaderRoute: typeof ComsComIdComponenteditorInstagramAgentImport
      parentRoute: typeof ComsComIdComponenteditorRouteLazyImport
    }
    '/coms/$comId/component_editor/MtOpenAIChatCompletionClient': {
      id: '/coms/$comId/component_editor/MtOpenAIChatCompletionClient'
      path: '/MtOpenAIChatCompletionClient'
      fullPath: '/coms/$comId/component_editor/MtOpenAIChatCompletionClient'
      preLoaderRoute: typeof ComsComIdComponenteditorMtOpenAIChatCompletionClientImport
      parentRoute: typeof ComsComIdComponenteditorRouteLazyImport
    }
    '/coms/$comId/component_editor/SmolaAgent': {
      id: '/coms/$comId/component_editor/SmolaAgent'
      path: '/SmolaAgent'
      fullPath: '/coms/$comId/component_editor/SmolaAgent'
      preLoaderRoute: typeof ComsComIdComponenteditorSmolaAgentImport
      parentRoute: typeof ComsComIdComponenteditorRouteLazyImport
    }
    '/coms/$comId/type/modelClient': {
      id: '/coms/$comId/type/modelClient'
      path: '/modelClient'
      fullPath: '/coms/$comId/type/modelClient'
      preLoaderRoute: typeof ComsComIdTypeModelClientImport
      parentRoute: typeof ComsComIdTypeRouteLazyImport
    }
    '/coms/$comId/run/': {
      id: '/coms/$comId/run/'
      path: '/'
      fullPath: '/coms/$comId/run/'
      preLoaderRoute: typeof ComsComIdRunIndexLazyImport
      parentRoute: typeof ComsComIdRunRouteLazyImport
    }
    '/coms/$comId/team_builder/': {
      id: '/coms/$comId/team_builder/'
      path: '/'
      fullPath: '/coms/$comId/team_builder/'
      preLoaderRoute: typeof ComsComIdTeambuilderIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderRouteLazyImport
    }
    '/coms/$comId/team_builderv2/': {
      id: '/coms/$comId/team_builderv2/'
      path: '/'
      fullPath: '/coms/$comId/team_builderv2/'
      preLoaderRoute: typeof ComsComIdTeambuilderv2IndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderv2RouteLazyImport
    }
    '/platform-account/$platformAccountId/actions/': {
      id: '/platform-account/$platformAccountId/actions/'
      path: '/'
      fullPath: '/platform-account/$platformAccountId/actions/'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdActionsIndexLazyImport
      parentRoute: typeof PlatformAccountPlatformAccountIdActionsRouteLazyImport
    }
    '/proxy/$proxyId/actions/': {
      id: '/proxy/$proxyId/actions/'
      path: '/'
      fullPath: '/proxy/$proxyId/actions/'
      preLoaderRoute: typeof ProxyProxyIdActionsIndexLazyImport
      parentRoute: typeof ProxyProxyIdActionsRouteLazyImport
    }
    '/resource/$resId/platform_account/': {
      id: '/resource/$resId/platform_account/'
      path: '/'
      fullPath: '/resource/$resId/platform_account/'
      preLoaderRoute: typeof ResourceResIdPlatformaccountIndexLazyImport
      parentRoute: typeof ResourceResIdPlatformaccountRouteLazyImport
    }
    '/resource/new/res/': {
      id: '/resource/new/res/'
      path: '/'
      fullPath: '/resource/new/res/'
      preLoaderRoute: typeof ResourceNewResIndexLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/session/$sessionId/actions/': {
      id: '/session/$sessionId/actions/'
      path: '/'
      fullPath: '/session/$sessionId/actions/'
      preLoaderRoute: typeof SessionSessionIdActionsIndexLazyImport
      parentRoute: typeof SessionSessionIdActionsRouteLazyImport
    }
    '/session/$sessionId/config/': {
      id: '/session/$sessionId/config/'
      path: '/'
      fullPath: '/session/$sessionId/config/'
      preLoaderRoute: typeof SessionSessionIdConfigIndexLazyImport
      parentRoute: typeof SessionSessionIdConfigRouteLazyImport
    }
    '/session/$sessionId/team_state/': {
      id: '/session/$sessionId/team_state/'
      path: '/'
      fullPath: '/session/$sessionId/team_state/'
      preLoaderRoute: typeof SessionSessionIdTeamstateIndexLazyImport
      parentRoute: typeof SessionSessionIdTeamstateRouteLazyImport
    }
    '/team/$teamId/new/': {
      id: '/team/$teamId/new/'
      path: '/new'
      fullPath: '/team/$teamId/new'
      preLoaderRoute: typeof TeamTeamIdNewIndexLazyImport
      parentRoute: typeof TeamTeamIdRouteLazyImport
    }
    '/tenant/settings/$tenantSettingId/': {
      id: '/tenant/settings/$tenantSettingId/'
      path: '/'
      fullPath: '/tenant/settings/$tenantSettingId/'
      preLoaderRoute: typeof TenantSettingsTenantSettingIdIndexLazyImport
      parentRoute: typeof TenantSettingsTenantSettingIdRouteLazyImport
    }
    '/tenant/settings/new/': {
      id: '/tenant/settings/new/'
      path: '/'
      fullPath: '/tenant/settings/new/'
      preLoaderRoute: typeof TenantSettingsNewIndexLazyImport
      parentRoute: typeof TenantSettingsNewRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/chat/': {
      id: '/workflow-runs/$workflowRunId/chat/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/chat/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdChatIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdChatRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/visualization/': {
      id: '/workflow-runs/$workflowRunId/visualization/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/visualization/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport
    }
    '/workflows/$workflowId/trigger/': {
      id: '/workflows/$workflowId/trigger/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/coms/$comId/component_editor/InstagramTeam': {
      id: '/coms/$comId/component_editor/InstagramTeam'
      path: '/InstagramTeam'
      fullPath: '/coms/$comId/component_editor/InstagramTeam'
      preLoaderRoute: typeof ComsComIdComponenteditorInstagramTeamLazyImport
      parentRoute: typeof ComsComIdComponenteditorRouteLazyImport
    }
    '/coms/$comId/edit/model': {
      id: '/coms/$comId/edit/model'
      path: '/edit/model'
      fullPath: '/coms/$comId/edit/model'
      preLoaderRoute: typeof ComsComIdEditModelRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/team_builder/component': {
      id: '/coms/$comId/team_builder/component'
      path: '/component'
      fullPath: '/coms/$comId/team_builder/component'
      preLoaderRoute: typeof ComsComIdTeambuilderComponentRouteLazyImport
      parentRoute: typeof ComsComIdTeambuilderRouteLazyImport
    }
    '/coms/$comId/team_builder/jsonview': {
      id: '/coms/$comId/team_builder/jsonview'
      path: '/jsonview'
      fullPath: '/coms/$comId/team_builder/jsonview'
      preLoaderRoute: typeof ComsComIdTeambuilderJsonviewRouteLazyImport
      parentRoute: typeof ComsComIdTeambuilderRouteLazyImport
    }
    '/coms/$comId/team_builderv2/instagram_team': {
      id: '/coms/$comId/team_builderv2/instagram_team'
      path: '/instagram_team'
      fullPath: '/coms/$comId/team_builderv2/instagram_team'
      preLoaderRoute: typeof ComsComIdTeambuilderv2InstagramteamRouteLazyImport
      parentRoute: typeof ComsComIdTeambuilderv2RouteLazyImport
    }
    '/coms/$comId/type/assisant': {
      id: '/coms/$comId/type/assisant'
      path: '/assisant'
      fullPath: '/coms/$comId/type/assisant'
      preLoaderRoute: typeof ComsComIdTypeAssisantLazyImport
      parentRoute: typeof ComsComIdTypeRouteLazyImport
    }
    '/coms/$comId/type/instagramTeam': {
      id: '/coms/$comId/type/instagramTeam'
      path: '/instagramTeam'
      fullPath: '/coms/$comId/type/instagramTeam'
      preLoaderRoute: typeof ComsComIdTypeInstagramTeamLazyImport
      parentRoute: typeof ComsComIdTypeRouteLazyImport
    }
    '/coms/$comId/view/$subComId': {
      id: '/coms/$comId/view/$subComId'
      path: '/$subComId'
      fullPath: '/coms/$comId/view/$subComId'
      preLoaderRoute: typeof ComsComIdViewSubComIdRouteLazyImport
      parentRoute: typeof ComsComIdViewRouteLazyImport
    }
    '/resource/new/res/browser': {
      id: '/resource/new/res/browser'
      path: '/browser'
      fullPath: '/resource/new/res/browser'
      preLoaderRoute: typeof ResourceNewResBrowserLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/resource/new/res/chat': {
      id: '/resource/new/res/chat'
      path: '/chat'
      fullPath: '/resource/new/res/chat'
      preLoaderRoute: typeof ResourceNewResChatLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/resource/new/res/platform_account': {
      id: '/resource/new/res/platform_account'
      path: '/platform_account'
      fullPath: '/resource/new/res/platform_account'
      preLoaderRoute: typeof ResourceNewResPlatformaccountLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/tenant/settings/$tenantSettingId/model_settings': {
      id: '/tenant/settings/$tenantSettingId/model_settings'
      path: '/model_settings'
      fullPath: '/tenant/settings/$tenantSettingId/model_settings'
      preLoaderRoute: typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyImport
      parentRoute: typeof TenantSettingsTenantSettingIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/stepRun/$stepRunId': {
      id: '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
      path: '/stepRun/$stepRunId'
      fullPath: '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflows/$workflowId/trigger/$': {
      id: '/workflows/$workflowId/trigger/$'
      path: '/$'
      fullPath: '/workflows/$workflowId/trigger/$'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerSplatLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/ag': {
      id: '/workflows/$workflowId/trigger/ag'
      path: '/ag'
      fullPath: '/workflows/$workflowId/trigger/ag'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerAgRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/browser': {
      id: '/workflows/$workflowId/trigger/browser'
      path: '/browser'
      fullPath: '/workflows/$workflowId/trigger/browser'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/com': {
      id: '/workflows/$workflowId/trigger/com'
      path: '/com'
      fullPath: '/workflows/$workflowId/trigger/com'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerComRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/model': {
      id: '/workflows/$workflowId/trigger/model'
      path: '/model'
      fullPath: '/workflows/$workflowId/trigger/model'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerModelRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/research': {
      id: '/workflows/$workflowId/trigger/research'
      path: '/research'
      fullPath: '/workflows/$workflowId/trigger/research'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerResearchRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/smola': {
      id: '/workflows/$workflowId/trigger/smola'
      path: '/smola'
      fullPath: '/workflows/$workflowId/trigger/smola'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/team': {
      id: '/workflows/$workflowId/trigger/team'
      path: '/team'
      fullPath: '/workflows/$workflowId/trigger/team'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTeamRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/tenant': {
      id: '/workflows/$workflowId/trigger/tenant'
      path: '/tenant'
      fullPath: '/workflows/$workflowId/trigger/tenant'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTenantRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/workflows/$workflowId/trigger/test_team': {
      id: '/workflows/$workflowId/trigger/test_team'
      path: '/test_team'
      fullPath: '/workflows/$workflowId/trigger/test_team'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyImport
    }
    '/coms/$comId/edit/model/': {
      id: '/coms/$comId/edit/model/'
      path: '/'
      fullPath: '/coms/$comId/edit/model/'
      preLoaderRoute: typeof ComsComIdEditModelIndexLazyImport
      parentRoute: typeof ComsComIdEditModelRouteLazyImport
    }
    '/coms/$comId/team_builder/jsonview/': {
      id: '/coms/$comId/team_builder/jsonview/'
      path: '/'
      fullPath: '/coms/$comId/team_builder/jsonview/'
      preLoaderRoute: typeof ComsComIdTeambuilderJsonviewIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderJsonviewRouteLazyImport
    }
    '/coms/$comId/team_builderv2/instagram_team/': {
      id: '/coms/$comId/team_builderv2/instagram_team/'
      path: '/'
      fullPath: '/coms/$comId/team_builderv2/instagram_team/'
      preLoaderRoute: typeof ComsComIdTeambuilderv2InstagramteamIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderv2InstagramteamRouteLazyImport
    }
    '/coms/$comId/view/$subComId/': {
      id: '/coms/$comId/view/$subComId/'
      path: '/'
      fullPath: '/coms/$comId/view/$subComId/'
      preLoaderRoute: typeof ComsComIdViewSubComIdIndexLazyImport
      parentRoute: typeof ComsComIdViewSubComIdRouteLazyImport
    }
    '/tenant/settings/$tenantSettingId/model_settings/': {
      id: '/tenant/settings/$tenantSettingId/model_settings/'
      path: '/'
      fullPath: '/tenant/settings/$tenantSettingId/model_settings/'
      preLoaderRoute: typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyImport
      parentRoute: typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/stepRun/$stepRunId/': {
      id: '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport
    }
    '/workflows/$workflowId/trigger/ag/': {
      id: '/workflows/$workflowId/trigger/ag/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/ag/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerAgIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerAgRouteLazyImport
    }
    '/workflows/$workflowId/trigger/browser/': {
      id: '/workflows/$workflowId/trigger/browser/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/browser/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyImport
    }
    '/workflows/$workflowId/trigger/com/': {
      id: '/workflows/$workflowId/trigger/com/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/com/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerComIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerComRouteLazyImport
    }
    '/workflows/$workflowId/trigger/model/': {
      id: '/workflows/$workflowId/trigger/model/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/model/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerModelIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerModelRouteLazyImport
    }
    '/workflows/$workflowId/trigger/research/': {
      id: '/workflows/$workflowId/trigger/research/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/research/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerResearchIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerResearchRouteLazyImport
    }
    '/workflows/$workflowId/trigger/smola/': {
      id: '/workflows/$workflowId/trigger/smola/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/smola/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyImport
    }
    '/workflows/$workflowId/trigger/team/': {
      id: '/workflows/$workflowId/trigger/team/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/team/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTeamIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerTeamRouteLazyImport
    }
    '/workflows/$workflowId/trigger/tenant/': {
      id: '/workflows/$workflowId/trigger/tenant/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/tenant/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTenantIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerTenantRouteLazyImport
    }
    '/workflows/$workflowId/trigger/test_team/': {
      id: '/workflows/$workflowId/trigger/test_team/'
      path: '/'
      fullPath: '/workflows/$workflowId/trigger/test_team/'
      preLoaderRoute: typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyImport
      parentRoute: typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyImport
    }
    '/coms/$comId/team_builder/agent/$agentId': {
      id: '/coms/$comId/team_builder/agent/$agentId'
      path: '/agent/$agentId'
      fullPath: '/coms/$comId/team_builder/agent/$agentId'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentAgentIdRouteLazyImport
      parentRoute: typeof ComsComIdTeambuilderRouteLazyImport
    }
    '/coms/$comId/team_builder/agent/new': {
      id: '/coms/$comId/team_builder/agent/new'
      path: '/agent/new'
      fullPath: '/coms/$comId/team_builder/agent/new'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentNewRouteLazyImport
      parentRoute: typeof ComsComIdTeambuilderRouteLazyImport
    }
    '/coms/$comId/team_builder/component/$nodeId': {
      id: '/coms/$comId/team_builder/component/$nodeId'
      path: '/$nodeId'
      fullPath: '/coms/$comId/team_builder/component/$nodeId'
      preLoaderRoute: typeof ComsComIdTeambuilderComponentNodeIdLazyImport
      parentRoute: typeof ComsComIdTeambuilderComponentRouteLazyImport
    }
    '/coms/$comId/team_builder/agent/$agentId/': {
      id: '/coms/$comId/team_builder/agent/$agentId/'
      path: '/'
      fullPath: '/coms/$comId/team_builder/agent/$agentId/'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentAgentIdIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderAgentAgentIdRouteLazyImport
    }
    '/coms/$comId/team_builder/agent/new/': {
      id: '/coms/$comId/team_builder/agent/new/'
      path: '/'
      fullPath: '/coms/$comId/team_builder/agent/new/'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentNewIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderAgentNewRouteLazyImport
    }
    '/coms/$comId/team_builder/agent/$agentId/agent': {
      id: '/coms/$comId/team_builder/agent/$agentId/agent'
      path: '/agent'
      fullPath: '/coms/$comId/team_builder/agent/$agentId/agent'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentAgentIdAgentRouteLazyImport
      parentRoute: typeof ComsComIdTeambuilderAgentAgentIdRouteLazyImport
    }
    '/coms/$comId/team_builder/agent/$agentId/model': {
      id: '/coms/$comId/team_builder/agent/$agentId/model'
      path: '/model'
      fullPath: '/coms/$comId/team_builder/agent/$agentId/model'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyImport
      parentRoute: typeof ComsComIdTeambuilderAgentAgentIdRouteLazyImport
    }
    '/coms/$comId/team_builder/agent/$agentId/agent/': {
      id: '/coms/$comId/team_builder/agent/$agentId/agent/'
      path: '/'
      fullPath: '/coms/$comId/team_builder/agent/$agentId/agent/'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentAgentIdAgentIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderAgentAgentIdAgentRouteLazyImport
    }
    '/coms/$comId/team_builder/agent/$agentId/model/': {
      id: '/coms/$comId/team_builder/agent/$agentId/model/'
      path: '/'
      fullPath: '/coms/$comId/team_builder/agent/$agentId/model/'
      preLoaderRoute: typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyImport
    }
  }
}

// Create and export the route tree

interface AdminRouteLazyRouteChildren {
  AdminIndexLazyRoute: typeof AdminIndexLazyRoute
}

const AdminRouteLazyRouteChildren: AdminRouteLazyRouteChildren = {
  AdminIndexLazyRoute: AdminIndexLazyRoute,
}

const AdminRouteLazyRouteWithChildren = AdminRouteLazyRoute._addFileChildren(
  AdminRouteLazyRouteChildren,
)

interface AuthLoginRouteLazyRouteChildren {
  AuthLoginIndexLazyRoute: typeof AuthLoginIndexLazyRoute
}

const AuthLoginRouteLazyRouteChildren: AuthLoginRouteLazyRouteChildren = {
  AuthLoginIndexLazyRoute: AuthLoginIndexLazyRoute,
}

const AuthLoginRouteLazyRouteWithChildren =
  AuthLoginRouteLazyRoute._addFileChildren(AuthLoginRouteLazyRouteChildren)

interface AuthRouteLazyRouteChildren {
  AuthLoginRouteLazyRoute: typeof AuthLoginRouteLazyRouteWithChildren
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
}

const AuthRouteLazyRouteChildren: AuthRouteLazyRouteChildren = {
  AuthLoginRouteLazyRoute: AuthLoginRouteLazyRouteWithChildren,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
}

const AuthRouteLazyRouteWithChildren = AuthRouteLazyRoute._addFileChildren(
  AuthRouteLazyRouteChildren,
)

interface ComsComIdComponenteditorRouteLazyRouteChildren {
  ComsComIdComponenteditorIndexRoute: typeof ComsComIdComponenteditorIndexRoute
  ComsComIdComponenteditorSplatRoute: typeof ComsComIdComponenteditorSplatRoute
  ComsComIdComponenteditorAssistantAgentRoute: typeof ComsComIdComponenteditorAssistantAgentRoute
  ComsComIdComponenteditorInstagramAgentRoute: typeof ComsComIdComponenteditorInstagramAgentRoute
  ComsComIdComponenteditorMtOpenAIChatCompletionClientRoute: typeof ComsComIdComponenteditorMtOpenAIChatCompletionClientRoute
  ComsComIdComponenteditorSmolaAgentRoute: typeof ComsComIdComponenteditorSmolaAgentRoute
  ComsComIdComponenteditorInstagramTeamLazyRoute: typeof ComsComIdComponenteditorInstagramTeamLazyRoute
}

const ComsComIdComponenteditorRouteLazyRouteChildren: ComsComIdComponenteditorRouteLazyRouteChildren =
  {
    ComsComIdComponenteditorIndexRoute: ComsComIdComponenteditorIndexRoute,
    ComsComIdComponenteditorSplatRoute: ComsComIdComponenteditorSplatRoute,
    ComsComIdComponenteditorAssistantAgentRoute:
      ComsComIdComponenteditorAssistantAgentRoute,
    ComsComIdComponenteditorInstagramAgentRoute:
      ComsComIdComponenteditorInstagramAgentRoute,
    ComsComIdComponenteditorMtOpenAIChatCompletionClientRoute:
      ComsComIdComponenteditorMtOpenAIChatCompletionClientRoute,
    ComsComIdComponenteditorSmolaAgentRoute:
      ComsComIdComponenteditorSmolaAgentRoute,
    ComsComIdComponenteditorInstagramTeamLazyRoute:
      ComsComIdComponenteditorInstagramTeamLazyRoute,
  }

const ComsComIdComponenteditorRouteLazyRouteWithChildren =
  ComsComIdComponenteditorRouteLazyRoute._addFileChildren(
    ComsComIdComponenteditorRouteLazyRouteChildren,
  )

interface ComsComIdRunRouteLazyRouteChildren {
  ComsComIdRunIndexLazyRoute: typeof ComsComIdRunIndexLazyRoute
}

const ComsComIdRunRouteLazyRouteChildren: ComsComIdRunRouteLazyRouteChildren = {
  ComsComIdRunIndexLazyRoute: ComsComIdRunIndexLazyRoute,
}

const ComsComIdRunRouteLazyRouteWithChildren =
  ComsComIdRunRouteLazyRoute._addFileChildren(
    ComsComIdRunRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderComponentRouteLazyRouteChildren {
  ComsComIdTeambuilderComponentNodeIdLazyRoute: typeof ComsComIdTeambuilderComponentNodeIdLazyRoute
}

const ComsComIdTeambuilderComponentRouteLazyRouteChildren: ComsComIdTeambuilderComponentRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderComponentNodeIdLazyRoute:
      ComsComIdTeambuilderComponentNodeIdLazyRoute,
  }

const ComsComIdTeambuilderComponentRouteLazyRouteWithChildren =
  ComsComIdTeambuilderComponentRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderComponentRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderJsonviewRouteLazyRouteChildren {
  ComsComIdTeambuilderJsonviewIndexLazyRoute: typeof ComsComIdTeambuilderJsonviewIndexLazyRoute
}

const ComsComIdTeambuilderJsonviewRouteLazyRouteChildren: ComsComIdTeambuilderJsonviewRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderJsonviewIndexLazyRoute:
      ComsComIdTeambuilderJsonviewIndexLazyRoute,
  }

const ComsComIdTeambuilderJsonviewRouteLazyRouteWithChildren =
  ComsComIdTeambuilderJsonviewRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderJsonviewRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRouteChildren {
  ComsComIdTeambuilderAgentAgentIdAgentIndexLazyRoute: typeof ComsComIdTeambuilderAgentAgentIdAgentIndexLazyRoute
}

const ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRouteChildren: ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderAgentAgentIdAgentIndexLazyRoute:
      ComsComIdTeambuilderAgentAgentIdAgentIndexLazyRoute,
  }

const ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRouteWithChildren =
  ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteChildren {
  ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute: typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute
}

const ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteChildren: ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute:
      ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute,
  }

const ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren =
  ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderAgentAgentIdRouteLazyRouteChildren {
  ComsComIdTeambuilderAgentAgentIdIndexLazyRoute: typeof ComsComIdTeambuilderAgentAgentIdIndexLazyRoute
  ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRoute: typeof ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRouteWithChildren
  ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute: typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren
}

const ComsComIdTeambuilderAgentAgentIdRouteLazyRouteChildren: ComsComIdTeambuilderAgentAgentIdRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderAgentAgentIdIndexLazyRoute:
      ComsComIdTeambuilderAgentAgentIdIndexLazyRoute,
    ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRoute:
      ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRouteWithChildren,
    ComsComIdTeambuilderAgentAgentIdModelRouteLazyRoute:
      ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren,
  }

const ComsComIdTeambuilderAgentAgentIdRouteLazyRouteWithChildren =
  ComsComIdTeambuilderAgentAgentIdRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderAgentAgentIdRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderAgentNewRouteLazyRouteChildren {
  ComsComIdTeambuilderAgentNewIndexLazyRoute: typeof ComsComIdTeambuilderAgentNewIndexLazyRoute
}

const ComsComIdTeambuilderAgentNewRouteLazyRouteChildren: ComsComIdTeambuilderAgentNewRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderAgentNewIndexLazyRoute:
      ComsComIdTeambuilderAgentNewIndexLazyRoute,
  }

const ComsComIdTeambuilderAgentNewRouteLazyRouteWithChildren =
  ComsComIdTeambuilderAgentNewRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderAgentNewRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderRouteLazyRouteChildren {
  ComsComIdTeambuilderIndexLazyRoute: typeof ComsComIdTeambuilderIndexLazyRoute
  ComsComIdTeambuilderComponentRouteLazyRoute: typeof ComsComIdTeambuilderComponentRouteLazyRouteWithChildren
  ComsComIdTeambuilderJsonviewRouteLazyRoute: typeof ComsComIdTeambuilderJsonviewRouteLazyRouteWithChildren
  ComsComIdTeambuilderAgentAgentIdRouteLazyRoute: typeof ComsComIdTeambuilderAgentAgentIdRouteLazyRouteWithChildren
  ComsComIdTeambuilderAgentNewRouteLazyRoute: typeof ComsComIdTeambuilderAgentNewRouteLazyRouteWithChildren
}

const ComsComIdTeambuilderRouteLazyRouteChildren: ComsComIdTeambuilderRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderIndexLazyRoute: ComsComIdTeambuilderIndexLazyRoute,
    ComsComIdTeambuilderComponentRouteLazyRoute:
      ComsComIdTeambuilderComponentRouteLazyRouteWithChildren,
    ComsComIdTeambuilderJsonviewRouteLazyRoute:
      ComsComIdTeambuilderJsonviewRouteLazyRouteWithChildren,
    ComsComIdTeambuilderAgentAgentIdRouteLazyRoute:
      ComsComIdTeambuilderAgentAgentIdRouteLazyRouteWithChildren,
    ComsComIdTeambuilderAgentNewRouteLazyRoute:
      ComsComIdTeambuilderAgentNewRouteLazyRouteWithChildren,
  }

const ComsComIdTeambuilderRouteLazyRouteWithChildren =
  ComsComIdTeambuilderRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderv2InstagramteamRouteLazyRouteChildren {
  ComsComIdTeambuilderv2InstagramteamIndexLazyRoute: typeof ComsComIdTeambuilderv2InstagramteamIndexLazyRoute
}

const ComsComIdTeambuilderv2InstagramteamRouteLazyRouteChildren: ComsComIdTeambuilderv2InstagramteamRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderv2InstagramteamIndexLazyRoute:
      ComsComIdTeambuilderv2InstagramteamIndexLazyRoute,
  }

const ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren =
  ComsComIdTeambuilderv2InstagramteamRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderv2InstagramteamRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderv2RouteLazyRouteChildren {
  ComsComIdTeambuilderv2IndexLazyRoute: typeof ComsComIdTeambuilderv2IndexLazyRoute
  ComsComIdTeambuilderv2InstagramteamRouteLazyRoute: typeof ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren
}

const ComsComIdTeambuilderv2RouteLazyRouteChildren: ComsComIdTeambuilderv2RouteLazyRouteChildren =
  {
    ComsComIdTeambuilderv2IndexLazyRoute: ComsComIdTeambuilderv2IndexLazyRoute,
    ComsComIdTeambuilderv2InstagramteamRouteLazyRoute:
      ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren,
  }

const ComsComIdTeambuilderv2RouteLazyRouteWithChildren =
  ComsComIdTeambuilderv2RouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderv2RouteLazyRouteChildren,
  )

interface ComsComIdTypeRouteLazyRouteChildren {
  ComsComIdTypeModelClientRoute: typeof ComsComIdTypeModelClientRoute
  ComsComIdTypeAssisantLazyRoute: typeof ComsComIdTypeAssisantLazyRoute
  ComsComIdTypeInstagramTeamLazyRoute: typeof ComsComIdTypeInstagramTeamLazyRoute
}

const ComsComIdTypeRouteLazyRouteChildren: ComsComIdTypeRouteLazyRouteChildren =
  {
    ComsComIdTypeModelClientRoute: ComsComIdTypeModelClientRoute,
    ComsComIdTypeAssisantLazyRoute: ComsComIdTypeAssisantLazyRoute,
    ComsComIdTypeInstagramTeamLazyRoute: ComsComIdTypeInstagramTeamLazyRoute,
  }

const ComsComIdTypeRouteLazyRouteWithChildren =
  ComsComIdTypeRouteLazyRoute._addFileChildren(
    ComsComIdTypeRouteLazyRouteChildren,
  )

interface ComsComIdViewSubComIdRouteLazyRouteChildren {
  ComsComIdViewSubComIdIndexLazyRoute: typeof ComsComIdViewSubComIdIndexLazyRoute
}

const ComsComIdViewSubComIdRouteLazyRouteChildren: ComsComIdViewSubComIdRouteLazyRouteChildren =
  {
    ComsComIdViewSubComIdIndexLazyRoute: ComsComIdViewSubComIdIndexLazyRoute,
  }

const ComsComIdViewSubComIdRouteLazyRouteWithChildren =
  ComsComIdViewSubComIdRouteLazyRoute._addFileChildren(
    ComsComIdViewSubComIdRouteLazyRouteChildren,
  )

interface ComsComIdViewRouteLazyRouteChildren {
  ComsComIdViewSubComIdRouteLazyRoute: typeof ComsComIdViewSubComIdRouteLazyRouteWithChildren
}

const ComsComIdViewRouteLazyRouteChildren: ComsComIdViewRouteLazyRouteChildren =
  {
    ComsComIdViewSubComIdRouteLazyRoute:
      ComsComIdViewSubComIdRouteLazyRouteWithChildren,
  }

const ComsComIdViewRouteLazyRouteWithChildren =
  ComsComIdViewRouteLazyRoute._addFileChildren(
    ComsComIdViewRouteLazyRouteChildren,
  )

interface ComsComIdEditModelRouteLazyRouteChildren {
  ComsComIdEditModelIndexLazyRoute: typeof ComsComIdEditModelIndexLazyRoute
}

const ComsComIdEditModelRouteLazyRouteChildren: ComsComIdEditModelRouteLazyRouteChildren =
  {
    ComsComIdEditModelIndexLazyRoute: ComsComIdEditModelIndexLazyRoute,
  }

const ComsComIdEditModelRouteLazyRouteWithChildren =
  ComsComIdEditModelRouteLazyRoute._addFileChildren(
    ComsComIdEditModelRouteLazyRouteChildren,
  )

interface ComsComIdRouteLazyRouteChildren {
  ComsComIdIndexLazyRoute: typeof ComsComIdIndexLazyRoute
  ComsComIdComponenteditorRouteLazyRoute: typeof ComsComIdComponenteditorRouteLazyRouteWithChildren
  ComsComIdRunRouteLazyRoute: typeof ComsComIdRunRouteLazyRouteWithChildren
  ComsComIdTeambuilderRouteLazyRoute: typeof ComsComIdTeambuilderRouteLazyRouteWithChildren
  ComsComIdTeambuilderv2RouteLazyRoute: typeof ComsComIdTeambuilderv2RouteLazyRouteWithChildren
  ComsComIdTypeRouteLazyRoute: typeof ComsComIdTypeRouteLazyRouteWithChildren
  ComsComIdViewRouteLazyRoute: typeof ComsComIdViewRouteLazyRouteWithChildren
  ComsComIdVisualizationRouteLazyRoute: typeof ComsComIdVisualizationRouteLazyRoute
  ComsComIdEditModelRouteLazyRoute: typeof ComsComIdEditModelRouteLazyRouteWithChildren
}

const ComsComIdRouteLazyRouteChildren: ComsComIdRouteLazyRouteChildren = {
  ComsComIdIndexLazyRoute: ComsComIdIndexLazyRoute,
  ComsComIdComponenteditorRouteLazyRoute:
    ComsComIdComponenteditorRouteLazyRouteWithChildren,
  ComsComIdRunRouteLazyRoute: ComsComIdRunRouteLazyRouteWithChildren,
  ComsComIdTeambuilderRouteLazyRoute:
    ComsComIdTeambuilderRouteLazyRouteWithChildren,
  ComsComIdTeambuilderv2RouteLazyRoute:
    ComsComIdTeambuilderv2RouteLazyRouteWithChildren,
  ComsComIdTypeRouteLazyRoute: ComsComIdTypeRouteLazyRouteWithChildren,
  ComsComIdViewRouteLazyRoute: ComsComIdViewRouteLazyRouteWithChildren,
  ComsComIdVisualizationRouteLazyRoute: ComsComIdVisualizationRouteLazyRoute,
  ComsComIdEditModelRouteLazyRoute:
    ComsComIdEditModelRouteLazyRouteWithChildren,
}

const ComsComIdRouteLazyRouteWithChildren =
  ComsComIdRouteLazyRoute._addFileChildren(ComsComIdRouteLazyRouteChildren)

interface ComsRouteLazyRouteChildren {
  ComsIndexLazyRoute: typeof ComsIndexLazyRoute
  ComsComIdRouteLazyRoute: typeof ComsComIdRouteLazyRouteWithChildren
}

const ComsRouteLazyRouteChildren: ComsRouteLazyRouteChildren = {
  ComsIndexLazyRoute: ComsIndexLazyRoute,
  ComsComIdRouteLazyRoute: ComsComIdRouteLazyRouteWithChildren,
}

const ComsRouteLazyRouteWithChildren = ComsRouteLazyRoute._addFileChildren(
  ComsRouteLazyRouteChildren,
)

interface EndpointRouteLazyRouteChildren {
  EndpointIndexLazyRoute: typeof EndpointIndexLazyRoute
}

const EndpointRouteLazyRouteChildren: EndpointRouteLazyRouteChildren = {
  EndpointIndexLazyRoute: EndpointIndexLazyRoute,
}

const EndpointRouteLazyRouteWithChildren =
  EndpointRouteLazyRoute._addFileChildren(EndpointRouteLazyRouteChildren)

interface EnvsRouteLazyRouteChildren {
  EnvsCreateRoute: typeof EnvsCreateRoute
  EnvsIndexLazyRoute: typeof EnvsIndexLazyRoute
}

const EnvsRouteLazyRouteChildren: EnvsRouteLazyRouteChildren = {
  EnvsCreateRoute: EnvsCreateRoute,
  EnvsIndexLazyRoute: EnvsIndexLazyRoute,
}

const EnvsRouteLazyRouteWithChildren = EnvsRouteLazyRoute._addFileChildren(
  EnvsRouteLazyRouteChildren,
)

interface EventsRouteLazyRouteChildren {
  EventsIndexLazyRoute: typeof EventsIndexLazyRoute
}

const EventsRouteLazyRouteChildren: EventsRouteLazyRouteChildren = {
  EventsIndexLazyRoute: EventsIndexLazyRoute,
}

const EventsRouteLazyRouteWithChildren = EventsRouteLazyRoute._addFileChildren(
  EventsRouteLazyRouteChildren,
)

interface ModelModelIdRouteLazyRouteChildren {
  ModelModelIdIndexLazyRoute: typeof ModelModelIdIndexLazyRoute
}

const ModelModelIdRouteLazyRouteChildren: ModelModelIdRouteLazyRouteChildren = {
  ModelModelIdIndexLazyRoute: ModelModelIdIndexLazyRoute,
}

const ModelModelIdRouteLazyRouteWithChildren =
  ModelModelIdRouteLazyRoute._addFileChildren(
    ModelModelIdRouteLazyRouteChildren,
  )

interface ModelNewRouteLazyRouteChildren {
  ModelNewIndexLazyRoute: typeof ModelNewIndexLazyRoute
}

const ModelNewRouteLazyRouteChildren: ModelNewRouteLazyRouteChildren = {
  ModelNewIndexLazyRoute: ModelNewIndexLazyRoute,
}

const ModelNewRouteLazyRouteWithChildren =
  ModelNewRouteLazyRoute._addFileChildren(ModelNewRouteLazyRouteChildren)

interface ModelRouteLazyRouteChildren {
  ModelIndexLazyRoute: typeof ModelIndexLazyRoute
  ModelModelIdRouteLazyRoute: typeof ModelModelIdRouteLazyRouteWithChildren
  ModelNewRouteLazyRoute: typeof ModelNewRouteLazyRouteWithChildren
}

const ModelRouteLazyRouteChildren: ModelRouteLazyRouteChildren = {
  ModelIndexLazyRoute: ModelIndexLazyRoute,
  ModelModelIdRouteLazyRoute: ModelModelIdRouteLazyRouteWithChildren,
  ModelNewRouteLazyRoute: ModelNewRouteLazyRouteWithChildren,
}

const ModelRouteLazyRouteWithChildren = ModelRouteLazyRoute._addFileChildren(
  ModelRouteLazyRouteChildren,
)

interface PlatformRouteLazyRouteChildren {
  PlatformIndexRoute: typeof PlatformIndexRoute
}

const PlatformRouteLazyRouteChildren: PlatformRouteLazyRouteChildren = {
  PlatformIndexRoute: PlatformIndexRoute,
}

const PlatformRouteLazyRouteWithChildren =
  PlatformRouteLazyRoute._addFileChildren(PlatformRouteLazyRouteChildren)

interface PlatformAccountPlatformAccountIdActionsRouteLazyRouteChildren {
  PlatformAccountPlatformAccountIdActionsIndexLazyRoute: typeof PlatformAccountPlatformAccountIdActionsIndexLazyRoute
}

const PlatformAccountPlatformAccountIdActionsRouteLazyRouteChildren: PlatformAccountPlatformAccountIdActionsRouteLazyRouteChildren =
  {
    PlatformAccountPlatformAccountIdActionsIndexLazyRoute:
      PlatformAccountPlatformAccountIdActionsIndexLazyRoute,
  }

const PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren =
  PlatformAccountPlatformAccountIdActionsRouteLazyRoute._addFileChildren(
    PlatformAccountPlatformAccountIdActionsRouteLazyRouteChildren,
  )

interface PlatformAccountPlatformAccountIdRouteLazyRouteChildren {
  PlatformAccountPlatformAccountIdIndexLazyRoute: typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  PlatformAccountPlatformAccountIdActionsRouteLazyRoute: typeof PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren
}

const PlatformAccountPlatformAccountIdRouteLazyRouteChildren: PlatformAccountPlatformAccountIdRouteLazyRouteChildren =
  {
    PlatformAccountPlatformAccountIdIndexLazyRoute:
      PlatformAccountPlatformAccountIdIndexLazyRoute,
    PlatformAccountPlatformAccountIdActionsRouteLazyRoute:
      PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren,
  }

const PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren =
  PlatformAccountPlatformAccountIdRouteLazyRoute._addFileChildren(
    PlatformAccountPlatformAccountIdRouteLazyRouteChildren,
  )

interface PlatformAccountNewRouteLazyRouteChildren {
  PlatformAccountNewIndexLazyRoute: typeof PlatformAccountNewIndexLazyRoute
}

const PlatformAccountNewRouteLazyRouteChildren: PlatformAccountNewRouteLazyRouteChildren =
  {
    PlatformAccountNewIndexLazyRoute: PlatformAccountNewIndexLazyRoute,
  }

const PlatformAccountNewRouteLazyRouteWithChildren =
  PlatformAccountNewRouteLazyRoute._addFileChildren(
    PlatformAccountNewRouteLazyRouteChildren,
  )

interface PlatformAccountRouteLazyRouteChildren {
  PlatformAccountIndexLazyRoute: typeof PlatformAccountIndexLazyRoute
  PlatformAccountPlatformAccountIdRouteLazyRoute: typeof PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren
  PlatformAccountNewRouteLazyRoute: typeof PlatformAccountNewRouteLazyRouteWithChildren
}

const PlatformAccountRouteLazyRouteChildren: PlatformAccountRouteLazyRouteChildren =
  {
    PlatformAccountIndexLazyRoute: PlatformAccountIndexLazyRoute,
    PlatformAccountPlatformAccountIdRouteLazyRoute:
      PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren,
    PlatformAccountNewRouteLazyRoute:
      PlatformAccountNewRouteLazyRouteWithChildren,
  }

const PlatformAccountRouteLazyRouteWithChildren =
  PlatformAccountRouteLazyRoute._addFileChildren(
    PlatformAccountRouteLazyRouteChildren,
  )

interface PostRouteLazyRouteChildren {
  PostIndexLazyRoute: typeof PostIndexLazyRoute
  PostCreateLazyRoute: typeof PostCreateLazyRoute
}

const PostRouteLazyRouteChildren: PostRouteLazyRouteChildren = {
  PostIndexLazyRoute: PostIndexLazyRoute,
  PostCreateLazyRoute: PostCreateLazyRoute,
}

const PostRouteLazyRouteWithChildren = PostRouteLazyRoute._addFileChildren(
  PostRouteLazyRouteChildren,
)

interface ProxyProxyIdActionsRouteLazyRouteChildren {
  ProxyProxyIdActionsIndexLazyRoute: typeof ProxyProxyIdActionsIndexLazyRoute
}

const ProxyProxyIdActionsRouteLazyRouteChildren: ProxyProxyIdActionsRouteLazyRouteChildren =
  {
    ProxyProxyIdActionsIndexLazyRoute: ProxyProxyIdActionsIndexLazyRoute,
  }

const ProxyProxyIdActionsRouteLazyRouteWithChildren =
  ProxyProxyIdActionsRouteLazyRoute._addFileChildren(
    ProxyProxyIdActionsRouteLazyRouteChildren,
  )

interface ProxyProxyIdRouteLazyRouteChildren {
  ProxyProxyIdIndexLazyRoute: typeof ProxyProxyIdIndexLazyRoute
  ProxyProxyIdActionsRouteLazyRoute: typeof ProxyProxyIdActionsRouteLazyRouteWithChildren
}

const ProxyProxyIdRouteLazyRouteChildren: ProxyProxyIdRouteLazyRouteChildren = {
  ProxyProxyIdIndexLazyRoute: ProxyProxyIdIndexLazyRoute,
  ProxyProxyIdActionsRouteLazyRoute:
    ProxyProxyIdActionsRouteLazyRouteWithChildren,
}

const ProxyProxyIdRouteLazyRouteWithChildren =
  ProxyProxyIdRouteLazyRoute._addFileChildren(
    ProxyProxyIdRouteLazyRouteChildren,
  )

interface ProxyRouteLazyRouteChildren {
  ProxyIndexLazyRoute: typeof ProxyIndexLazyRoute
  ProxyProxyIdRouteLazyRoute: typeof ProxyProxyIdRouteLazyRouteWithChildren
  ProxyNewRouteLazyRoute: typeof ProxyNewRouteLazyRoute
}

const ProxyRouteLazyRouteChildren: ProxyRouteLazyRouteChildren = {
  ProxyIndexLazyRoute: ProxyIndexLazyRoute,
  ProxyProxyIdRouteLazyRoute: ProxyProxyIdRouteLazyRouteWithChildren,
  ProxyNewRouteLazyRoute: ProxyNewRouteLazyRoute,
}

const ProxyRouteLazyRouteWithChildren = ProxyRouteLazyRoute._addFileChildren(
  ProxyRouteLazyRouteChildren,
)

interface RecurringRouteLazyRouteChildren {
  RecurringIndexLazyRoute: typeof RecurringIndexLazyRoute
}

const RecurringRouteLazyRouteChildren: RecurringRouteLazyRouteChildren = {
  RecurringIndexLazyRoute: RecurringIndexLazyRoute,
}

const RecurringRouteLazyRouteWithChildren =
  RecurringRouteLazyRoute._addFileChildren(RecurringRouteLazyRouteChildren)

interface ResourceResIdPlatformaccountRouteLazyRouteChildren {
  ResourceResIdPlatformaccountIndexLazyRoute: typeof ResourceResIdPlatformaccountIndexLazyRoute
}

const ResourceResIdPlatformaccountRouteLazyRouteChildren: ResourceResIdPlatformaccountRouteLazyRouteChildren =
  {
    ResourceResIdPlatformaccountIndexLazyRoute:
      ResourceResIdPlatformaccountIndexLazyRoute,
  }

const ResourceResIdPlatformaccountRouteLazyRouteWithChildren =
  ResourceResIdPlatformaccountRouteLazyRoute._addFileChildren(
    ResourceResIdPlatformaccountRouteLazyRouteChildren,
  )

interface ResourceResIdRouteLazyRouteChildren {
  ResourceResIdIndexLazyRoute: typeof ResourceResIdIndexLazyRoute
  ResourceResIdPlatformaccountRouteLazyRoute: typeof ResourceResIdPlatformaccountRouteLazyRouteWithChildren
}

const ResourceResIdRouteLazyRouteChildren: ResourceResIdRouteLazyRouteChildren =
  {
    ResourceResIdIndexLazyRoute: ResourceResIdIndexLazyRoute,
    ResourceResIdPlatformaccountRouteLazyRoute:
      ResourceResIdPlatformaccountRouteLazyRouteWithChildren,
  }

const ResourceResIdRouteLazyRouteWithChildren =
  ResourceResIdRouteLazyRoute._addFileChildren(
    ResourceResIdRouteLazyRouteChildren,
  )

interface ResourceNewResRouteLazyRouteChildren {
  ResourceNewResIndexLazyRoute: typeof ResourceNewResIndexLazyRoute
  ResourceNewResBrowserLazyRoute: typeof ResourceNewResBrowserLazyRoute
  ResourceNewResChatLazyRoute: typeof ResourceNewResChatLazyRoute
  ResourceNewResPlatformaccountLazyRoute: typeof ResourceNewResPlatformaccountLazyRoute
}

const ResourceNewResRouteLazyRouteChildren: ResourceNewResRouteLazyRouteChildren =
  {
    ResourceNewResIndexLazyRoute: ResourceNewResIndexLazyRoute,
    ResourceNewResBrowserLazyRoute: ResourceNewResBrowserLazyRoute,
    ResourceNewResChatLazyRoute: ResourceNewResChatLazyRoute,
    ResourceNewResPlatformaccountLazyRoute:
      ResourceNewResPlatformaccountLazyRoute,
  }

const ResourceNewResRouteLazyRouteWithChildren =
  ResourceNewResRouteLazyRoute._addFileChildren(
    ResourceNewResRouteLazyRouteChildren,
  )

interface ResourceNewRouteLazyRouteChildren {
  ResourceNewResRouteLazyRoute: typeof ResourceNewResRouteLazyRouteWithChildren
}

const ResourceNewRouteLazyRouteChildren: ResourceNewRouteLazyRouteChildren = {
  ResourceNewResRouteLazyRoute: ResourceNewResRouteLazyRouteWithChildren,
}

const ResourceNewRouteLazyRouteWithChildren =
  ResourceNewRouteLazyRoute._addFileChildren(ResourceNewRouteLazyRouteChildren)

interface ResourceRouteLazyRouteChildren {
  ResourceIndexLazyRoute: typeof ResourceIndexLazyRoute
  ResourceResIdRouteLazyRoute: typeof ResourceResIdRouteLazyRouteWithChildren
  ResourceNewRouteLazyRoute: typeof ResourceNewRouteLazyRouteWithChildren
}

const ResourceRouteLazyRouteChildren: ResourceRouteLazyRouteChildren = {
  ResourceIndexLazyRoute: ResourceIndexLazyRoute,
  ResourceResIdRouteLazyRoute: ResourceResIdRouteLazyRouteWithChildren,
  ResourceNewRouteLazyRoute: ResourceNewRouteLazyRouteWithChildren,
}

const ResourceRouteLazyRouteWithChildren =
  ResourceRouteLazyRoute._addFileChildren(ResourceRouteLazyRouteChildren)

interface ScheduledRunsRouteLazyRouteChildren {
  ScheduledRunsIndexLazyRoute: typeof ScheduledRunsIndexLazyRoute
}

const ScheduledRunsRouteLazyRouteChildren: ScheduledRunsRouteLazyRouteChildren =
  {
    ScheduledRunsIndexLazyRoute: ScheduledRunsIndexLazyRoute,
  }

const ScheduledRunsRouteLazyRouteWithChildren =
  ScheduledRunsRouteLazyRoute._addFileChildren(
    ScheduledRunsRouteLazyRouteChildren,
  )

interface SessionSessionIdActionsRouteLazyRouteChildren {
  SessionSessionIdActionsIndexLazyRoute: typeof SessionSessionIdActionsIndexLazyRoute
}

const SessionSessionIdActionsRouteLazyRouteChildren: SessionSessionIdActionsRouteLazyRouteChildren =
  {
    SessionSessionIdActionsIndexLazyRoute:
      SessionSessionIdActionsIndexLazyRoute,
  }

const SessionSessionIdActionsRouteLazyRouteWithChildren =
  SessionSessionIdActionsRouteLazyRoute._addFileChildren(
    SessionSessionIdActionsRouteLazyRouteChildren,
  )

interface SessionSessionIdConfigRouteLazyRouteChildren {
  SessionSessionIdConfigIndexLazyRoute: typeof SessionSessionIdConfigIndexLazyRoute
}

const SessionSessionIdConfigRouteLazyRouteChildren: SessionSessionIdConfigRouteLazyRouteChildren =
  {
    SessionSessionIdConfigIndexLazyRoute: SessionSessionIdConfigIndexLazyRoute,
  }

const SessionSessionIdConfigRouteLazyRouteWithChildren =
  SessionSessionIdConfigRouteLazyRoute._addFileChildren(
    SessionSessionIdConfigRouteLazyRouteChildren,
  )

interface SessionSessionIdTeamstateRouteLazyRouteChildren {
  SessionSessionIdTeamstateIndexLazyRoute: typeof SessionSessionIdTeamstateIndexLazyRoute
}

const SessionSessionIdTeamstateRouteLazyRouteChildren: SessionSessionIdTeamstateRouteLazyRouteChildren =
  {
    SessionSessionIdTeamstateIndexLazyRoute:
      SessionSessionIdTeamstateIndexLazyRoute,
  }

const SessionSessionIdTeamstateRouteLazyRouteWithChildren =
  SessionSessionIdTeamstateRouteLazyRoute._addFileChildren(
    SessionSessionIdTeamstateRouteLazyRouteChildren,
  )

interface SessionSessionIdRouteLazyRouteChildren {
  SessionSessionIdIndexLazyRoute: typeof SessionSessionIdIndexLazyRoute
  SessionSessionIdActionsRouteLazyRoute: typeof SessionSessionIdActionsRouteLazyRouteWithChildren
  SessionSessionIdConfigRouteLazyRoute: typeof SessionSessionIdConfigRouteLazyRouteWithChildren
  SessionSessionIdTeamstateRouteLazyRoute: typeof SessionSessionIdTeamstateRouteLazyRouteWithChildren
}

const SessionSessionIdRouteLazyRouteChildren: SessionSessionIdRouteLazyRouteChildren =
  {
    SessionSessionIdIndexLazyRoute: SessionSessionIdIndexLazyRoute,
    SessionSessionIdActionsRouteLazyRoute:
      SessionSessionIdActionsRouteLazyRouteWithChildren,
    SessionSessionIdConfigRouteLazyRoute:
      SessionSessionIdConfigRouteLazyRouteWithChildren,
    SessionSessionIdTeamstateRouteLazyRoute:
      SessionSessionIdTeamstateRouteLazyRouteWithChildren,
  }

const SessionSessionIdRouteLazyRouteWithChildren =
  SessionSessionIdRouteLazyRoute._addFileChildren(
    SessionSessionIdRouteLazyRouteChildren,
  )

interface SessionRouteLazyRouteChildren {
  SessionIndexLazyRoute: typeof SessionIndexLazyRoute
  SessionSessionIdRouteLazyRoute: typeof SessionSessionIdRouteLazyRouteWithChildren
}

const SessionRouteLazyRouteChildren: SessionRouteLazyRouteChildren = {
  SessionIndexLazyRoute: SessionIndexLazyRoute,
  SessionSessionIdRouteLazyRoute: SessionSessionIdRouteLazyRouteWithChildren,
}

const SessionRouteLazyRouteWithChildren =
  SessionRouteLazyRoute._addFileChildren(SessionRouteLazyRouteChildren)

interface SiteSiteIdHostRouteRouteChildren {
  SiteSiteIdHostIndexRoute: typeof SiteSiteIdHostIndexRoute
}

const SiteSiteIdHostRouteRouteChildren: SiteSiteIdHostRouteRouteChildren = {
  SiteSiteIdHostIndexRoute: SiteSiteIdHostIndexRoute,
}

const SiteSiteIdHostRouteRouteWithChildren =
  SiteSiteIdHostRouteRoute._addFileChildren(SiteSiteIdHostRouteRouteChildren)

interface SiteSiteIdRouteRouteChildren {
  SiteSiteIdIndexRoute: typeof SiteSiteIdIndexRoute
  SiteSiteIdEditRoute: typeof SiteSiteIdEditRoute
  SiteSiteIdHostRouteRoute: typeof SiteSiteIdHostRouteRouteWithChildren
}

const SiteSiteIdRouteRouteChildren: SiteSiteIdRouteRouteChildren = {
  SiteSiteIdIndexRoute: SiteSiteIdIndexRoute,
  SiteSiteIdEditRoute: SiteSiteIdEditRoute,
  SiteSiteIdHostRouteRoute: SiteSiteIdHostRouteRouteWithChildren,
}

const SiteSiteIdRouteRouteWithChildren = SiteSiteIdRouteRoute._addFileChildren(
  SiteSiteIdRouteRouteChildren,
)

interface SiteRouteLazyRouteChildren {
  SiteIndexRoute: typeof SiteIndexRoute
  SiteSiteIdRouteRoute: typeof SiteSiteIdRouteRouteWithChildren
  SiteCreateIndexRoute: typeof SiteCreateIndexRoute
}

const SiteRouteLazyRouteChildren: SiteRouteLazyRouteChildren = {
  SiteIndexRoute: SiteIndexRoute,
  SiteSiteIdRouteRoute: SiteSiteIdRouteRouteWithChildren,
  SiteCreateIndexRoute: SiteCreateIndexRoute,
}

const SiteRouteLazyRouteWithChildren = SiteRouteLazyRoute._addFileChildren(
  SiteRouteLazyRouteChildren,
)

interface TeamTeamIdRouteLazyRouteChildren {
  TeamTeamIdNewIndexLazyRoute: typeof TeamTeamIdNewIndexLazyRoute
}

const TeamTeamIdRouteLazyRouteChildren: TeamTeamIdRouteLazyRouteChildren = {
  TeamTeamIdNewIndexLazyRoute: TeamTeamIdNewIndexLazyRoute,
}

const TeamTeamIdRouteLazyRouteWithChildren =
  TeamTeamIdRouteLazyRoute._addFileChildren(TeamTeamIdRouteLazyRouteChildren)

interface TeamRouteLazyRouteChildren {
  TeamIndexLazyRoute: typeof TeamIndexLazyRoute
  TeamTeamIdRouteLazyRoute: typeof TeamTeamIdRouteLazyRouteWithChildren
}

const TeamRouteLazyRouteChildren: TeamRouteLazyRouteChildren = {
  TeamIndexLazyRoute: TeamIndexLazyRoute,
  TeamTeamIdRouteLazyRoute: TeamTeamIdRouteLazyRouteWithChildren,
}

const TeamRouteLazyRouteWithChildren = TeamRouteLazyRoute._addFileChildren(
  TeamRouteLazyRouteChildren,
)

interface TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteChildren {
  TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute: typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute
}

const TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteChildren: TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteChildren =
  {
    TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute:
      TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute,
  }

const TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren =
  TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute._addFileChildren(
    TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteChildren,
  )

interface TenantSettingsTenantSettingIdRouteLazyRouteChildren {
  TenantSettingsTenantSettingIdIndexLazyRoute: typeof TenantSettingsTenantSettingIdIndexLazyRoute
  TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute: typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren
}

const TenantSettingsTenantSettingIdRouteLazyRouteChildren: TenantSettingsTenantSettingIdRouteLazyRouteChildren =
  {
    TenantSettingsTenantSettingIdIndexLazyRoute:
      TenantSettingsTenantSettingIdIndexLazyRoute,
    TenantSettingsTenantSettingIdModelsettingsRouteLazyRoute:
      TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren,
  }

const TenantSettingsTenantSettingIdRouteLazyRouteWithChildren =
  TenantSettingsTenantSettingIdRouteLazyRoute._addFileChildren(
    TenantSettingsTenantSettingIdRouteLazyRouteChildren,
  )

interface TenantSettingsNewRouteLazyRouteChildren {
  TenantSettingsNewIndexLazyRoute: typeof TenantSettingsNewIndexLazyRoute
}

const TenantSettingsNewRouteLazyRouteChildren: TenantSettingsNewRouteLazyRouteChildren =
  {
    TenantSettingsNewIndexLazyRoute: TenantSettingsNewIndexLazyRoute,
  }

const TenantSettingsNewRouteLazyRouteWithChildren =
  TenantSettingsNewRouteLazyRoute._addFileChildren(
    TenantSettingsNewRouteLazyRouteChildren,
  )

interface TenantSettingsRouteLazyRouteChildren {
  TenantSettingsIndexLazyRoute: typeof TenantSettingsIndexLazyRoute
  TenantSettingsTenantSettingIdRouteLazyRoute: typeof TenantSettingsTenantSettingIdRouteLazyRouteWithChildren
  TenantSettingsNewRouteLazyRoute: typeof TenantSettingsNewRouteLazyRouteWithChildren
}

const TenantSettingsRouteLazyRouteChildren: TenantSettingsRouteLazyRouteChildren =
  {
    TenantSettingsIndexLazyRoute: TenantSettingsIndexLazyRoute,
    TenantSettingsTenantSettingIdRouteLazyRoute:
      TenantSettingsTenantSettingIdRouteLazyRouteWithChildren,
    TenantSettingsNewRouteLazyRoute:
      TenantSettingsNewRouteLazyRouteWithChildren,
  }

const TenantSettingsRouteLazyRouteWithChildren =
  TenantSettingsRouteLazyRoute._addFileChildren(
    TenantSettingsRouteLazyRouteChildren,
  )

interface TenantRouteLazyRouteChildren {
  TenantIndexLazyRoute: typeof TenantIndexLazyRoute
  TenantSettingsRouteLazyRoute: typeof TenantSettingsRouteLazyRouteWithChildren
}

const TenantRouteLazyRouteChildren: TenantRouteLazyRouteChildren = {
  TenantIndexLazyRoute: TenantIndexLazyRoute,
  TenantSettingsRouteLazyRoute: TenantSettingsRouteLazyRouteWithChildren,
}

const TenantRouteLazyRouteWithChildren = TenantRouteLazyRoute._addFileChildren(
  TenantRouteLazyRouteChildren,
)

interface WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdChatIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
}

const WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdChatIndexLazyRoute:
      WorkflowRunsWorkflowRunIdChatIndexLazyRoute,
  }

const WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdChatRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren,
  )

interface WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
}

const WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute:
      WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute,
  }

const WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren,
  )

interface WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
}

const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute:
      WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute,
  }

const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren,
  )

interface WorkflowRunsWorkflowRunIdRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute: typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  WorkflowRunsWorkflowRunIdChatRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren
  WorkflowRunsWorkflowRunIdInputLazyRoute: typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  WorkflowRunsWorkflowRunIdSummaryLazyRoute: typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren
  WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren
}

const WorkflowRunsWorkflowRunIdRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdIndexLazyRoute:
      WorkflowRunsWorkflowRunIdIndexLazyRoute,
    WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute:
      WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute,
    WorkflowRunsWorkflowRunIdChatRouteLazyRoute:
      WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren,
    WorkflowRunsWorkflowRunIdInputLazyRoute:
      WorkflowRunsWorkflowRunIdInputLazyRoute,
    WorkflowRunsWorkflowRunIdSummaryLazyRoute:
      WorkflowRunsWorkflowRunIdSummaryLazyRoute,
    WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute:
      WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren,
    WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute:
      WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren,
  }

const WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdRouteLazyRouteChildren,
  )

interface WorkflowRunsRouteLazyRouteChildren {
  WorkflowRunsIndexLazyRoute: typeof WorkflowRunsIndexLazyRoute
  WorkflowRunsWorkflowRunIdRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren
}

const WorkflowRunsRouteLazyRouteChildren: WorkflowRunsRouteLazyRouteChildren = {
  WorkflowRunsIndexLazyRoute: WorkflowRunsIndexLazyRoute,
  WorkflowRunsWorkflowRunIdRouteLazyRoute:
    WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren,
}

const WorkflowRunsRouteLazyRouteWithChildren =
  WorkflowRunsRouteLazyRoute._addFileChildren(
    WorkflowRunsRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerAgRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerAgIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerAgIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerAgRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerAgRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerAgIndexLazyRoute:
      WorkflowsWorkflowIdTriggerAgIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerAgRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerAgRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute:
      WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerComRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerComIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerComIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerComRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerComRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerComIndexLazyRoute:
      WorkflowsWorkflowIdTriggerComIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerComRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerComRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerModelRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerModelIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerModelIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerModelRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerModelRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerModelIndexLazyRoute:
      WorkflowsWorkflowIdTriggerModelIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerModelRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerModelRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerResearchRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerResearchIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerResearchIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerResearchRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerResearchRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerResearchIndexLazyRoute:
      WorkflowsWorkflowIdTriggerResearchIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerResearchRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerResearchRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute:
      WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerTeamRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerTeamIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerTeamIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerTeamRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerTeamRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerTeamIndexLazyRoute:
      WorkflowsWorkflowIdTriggerTeamIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerTeamRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerTeamRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerTenantRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerTenantIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerTenantIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerTenantRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerTenantRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerTenantIndexLazyRoute:
      WorkflowsWorkflowIdTriggerTenantIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerTenantRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerTenantRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute
}

const WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute:
      WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute,
  }

const WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdTriggerRouteLazyRouteChildren {
  WorkflowsWorkflowIdTriggerIndexLazyRoute: typeof WorkflowsWorkflowIdTriggerIndexLazyRoute
  WorkflowsWorkflowIdTriggerSplatLazyRoute: typeof WorkflowsWorkflowIdTriggerSplatLazyRoute
  WorkflowsWorkflowIdTriggerAgRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerComRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerModelRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerResearchRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerTeamRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerTenantRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren
  WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren
}

const WorkflowsWorkflowIdTriggerRouteLazyRouteChildren: WorkflowsWorkflowIdTriggerRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdTriggerIndexLazyRoute:
      WorkflowsWorkflowIdTriggerIndexLazyRoute,
    WorkflowsWorkflowIdTriggerSplatLazyRoute:
      WorkflowsWorkflowIdTriggerSplatLazyRoute,
    WorkflowsWorkflowIdTriggerAgRouteLazyRoute:
      WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerBrowserRouteLazyRoute:
      WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerComRouteLazyRoute:
      WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerModelRouteLazyRoute:
      WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerResearchRouteLazyRoute:
      WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerSmolaRouteLazyRoute:
      WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerTeamRouteLazyRoute:
      WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerTenantRouteLazyRoute:
      WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren,
    WorkflowsWorkflowIdTriggerTestteamRouteLazyRoute:
      WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren,
  }

const WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdTriggerRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdTriggerRouteLazyRouteChildren,
  )

interface WorkflowsWorkflowIdRouteLazyRouteChildren {
  WorkflowsWorkflowIdIndexLazyRoute: typeof WorkflowsWorkflowIdIndexLazyRoute
  WorkflowsWorkflowIdTriggerRouteLazyRoute: typeof WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren
}

const WorkflowsWorkflowIdRouteLazyRouteChildren: WorkflowsWorkflowIdRouteLazyRouteChildren =
  {
    WorkflowsWorkflowIdIndexLazyRoute: WorkflowsWorkflowIdIndexLazyRoute,
    WorkflowsWorkflowIdTriggerRouteLazyRoute:
      WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren,
  }

const WorkflowsWorkflowIdRouteLazyRouteWithChildren =
  WorkflowsWorkflowIdRouteLazyRoute._addFileChildren(
    WorkflowsWorkflowIdRouteLazyRouteChildren,
  )

interface WorkflowsRouteLazyRouteChildren {
  WorkflowsIndexLazyRoute: typeof WorkflowsIndexLazyRoute
  WorkflowsWorkflowIdRouteLazyRoute: typeof WorkflowsWorkflowIdRouteLazyRouteWithChildren
}

const WorkflowsRouteLazyRouteChildren: WorkflowsRouteLazyRouteChildren = {
  WorkflowsIndexLazyRoute: WorkflowsIndexLazyRoute,
  WorkflowsWorkflowIdRouteLazyRoute:
    WorkflowsWorkflowIdRouteLazyRouteWithChildren,
}

const WorkflowsRouteLazyRouteWithChildren =
  WorkflowsRouteLazyRoute._addFileChildren(WorkflowsRouteLazyRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteLazyRouteWithChildren
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/coms': typeof ComsRouteLazyRouteWithChildren
  '/endpoint': typeof EndpointRouteLazyRouteWithChildren
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/events': typeof EventsRouteLazyRouteWithChildren
  '/model': typeof ModelRouteLazyRouteWithChildren
  '/platform': typeof PlatformRouteLazyRouteWithChildren
  '/platform-account': typeof PlatformAccountRouteLazyRouteWithChildren
  '/post': typeof PostRouteLazyRouteWithChildren
  '/proxy': typeof ProxyRouteLazyRouteWithChildren
  '/recurring': typeof RecurringRouteLazyRouteWithChildren
  '/resource': typeof ResourceRouteLazyRouteWithChildren
  '/scheduled-runs': typeof ScheduledRunsRouteLazyRouteWithChildren
  '/session': typeof SessionRouteLazyRouteWithChildren
  '/site': typeof SiteRouteLazyRouteWithChildren
  '/team': typeof TeamRouteLazyRouteWithChildren
  '/tenant': typeof TenantRouteLazyRouteWithChildren
  '/workflow-runs': typeof WorkflowRunsRouteLazyRouteWithChildren
  '/workflows': typeof WorkflowsRouteLazyRouteWithChildren
  '/platform/': typeof PlatformIndexRoute
  '/site/': typeof SiteIndexRoute
  '/envs/create': typeof EnvsCreateRoute
  '/site/$siteId': typeof SiteSiteIdRouteRouteWithChildren
  '/admin/': typeof AdminIndexLazyRoute
  '/coms/': typeof ComsIndexLazyRoute
  '/endpoint/': typeof EndpointIndexLazyRoute
  '/envs/': typeof EnvsIndexLazyRoute
  '/events/': typeof EventsIndexLazyRoute
  '/model/': typeof ModelIndexLazyRoute
  '/platform-account/': typeof PlatformAccountIndexLazyRoute
  '/post/': typeof PostIndexLazyRoute
  '/proxy/': typeof ProxyIndexLazyRoute
  '/recurring/': typeof RecurringIndexLazyRoute
  '/resource/': typeof ResourceIndexLazyRoute
  '/scheduled-runs/': typeof ScheduledRunsIndexLazyRoute
  '/session/': typeof SessionIndexLazyRoute
  '/team/': typeof TeamIndexLazyRoute
  '/tenant/': typeof TenantIndexLazyRoute
  '/workflow-runs/': typeof WorkflowRunsIndexLazyRoute
  '/workflows/': typeof WorkflowsIndexLazyRoute
  '/auth/login': typeof AuthLoginRouteLazyRouteWithChildren
  '/auth/register': typeof AuthRegisterLazyRoute
  '/coms/$comId': typeof ComsComIdRouteLazyRouteWithChildren
  '/model/$modelId': typeof ModelModelIdRouteLazyRouteWithChildren
  '/model/new': typeof ModelNewRouteLazyRouteWithChildren
  '/platform-account/$platformAccountId': typeof PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren
  '/platform-account/new': typeof PlatformAccountNewRouteLazyRouteWithChildren
  '/post/create': typeof PostCreateLazyRoute
  '/proxy/$proxyId': typeof ProxyProxyIdRouteLazyRouteWithChildren
  '/proxy/new': typeof ProxyNewRouteLazyRoute
  '/resource/$resId': typeof ResourceResIdRouteLazyRouteWithChildren
  '/resource/new': typeof ResourceNewRouteLazyRouteWithChildren
  '/session/$sessionId': typeof SessionSessionIdRouteLazyRouteWithChildren
  '/team/$teamId': typeof TeamTeamIdRouteLazyRouteWithChildren
  '/tenant/settings': typeof TenantSettingsRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdRouteLazyRouteWithChildren
  '/onboarding/create-tenant': typeof OnboardingCreateTenantIndexRoute
  '/site/$siteId/': typeof SiteSiteIdIndexRoute
  '/site/create': typeof SiteCreateIndexRoute
  '/site/$siteId/edit': typeof SiteSiteIdEditRoute
  '/site/$siteId/host': typeof SiteSiteIdHostRouteRouteWithChildren
  '/auth/login/': typeof AuthLoginIndexLazyRoute
  '/coms/$comId/': typeof ComsComIdIndexLazyRoute
  '/model/$modelId/': typeof ModelModelIdIndexLazyRoute
  '/model/new/': typeof ModelNewIndexLazyRoute
  '/platform-account/$platformAccountId/': typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  '/platform-account/new/': typeof PlatformAccountNewIndexLazyRoute
  '/proxy/$proxyId/': typeof ProxyProxyIdIndexLazyRoute
  '/resource/$resId/': typeof ResourceResIdIndexLazyRoute
  '/session/$sessionId/': typeof SessionSessionIdIndexLazyRoute
  '/tenant/settings/': typeof TenantSettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/': typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  '/workflows/$workflowId/': typeof WorkflowsWorkflowIdIndexLazyRoute
  '/coms/$comId/component_editor': typeof ComsComIdComponenteditorRouteLazyRouteWithChildren
  '/coms/$comId/run': typeof ComsComIdRunRouteLazyRouteWithChildren
  '/coms/$comId/team_builder': typeof ComsComIdTeambuilderRouteLazyRouteWithChildren
  '/coms/$comId/team_builderv2': typeof ComsComIdTeambuilderv2RouteLazyRouteWithChildren
  '/coms/$comId/type': typeof ComsComIdTypeRouteLazyRouteWithChildren
  '/coms/$comId/view': typeof ComsComIdViewRouteLazyRouteWithChildren
  '/coms/$comId/visualization': typeof ComsComIdVisualizationRouteLazyRoute
  '/platform-account/$platformAccountId/actions': typeof PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren
  '/proxy/$proxyId/actions': typeof ProxyProxyIdActionsRouteLazyRouteWithChildren
  '/resource/$resId/platform_account': typeof ResourceResIdPlatformaccountRouteLazyRouteWithChildren
  '/resource/new/res': typeof ResourceNewResRouteLazyRouteWithChildren
  '/session/$sessionId/actions': typeof SessionSessionIdActionsRouteLazyRouteWithChildren
  '/session/$sessionId/config': typeof SessionSessionIdConfigRouteLazyRouteWithChildren
  '/session/$sessionId/team_state': typeof SessionSessionIdTeamstateRouteLazyRouteWithChildren
  '/tenant/settings/$tenantSettingId': typeof TenantSettingsTenantSettingIdRouteLazyRouteWithChildren
  '/tenant/settings/new': typeof TenantSettingsNewRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/additional-metadata': typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  '/workflow-runs/$workflowRunId/chat': typeof WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/input': typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  '/workflow-runs/$workflowRunId/summary': typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  '/workflow-runs/$workflowRunId/visualization': typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger': typeof WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren
  '/coms/$comId/component_editor/': typeof ComsComIdComponenteditorIndexRoute
  '/site/$siteId/host/': typeof SiteSiteIdHostIndexRoute
  '/coms/$comId/component_editor/$': typeof ComsComIdComponenteditorSplatRoute
  '/coms/$comId/component_editor/AssistantAgent': typeof ComsComIdComponenteditorAssistantAgentRoute
  '/coms/$comId/component_editor/InstagramAgent': typeof ComsComIdComponenteditorInstagramAgentRoute
  '/coms/$comId/component_editor/MtOpenAIChatCompletionClient': typeof ComsComIdComponenteditorMtOpenAIChatCompletionClientRoute
  '/coms/$comId/component_editor/SmolaAgent': typeof ComsComIdComponenteditorSmolaAgentRoute
  '/coms/$comId/type/modelClient': typeof ComsComIdTypeModelClientRoute
  '/coms/$comId/run/': typeof ComsComIdRunIndexLazyRoute
  '/coms/$comId/team_builder/': typeof ComsComIdTeambuilderIndexLazyRoute
  '/coms/$comId/team_builderv2/': typeof ComsComIdTeambuilderv2IndexLazyRoute
  '/platform-account/$platformAccountId/actions/': typeof PlatformAccountPlatformAccountIdActionsIndexLazyRoute
  '/proxy/$proxyId/actions/': typeof ProxyProxyIdActionsIndexLazyRoute
  '/resource/$resId/platform_account/': typeof ResourceResIdPlatformaccountIndexLazyRoute
  '/resource/new/res/': typeof ResourceNewResIndexLazyRoute
  '/session/$sessionId/actions/': typeof SessionSessionIdActionsIndexLazyRoute
  '/session/$sessionId/config/': typeof SessionSessionIdConfigIndexLazyRoute
  '/session/$sessionId/team_state/': typeof SessionSessionIdTeamstateIndexLazyRoute
  '/team/$teamId/new': typeof TeamTeamIdNewIndexLazyRoute
  '/tenant/settings/$tenantSettingId/': typeof TenantSettingsTenantSettingIdIndexLazyRoute
  '/tenant/settings/new/': typeof TenantSettingsNewIndexLazyRoute
  '/workflow-runs/$workflowRunId/chat/': typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
  '/workflow-runs/$workflowRunId/visualization/': typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
  '/workflows/$workflowId/trigger/': typeof WorkflowsWorkflowIdTriggerIndexLazyRoute
  '/coms/$comId/component_editor/InstagramTeam': typeof ComsComIdComponenteditorInstagramTeamLazyRoute
  '/coms/$comId/edit/model': typeof ComsComIdEditModelRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/component': typeof ComsComIdTeambuilderComponentRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/jsonview': typeof ComsComIdTeambuilderJsonviewRouteLazyRouteWithChildren
  '/coms/$comId/team_builderv2/instagram_team': typeof ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren
  '/coms/$comId/type/assisant': typeof ComsComIdTypeAssisantLazyRoute
  '/coms/$comId/type/instagramTeam': typeof ComsComIdTypeInstagramTeamLazyRoute
  '/coms/$comId/view/$subComId': typeof ComsComIdViewSubComIdRouteLazyRouteWithChildren
  '/resource/new/res/browser': typeof ResourceNewResBrowserLazyRoute
  '/resource/new/res/chat': typeof ResourceNewResChatLazyRoute
  '/resource/new/res/platform_account': typeof ResourceNewResPlatformaccountLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings': typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/$': typeof WorkflowsWorkflowIdTriggerSplatLazyRoute
  '/workflows/$workflowId/trigger/ag': typeof WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/browser': typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/com': typeof WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/model': typeof WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/research': typeof WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/smola': typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/team': typeof WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/tenant': typeof WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/test_team': typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren
  '/coms/$comId/edit/model/': typeof ComsComIdEditModelIndexLazyRoute
  '/coms/$comId/team_builder/jsonview/': typeof ComsComIdTeambuilderJsonviewIndexLazyRoute
  '/coms/$comId/team_builderv2/instagram_team/': typeof ComsComIdTeambuilderv2InstagramteamIndexLazyRoute
  '/coms/$comId/view/$subComId/': typeof ComsComIdViewSubComIdIndexLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings/': typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId/': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
  '/workflows/$workflowId/trigger/ag/': typeof WorkflowsWorkflowIdTriggerAgIndexLazyRoute
  '/workflows/$workflowId/trigger/browser/': typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute
  '/workflows/$workflowId/trigger/com/': typeof WorkflowsWorkflowIdTriggerComIndexLazyRoute
  '/workflows/$workflowId/trigger/model/': typeof WorkflowsWorkflowIdTriggerModelIndexLazyRoute
  '/workflows/$workflowId/trigger/research/': typeof WorkflowsWorkflowIdTriggerResearchIndexLazyRoute
  '/workflows/$workflowId/trigger/smola/': typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute
  '/workflows/$workflowId/trigger/team/': typeof WorkflowsWorkflowIdTriggerTeamIndexLazyRoute
  '/workflows/$workflowId/trigger/tenant/': typeof WorkflowsWorkflowIdTriggerTenantIndexLazyRoute
  '/workflows/$workflowId/trigger/test_team/': typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId': typeof ComsComIdTeambuilderAgentAgentIdRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/agent/new': typeof ComsComIdTeambuilderAgentNewRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/component/$nodeId': typeof ComsComIdTeambuilderComponentNodeIdLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/': typeof ComsComIdTeambuilderAgentAgentIdIndexLazyRoute
  '/coms/$comId/team_builder/agent/new/': typeof ComsComIdTeambuilderAgentNewIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/agent': typeof ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/agent/$agentId/model': typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/agent/$agentId/agent/': typeof ComsComIdTeambuilderAgentAgentIdAgentIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/model/': typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/platform': typeof PlatformIndexRoute
  '/site': typeof SiteIndexRoute
  '/envs/create': typeof EnvsCreateRoute
  '/admin': typeof AdminIndexLazyRoute
  '/coms': typeof ComsIndexLazyRoute
  '/endpoint': typeof EndpointIndexLazyRoute
  '/envs': typeof EnvsIndexLazyRoute
  '/events': typeof EventsIndexLazyRoute
  '/model': typeof ModelIndexLazyRoute
  '/platform-account': typeof PlatformAccountIndexLazyRoute
  '/post': typeof PostIndexLazyRoute
  '/proxy': typeof ProxyIndexLazyRoute
  '/recurring': typeof RecurringIndexLazyRoute
  '/resource': typeof ResourceIndexLazyRoute
  '/scheduled-runs': typeof ScheduledRunsIndexLazyRoute
  '/session': typeof SessionIndexLazyRoute
  '/team': typeof TeamIndexLazyRoute
  '/tenant': typeof TenantIndexLazyRoute
  '/workflow-runs': typeof WorkflowRunsIndexLazyRoute
  '/workflows': typeof WorkflowsIndexLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/post/create': typeof PostCreateLazyRoute
  '/proxy/new': typeof ProxyNewRouteLazyRoute
  '/resource/new': typeof ResourceNewRouteLazyRouteWithChildren
  '/team/$teamId': typeof TeamTeamIdRouteLazyRouteWithChildren
  '/onboarding/create-tenant': typeof OnboardingCreateTenantIndexRoute
  '/site/$siteId': typeof SiteSiteIdIndexRoute
  '/site/create': typeof SiteCreateIndexRoute
  '/site/$siteId/edit': typeof SiteSiteIdEditRoute
  '/auth/login': typeof AuthLoginIndexLazyRoute
  '/coms/$comId': typeof ComsComIdIndexLazyRoute
  '/model/$modelId': typeof ModelModelIdIndexLazyRoute
  '/model/new': typeof ModelNewIndexLazyRoute
  '/platform-account/$platformAccountId': typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  '/platform-account/new': typeof PlatformAccountNewIndexLazyRoute
  '/proxy/$proxyId': typeof ProxyProxyIdIndexLazyRoute
  '/resource/$resId': typeof ResourceResIdIndexLazyRoute
  '/session/$sessionId': typeof SessionSessionIdIndexLazyRoute
  '/tenant/settings': typeof TenantSettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdIndexLazyRoute
  '/coms/$comId/type': typeof ComsComIdTypeRouteLazyRouteWithChildren
  '/coms/$comId/view': typeof ComsComIdViewRouteLazyRouteWithChildren
  '/coms/$comId/visualization': typeof ComsComIdVisualizationRouteLazyRoute
  '/workflow-runs/$workflowRunId/additional-metadata': typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  '/workflow-runs/$workflowRunId/input': typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  '/workflow-runs/$workflowRunId/summary': typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  '/coms/$comId/component_editor': typeof ComsComIdComponenteditorIndexRoute
  '/site/$siteId/host': typeof SiteSiteIdHostIndexRoute
  '/coms/$comId/component_editor/$': typeof ComsComIdComponenteditorSplatRoute
  '/coms/$comId/component_editor/AssistantAgent': typeof ComsComIdComponenteditorAssistantAgentRoute
  '/coms/$comId/component_editor/InstagramAgent': typeof ComsComIdComponenteditorInstagramAgentRoute
  '/coms/$comId/component_editor/MtOpenAIChatCompletionClient': typeof ComsComIdComponenteditorMtOpenAIChatCompletionClientRoute
  '/coms/$comId/component_editor/SmolaAgent': typeof ComsComIdComponenteditorSmolaAgentRoute
  '/coms/$comId/type/modelClient': typeof ComsComIdTypeModelClientRoute
  '/coms/$comId/run': typeof ComsComIdRunIndexLazyRoute
  '/coms/$comId/team_builder': typeof ComsComIdTeambuilderIndexLazyRoute
  '/coms/$comId/team_builderv2': typeof ComsComIdTeambuilderv2IndexLazyRoute
  '/platform-account/$platformAccountId/actions': typeof PlatformAccountPlatformAccountIdActionsIndexLazyRoute
  '/proxy/$proxyId/actions': typeof ProxyProxyIdActionsIndexLazyRoute
  '/resource/$resId/platform_account': typeof ResourceResIdPlatformaccountIndexLazyRoute
  '/resource/new/res': typeof ResourceNewResIndexLazyRoute
  '/session/$sessionId/actions': typeof SessionSessionIdActionsIndexLazyRoute
  '/session/$sessionId/config': typeof SessionSessionIdConfigIndexLazyRoute
  '/session/$sessionId/team_state': typeof SessionSessionIdTeamstateIndexLazyRoute
  '/team/$teamId/new': typeof TeamTeamIdNewIndexLazyRoute
  '/tenant/settings/$tenantSettingId': typeof TenantSettingsTenantSettingIdIndexLazyRoute
  '/tenant/settings/new': typeof TenantSettingsNewIndexLazyRoute
  '/workflow-runs/$workflowRunId/chat': typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
  '/workflow-runs/$workflowRunId/visualization': typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
  '/workflows/$workflowId/trigger': typeof WorkflowsWorkflowIdTriggerIndexLazyRoute
  '/coms/$comId/component_editor/InstagramTeam': typeof ComsComIdComponenteditorInstagramTeamLazyRoute
  '/coms/$comId/team_builder/component': typeof ComsComIdTeambuilderComponentRouteLazyRouteWithChildren
  '/coms/$comId/type/assisant': typeof ComsComIdTypeAssisantLazyRoute
  '/coms/$comId/type/instagramTeam': typeof ComsComIdTypeInstagramTeamLazyRoute
  '/resource/new/res/browser': typeof ResourceNewResBrowserLazyRoute
  '/resource/new/res/chat': typeof ResourceNewResChatLazyRoute
  '/resource/new/res/platform_account': typeof ResourceNewResPlatformaccountLazyRoute
  '/workflows/$workflowId/trigger/$': typeof WorkflowsWorkflowIdTriggerSplatLazyRoute
  '/coms/$comId/edit/model': typeof ComsComIdEditModelIndexLazyRoute
  '/coms/$comId/team_builder/jsonview': typeof ComsComIdTeambuilderJsonviewIndexLazyRoute
  '/coms/$comId/team_builderv2/instagram_team': typeof ComsComIdTeambuilderv2InstagramteamIndexLazyRoute
  '/coms/$comId/view/$subComId': typeof ComsComIdViewSubComIdIndexLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings': typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
  '/workflows/$workflowId/trigger/ag': typeof WorkflowsWorkflowIdTriggerAgIndexLazyRoute
  '/workflows/$workflowId/trigger/browser': typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute
  '/workflows/$workflowId/trigger/com': typeof WorkflowsWorkflowIdTriggerComIndexLazyRoute
  '/workflows/$workflowId/trigger/model': typeof WorkflowsWorkflowIdTriggerModelIndexLazyRoute
  '/workflows/$workflowId/trigger/research': typeof WorkflowsWorkflowIdTriggerResearchIndexLazyRoute
  '/workflows/$workflowId/trigger/smola': typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute
  '/workflows/$workflowId/trigger/team': typeof WorkflowsWorkflowIdTriggerTeamIndexLazyRoute
  '/workflows/$workflowId/trigger/tenant': typeof WorkflowsWorkflowIdTriggerTenantIndexLazyRoute
  '/workflows/$workflowId/trigger/test_team': typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute
  '/coms/$comId/team_builder/component/$nodeId': typeof ComsComIdTeambuilderComponentNodeIdLazyRoute
  '/coms/$comId/team_builder/agent/$agentId': typeof ComsComIdTeambuilderAgentAgentIdIndexLazyRoute
  '/coms/$comId/team_builder/agent/new': typeof ComsComIdTeambuilderAgentNewIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/agent': typeof ComsComIdTeambuilderAgentAgentIdAgentIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/model': typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteLazyRouteWithChildren
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/coms': typeof ComsRouteLazyRouteWithChildren
  '/endpoint': typeof EndpointRouteLazyRouteWithChildren
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/events': typeof EventsRouteLazyRouteWithChildren
  '/model': typeof ModelRouteLazyRouteWithChildren
  '/platform': typeof PlatformRouteLazyRouteWithChildren
  '/platform-account': typeof PlatformAccountRouteLazyRouteWithChildren
  '/post': typeof PostRouteLazyRouteWithChildren
  '/proxy': typeof ProxyRouteLazyRouteWithChildren
  '/recurring': typeof RecurringRouteLazyRouteWithChildren
  '/resource': typeof ResourceRouteLazyRouteWithChildren
  '/scheduled-runs': typeof ScheduledRunsRouteLazyRouteWithChildren
  '/session': typeof SessionRouteLazyRouteWithChildren
  '/site': typeof SiteRouteLazyRouteWithChildren
  '/team': typeof TeamRouteLazyRouteWithChildren
  '/tenant': typeof TenantRouteLazyRouteWithChildren
  '/workflow-runs': typeof WorkflowRunsRouteLazyRouteWithChildren
  '/workflows': typeof WorkflowsRouteLazyRouteWithChildren
  '/platform/': typeof PlatformIndexRoute
  '/site/': typeof SiteIndexRoute
  '/envs/create': typeof EnvsCreateRoute
  '/site/$siteId': typeof SiteSiteIdRouteRouteWithChildren
  '/admin/': typeof AdminIndexLazyRoute
  '/coms/': typeof ComsIndexLazyRoute
  '/endpoint/': typeof EndpointIndexLazyRoute
  '/envs/': typeof EnvsIndexLazyRoute
  '/events/': typeof EventsIndexLazyRoute
  '/model/': typeof ModelIndexLazyRoute
  '/platform-account/': typeof PlatformAccountIndexLazyRoute
  '/post/': typeof PostIndexLazyRoute
  '/proxy/': typeof ProxyIndexLazyRoute
  '/recurring/': typeof RecurringIndexLazyRoute
  '/resource/': typeof ResourceIndexLazyRoute
  '/scheduled-runs/': typeof ScheduledRunsIndexLazyRoute
  '/session/': typeof SessionIndexLazyRoute
  '/team/': typeof TeamIndexLazyRoute
  '/tenant/': typeof TenantIndexLazyRoute
  '/workflow-runs/': typeof WorkflowRunsIndexLazyRoute
  '/workflows/': typeof WorkflowsIndexLazyRoute
  '/auth/login': typeof AuthLoginRouteLazyRouteWithChildren
  '/auth/register': typeof AuthRegisterLazyRoute
  '/coms/$comId': typeof ComsComIdRouteLazyRouteWithChildren
  '/model/$modelId': typeof ModelModelIdRouteLazyRouteWithChildren
  '/model/new': typeof ModelNewRouteLazyRouteWithChildren
  '/platform-account/$platformAccountId': typeof PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren
  '/platform-account/new': typeof PlatformAccountNewRouteLazyRouteWithChildren
  '/post/create': typeof PostCreateLazyRoute
  '/proxy/$proxyId': typeof ProxyProxyIdRouteLazyRouteWithChildren
  '/proxy/new': typeof ProxyNewRouteLazyRoute
  '/resource/$resId': typeof ResourceResIdRouteLazyRouteWithChildren
  '/resource/new': typeof ResourceNewRouteLazyRouteWithChildren
  '/session/$sessionId': typeof SessionSessionIdRouteLazyRouteWithChildren
  '/team/$teamId': typeof TeamTeamIdRouteLazyRouteWithChildren
  '/tenant/settings': typeof TenantSettingsRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdRouteLazyRouteWithChildren
  '/onboarding/create-tenant/': typeof OnboardingCreateTenantIndexRoute
  '/site/$siteId/': typeof SiteSiteIdIndexRoute
  '/site/create/': typeof SiteCreateIndexRoute
  '/site/$siteId/edit': typeof SiteSiteIdEditRoute
  '/site/$siteId/host': typeof SiteSiteIdHostRouteRouteWithChildren
  '/auth/login/': typeof AuthLoginIndexLazyRoute
  '/coms/$comId/': typeof ComsComIdIndexLazyRoute
  '/model/$modelId/': typeof ModelModelIdIndexLazyRoute
  '/model/new/': typeof ModelNewIndexLazyRoute
  '/platform-account/$platformAccountId/': typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  '/platform-account/new/': typeof PlatformAccountNewIndexLazyRoute
  '/proxy/$proxyId/': typeof ProxyProxyIdIndexLazyRoute
  '/resource/$resId/': typeof ResourceResIdIndexLazyRoute
  '/session/$sessionId/': typeof SessionSessionIdIndexLazyRoute
  '/tenant/settings/': typeof TenantSettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/': typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  '/workflows/$workflowId/': typeof WorkflowsWorkflowIdIndexLazyRoute
  '/coms/$comId/component_editor': typeof ComsComIdComponenteditorRouteLazyRouteWithChildren
  '/coms/$comId/run': typeof ComsComIdRunRouteLazyRouteWithChildren
  '/coms/$comId/team_builder': typeof ComsComIdTeambuilderRouteLazyRouteWithChildren
  '/coms/$comId/team_builderv2': typeof ComsComIdTeambuilderv2RouteLazyRouteWithChildren
  '/coms/$comId/type': typeof ComsComIdTypeRouteLazyRouteWithChildren
  '/coms/$comId/view': typeof ComsComIdViewRouteLazyRouteWithChildren
  '/coms/$comId/visualization': typeof ComsComIdVisualizationRouteLazyRoute
  '/platform-account/$platformAccountId/actions': typeof PlatformAccountPlatformAccountIdActionsRouteLazyRouteWithChildren
  '/proxy/$proxyId/actions': typeof ProxyProxyIdActionsRouteLazyRouteWithChildren
  '/resource/$resId/platform_account': typeof ResourceResIdPlatformaccountRouteLazyRouteWithChildren
  '/resource/new/res': typeof ResourceNewResRouteLazyRouteWithChildren
  '/session/$sessionId/actions': typeof SessionSessionIdActionsRouteLazyRouteWithChildren
  '/session/$sessionId/config': typeof SessionSessionIdConfigRouteLazyRouteWithChildren
  '/session/$sessionId/team_state': typeof SessionSessionIdTeamstateRouteLazyRouteWithChildren
  '/tenant/settings/$tenantSettingId': typeof TenantSettingsTenantSettingIdRouteLazyRouteWithChildren
  '/tenant/settings/new': typeof TenantSettingsNewRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/additional-metadata': typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  '/workflow-runs/$workflowRunId/chat': typeof WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/input': typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  '/workflow-runs/$workflowRunId/summary': typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  '/workflow-runs/$workflowRunId/visualization': typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger': typeof WorkflowsWorkflowIdTriggerRouteLazyRouteWithChildren
  '/coms/$comId/component_editor/': typeof ComsComIdComponenteditorIndexRoute
  '/site/$siteId/host/': typeof SiteSiteIdHostIndexRoute
  '/coms/$comId/component_editor/$': typeof ComsComIdComponenteditorSplatRoute
  '/coms/$comId/component_editor/AssistantAgent': typeof ComsComIdComponenteditorAssistantAgentRoute
  '/coms/$comId/component_editor/InstagramAgent': typeof ComsComIdComponenteditorInstagramAgentRoute
  '/coms/$comId/component_editor/MtOpenAIChatCompletionClient': typeof ComsComIdComponenteditorMtOpenAIChatCompletionClientRoute
  '/coms/$comId/component_editor/SmolaAgent': typeof ComsComIdComponenteditorSmolaAgentRoute
  '/coms/$comId/type/modelClient': typeof ComsComIdTypeModelClientRoute
  '/coms/$comId/run/': typeof ComsComIdRunIndexLazyRoute
  '/coms/$comId/team_builder/': typeof ComsComIdTeambuilderIndexLazyRoute
  '/coms/$comId/team_builderv2/': typeof ComsComIdTeambuilderv2IndexLazyRoute
  '/platform-account/$platformAccountId/actions/': typeof PlatformAccountPlatformAccountIdActionsIndexLazyRoute
  '/proxy/$proxyId/actions/': typeof ProxyProxyIdActionsIndexLazyRoute
  '/resource/$resId/platform_account/': typeof ResourceResIdPlatformaccountIndexLazyRoute
  '/resource/new/res/': typeof ResourceNewResIndexLazyRoute
  '/session/$sessionId/actions/': typeof SessionSessionIdActionsIndexLazyRoute
  '/session/$sessionId/config/': typeof SessionSessionIdConfigIndexLazyRoute
  '/session/$sessionId/team_state/': typeof SessionSessionIdTeamstateIndexLazyRoute
  '/team/$teamId/new/': typeof TeamTeamIdNewIndexLazyRoute
  '/tenant/settings/$tenantSettingId/': typeof TenantSettingsTenantSettingIdIndexLazyRoute
  '/tenant/settings/new/': typeof TenantSettingsNewIndexLazyRoute
  '/workflow-runs/$workflowRunId/chat/': typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
  '/workflow-runs/$workflowRunId/visualization/': typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
  '/workflows/$workflowId/trigger/': typeof WorkflowsWorkflowIdTriggerIndexLazyRoute
  '/coms/$comId/component_editor/InstagramTeam': typeof ComsComIdComponenteditorInstagramTeamLazyRoute
  '/coms/$comId/edit/model': typeof ComsComIdEditModelRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/component': typeof ComsComIdTeambuilderComponentRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/jsonview': typeof ComsComIdTeambuilderJsonviewRouteLazyRouteWithChildren
  '/coms/$comId/team_builderv2/instagram_team': typeof ComsComIdTeambuilderv2InstagramteamRouteLazyRouteWithChildren
  '/coms/$comId/type/assisant': typeof ComsComIdTypeAssisantLazyRoute
  '/coms/$comId/type/instagramTeam': typeof ComsComIdTypeInstagramTeamLazyRoute
  '/coms/$comId/view/$subComId': typeof ComsComIdViewSubComIdRouteLazyRouteWithChildren
  '/resource/new/res/browser': typeof ResourceNewResBrowserLazyRoute
  '/resource/new/res/chat': typeof ResourceNewResChatLazyRoute
  '/resource/new/res/platform_account': typeof ResourceNewResPlatformaccountLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings': typeof TenantSettingsTenantSettingIdModelsettingsRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/$': typeof WorkflowsWorkflowIdTriggerSplatLazyRoute
  '/workflows/$workflowId/trigger/ag': typeof WorkflowsWorkflowIdTriggerAgRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/browser': typeof WorkflowsWorkflowIdTriggerBrowserRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/com': typeof WorkflowsWorkflowIdTriggerComRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/model': typeof WorkflowsWorkflowIdTriggerModelRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/research': typeof WorkflowsWorkflowIdTriggerResearchRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/smola': typeof WorkflowsWorkflowIdTriggerSmolaRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/team': typeof WorkflowsWorkflowIdTriggerTeamRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/tenant': typeof WorkflowsWorkflowIdTriggerTenantRouteLazyRouteWithChildren
  '/workflows/$workflowId/trigger/test_team': typeof WorkflowsWorkflowIdTriggerTestteamRouteLazyRouteWithChildren
  '/coms/$comId/edit/model/': typeof ComsComIdEditModelIndexLazyRoute
  '/coms/$comId/team_builder/jsonview/': typeof ComsComIdTeambuilderJsonviewIndexLazyRoute
  '/coms/$comId/team_builderv2/instagram_team/': typeof ComsComIdTeambuilderv2InstagramteamIndexLazyRoute
  '/coms/$comId/view/$subComId/': typeof ComsComIdViewSubComIdIndexLazyRoute
  '/tenant/settings/$tenantSettingId/model_settings/': typeof TenantSettingsTenantSettingIdModelsettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId/': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
  '/workflows/$workflowId/trigger/ag/': typeof WorkflowsWorkflowIdTriggerAgIndexLazyRoute
  '/workflows/$workflowId/trigger/browser/': typeof WorkflowsWorkflowIdTriggerBrowserIndexLazyRoute
  '/workflows/$workflowId/trigger/com/': typeof WorkflowsWorkflowIdTriggerComIndexLazyRoute
  '/workflows/$workflowId/trigger/model/': typeof WorkflowsWorkflowIdTriggerModelIndexLazyRoute
  '/workflows/$workflowId/trigger/research/': typeof WorkflowsWorkflowIdTriggerResearchIndexLazyRoute
  '/workflows/$workflowId/trigger/smola/': typeof WorkflowsWorkflowIdTriggerSmolaIndexLazyRoute
  '/workflows/$workflowId/trigger/team/': typeof WorkflowsWorkflowIdTriggerTeamIndexLazyRoute
  '/workflows/$workflowId/trigger/tenant/': typeof WorkflowsWorkflowIdTriggerTenantIndexLazyRoute
  '/workflows/$workflowId/trigger/test_team/': typeof WorkflowsWorkflowIdTriggerTestteamIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId': typeof ComsComIdTeambuilderAgentAgentIdRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/agent/new': typeof ComsComIdTeambuilderAgentNewRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/component/$nodeId': typeof ComsComIdTeambuilderComponentNodeIdLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/': typeof ComsComIdTeambuilderAgentAgentIdIndexLazyRoute
  '/coms/$comId/team_builder/agent/new/': typeof ComsComIdTeambuilderAgentNewIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/agent': typeof ComsComIdTeambuilderAgentAgentIdAgentRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/agent/$agentId/model': typeof ComsComIdTeambuilderAgentAgentIdModelRouteLazyRouteWithChildren
  '/coms/$comId/team_builder/agent/$agentId/agent/': typeof ComsComIdTeambuilderAgentAgentIdAgentIndexLazyRoute
  '/coms/$comId/team_builder/agent/$agentId/model/': typeof ComsComIdTeambuilderAgentAgentIdModelIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/auth'
    | '/coms'
    | '/endpoint'
    | '/envs'
    | '/events'
    | '/model'
    | '/platform'
    | '/platform-account'
    | '/post'
    | '/proxy'
    | '/recurring'
    | '/resource'
    | '/scheduled-runs'
    | '/session'
    | '/site'
    | '/team'
    | '/tenant'
    | '/workflow-runs'
    | '/workflows'
    | '/platform/'
    | '/site/'
    | '/envs/create'
    | '/site/$siteId'
    | '/admin/'
    | '/coms/'
    | '/endpoint/'
    | '/envs/'
    | '/events/'
    | '/model/'
    | '/platform-account/'
    | '/post/'
    | '/proxy/'
    | '/recurring/'
    | '/resource/'
    | '/scheduled-runs/'
    | '/session/'
    | '/team/'
    | '/tenant/'
    | '/workflow-runs/'
    | '/workflows/'
    | '/auth/login'
    | '/auth/register'
    | '/coms/$comId'
    | '/model/$modelId'
    | '/model/new'
    | '/platform-account/$platformAccountId'
    | '/platform-account/new'
    | '/post/create'
    | '/proxy/$proxyId'
    | '/proxy/new'
    | '/resource/$resId'
    | '/resource/new'
    | '/session/$sessionId'
    | '/team/$teamId'
    | '/tenant/settings'
    | '/workflow-runs/$workflowRunId'
    | '/workflows/$workflowId'
    | '/onboarding/create-tenant'
    | '/site/$siteId/'
    | '/site/create'
    | '/site/$siteId/edit'
    | '/site/$siteId/host'
    | '/auth/login/'
    | '/coms/$comId/'
    | '/model/$modelId/'
    | '/model/new/'
    | '/platform-account/$platformAccountId/'
    | '/platform-account/new/'
    | '/proxy/$proxyId/'
    | '/resource/$resId/'
    | '/session/$sessionId/'
    | '/tenant/settings/'
    | '/workflow-runs/$workflowRunId/'
    | '/workflows/$workflowId/'
    | '/coms/$comId/component_editor'
    | '/coms/$comId/run'
    | '/coms/$comId/team_builder'
    | '/coms/$comId/team_builderv2'
    | '/coms/$comId/type'
    | '/coms/$comId/view'
    | '/coms/$comId/visualization'
    | '/platform-account/$platformAccountId/actions'
    | '/proxy/$proxyId/actions'
    | '/resource/$resId/platform_account'
    | '/resource/new/res'
    | '/session/$sessionId/actions'
    | '/session/$sessionId/config'
    | '/session/$sessionId/team_state'
    | '/tenant/settings/$tenantSettingId'
    | '/tenant/settings/new'
    | '/workflow-runs/$workflowRunId/additional-metadata'
    | '/workflow-runs/$workflowRunId/chat'
    | '/workflow-runs/$workflowRunId/input'
    | '/workflow-runs/$workflowRunId/summary'
    | '/workflow-runs/$workflowRunId/visualization'
    | '/workflows/$workflowId/trigger'
    | '/coms/$comId/component_editor/'
    | '/site/$siteId/host/'
    | '/coms/$comId/component_editor/$'
    | '/coms/$comId/component_editor/AssistantAgent'
    | '/coms/$comId/component_editor/InstagramAgent'
    | '/coms/$comId/component_editor/MtOpenAIChatCompletionClient'
    | '/coms/$comId/component_editor/SmolaAgent'
    | '/coms/$comId/type/modelClient'
    | '/coms/$comId/run/'
    | '/coms/$comId/team_builder/'
    | '/coms/$comId/team_builderv2/'
    | '/platform-account/$platformAccountId/actions/'
    | '/proxy/$proxyId/actions/'
    | '/resource/$resId/platform_account/'
    | '/resource/new/res/'
    | '/session/$sessionId/actions/'
    | '/session/$sessionId/config/'
    | '/session/$sessionId/team_state/'
    | '/team/$teamId/new'
    | '/tenant/settings/$tenantSettingId/'
    | '/tenant/settings/new/'
    | '/workflow-runs/$workflowRunId/chat/'
    | '/workflow-runs/$workflowRunId/visualization/'
    | '/workflows/$workflowId/trigger/'
    | '/coms/$comId/component_editor/InstagramTeam'
    | '/coms/$comId/edit/model'
    | '/coms/$comId/team_builder/component'
    | '/coms/$comId/team_builder/jsonview'
    | '/coms/$comId/team_builderv2/instagram_team'
    | '/coms/$comId/type/assisant'
    | '/coms/$comId/type/instagramTeam'
    | '/coms/$comId/view/$subComId'
    | '/resource/new/res/browser'
    | '/resource/new/res/chat'
    | '/resource/new/res/platform_account'
    | '/tenant/settings/$tenantSettingId/model_settings'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
    | '/workflows/$workflowId/trigger/$'
    | '/workflows/$workflowId/trigger/ag'
    | '/workflows/$workflowId/trigger/browser'
    | '/workflows/$workflowId/trigger/com'
    | '/workflows/$workflowId/trigger/model'
    | '/workflows/$workflowId/trigger/research'
    | '/workflows/$workflowId/trigger/smola'
    | '/workflows/$workflowId/trigger/team'
    | '/workflows/$workflowId/trigger/tenant'
    | '/workflows/$workflowId/trigger/test_team'
    | '/coms/$comId/edit/model/'
    | '/coms/$comId/team_builder/jsonview/'
    | '/coms/$comId/team_builderv2/instagram_team/'
    | '/coms/$comId/view/$subComId/'
    | '/tenant/settings/$tenantSettingId/model_settings/'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
    | '/workflows/$workflowId/trigger/ag/'
    | '/workflows/$workflowId/trigger/browser/'
    | '/workflows/$workflowId/trigger/com/'
    | '/workflows/$workflowId/trigger/model/'
    | '/workflows/$workflowId/trigger/research/'
    | '/workflows/$workflowId/trigger/smola/'
    | '/workflows/$workflowId/trigger/team/'
    | '/workflows/$workflowId/trigger/tenant/'
    | '/workflows/$workflowId/trigger/test_team/'
    | '/coms/$comId/team_builder/agent/$agentId'
    | '/coms/$comId/team_builder/agent/new'
    | '/coms/$comId/team_builder/component/$nodeId'
    | '/coms/$comId/team_builder/agent/$agentId/'
    | '/coms/$comId/team_builder/agent/new/'
    | '/coms/$comId/team_builder/agent/$agentId/agent'
    | '/coms/$comId/team_builder/agent/$agentId/model'
    | '/coms/$comId/team_builder/agent/$agentId/agent/'
    | '/coms/$comId/team_builder/agent/$agentId/model/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/platform'
    | '/site'
    | '/envs/create'
    | '/admin'
    | '/coms'
    | '/endpoint'
    | '/envs'
    | '/events'
    | '/model'
    | '/platform-account'
    | '/post'
    | '/proxy'
    | '/recurring'
    | '/resource'
    | '/scheduled-runs'
    | '/session'
    | '/team'
    | '/tenant'
    | '/workflow-runs'
    | '/workflows'
    | '/auth/register'
    | '/post/create'
    | '/proxy/new'
    | '/resource/new'
    | '/team/$teamId'
    | '/onboarding/create-tenant'
    | '/site/$siteId'
    | '/site/create'
    | '/site/$siteId/edit'
    | '/auth/login'
    | '/coms/$comId'
    | '/model/$modelId'
    | '/model/new'
    | '/platform-account/$platformAccountId'
    | '/platform-account/new'
    | '/proxy/$proxyId'
    | '/resource/$resId'
    | '/session/$sessionId'
    | '/tenant/settings'
    | '/workflow-runs/$workflowRunId'
    | '/workflows/$workflowId'
    | '/coms/$comId/type'
    | '/coms/$comId/view'
    | '/coms/$comId/visualization'
    | '/workflow-runs/$workflowRunId/additional-metadata'
    | '/workflow-runs/$workflowRunId/input'
    | '/workflow-runs/$workflowRunId/summary'
    | '/coms/$comId/component_editor'
    | '/site/$siteId/host'
    | '/coms/$comId/component_editor/$'
    | '/coms/$comId/component_editor/AssistantAgent'
    | '/coms/$comId/component_editor/InstagramAgent'
    | '/coms/$comId/component_editor/MtOpenAIChatCompletionClient'
    | '/coms/$comId/component_editor/SmolaAgent'
    | '/coms/$comId/type/modelClient'
    | '/coms/$comId/run'
    | '/coms/$comId/team_builder'
    | '/coms/$comId/team_builderv2'
    | '/platform-account/$platformAccountId/actions'
    | '/proxy/$proxyId/actions'
    | '/resource/$resId/platform_account'
    | '/resource/new/res'
    | '/session/$sessionId/actions'
    | '/session/$sessionId/config'
    | '/session/$sessionId/team_state'
    | '/team/$teamId/new'
    | '/tenant/settings/$tenantSettingId'
    | '/tenant/settings/new'
    | '/workflow-runs/$workflowRunId/chat'
    | '/workflow-runs/$workflowRunId/visualization'
    | '/workflows/$workflowId/trigger'
    | '/coms/$comId/component_editor/InstagramTeam'
    | '/coms/$comId/team_builder/component'
    | '/coms/$comId/type/assisant'
    | '/coms/$comId/type/instagramTeam'
    | '/resource/new/res/browser'
    | '/resource/new/res/chat'
    | '/resource/new/res/platform_account'
    | '/workflows/$workflowId/trigger/$'
    | '/coms/$comId/edit/model'
    | '/coms/$comId/team_builder/jsonview'
    | '/coms/$comId/team_builderv2/instagram_team'
    | '/coms/$comId/view/$subComId'
    | '/tenant/settings/$tenantSettingId/model_settings'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
    | '/workflows/$workflowId/trigger/ag'
    | '/workflows/$workflowId/trigger/browser'
    | '/workflows/$workflowId/trigger/com'
    | '/workflows/$workflowId/trigger/model'
    | '/workflows/$workflowId/trigger/research'
    | '/workflows/$workflowId/trigger/smola'
    | '/workflows/$workflowId/trigger/team'
    | '/workflows/$workflowId/trigger/tenant'
    | '/workflows/$workflowId/trigger/test_team'
    | '/coms/$comId/team_builder/component/$nodeId'
    | '/coms/$comId/team_builder/agent/$agentId'
    | '/coms/$comId/team_builder/agent/new'
    | '/coms/$comId/team_builder/agent/$agentId/agent'
    | '/coms/$comId/team_builder/agent/$agentId/model'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/auth'
    | '/coms'
    | '/endpoint'
    | '/envs'
    | '/events'
    | '/model'
    | '/platform'
    | '/platform-account'
    | '/post'
    | '/proxy'
    | '/recurring'
    | '/resource'
    | '/scheduled-runs'
    | '/session'
    | '/site'
    | '/team'
    | '/tenant'
    | '/workflow-runs'
    | '/workflows'
    | '/platform/'
    | '/site/'
    | '/envs/create'
    | '/site/$siteId'
    | '/admin/'
    | '/coms/'
    | '/endpoint/'
    | '/envs/'
    | '/events/'
    | '/model/'
    | '/platform-account/'
    | '/post/'
    | '/proxy/'
    | '/recurring/'
    | '/resource/'
    | '/scheduled-runs/'
    | '/session/'
    | '/team/'
    | '/tenant/'
    | '/workflow-runs/'
    | '/workflows/'
    | '/auth/login'
    | '/auth/register'
    | '/coms/$comId'
    | '/model/$modelId'
    | '/model/new'
    | '/platform-account/$platformAccountId'
    | '/platform-account/new'
    | '/post/create'
    | '/proxy/$proxyId'
    | '/proxy/new'
    | '/resource/$resId'
    | '/resource/new'
    | '/session/$sessionId'
    | '/team/$teamId'
    | '/tenant/settings'
    | '/workflow-runs/$workflowRunId'
    | '/workflows/$workflowId'
    | '/onboarding/create-tenant/'
    | '/site/$siteId/'
    | '/site/create/'
    | '/site/$siteId/edit'
    | '/site/$siteId/host'
    | '/auth/login/'
    | '/coms/$comId/'
    | '/model/$modelId/'
    | '/model/new/'
    | '/platform-account/$platformAccountId/'
    | '/platform-account/new/'
    | '/proxy/$proxyId/'
    | '/resource/$resId/'
    | '/session/$sessionId/'
    | '/tenant/settings/'
    | '/workflow-runs/$workflowRunId/'
    | '/workflows/$workflowId/'
    | '/coms/$comId/component_editor'
    | '/coms/$comId/run'
    | '/coms/$comId/team_builder'
    | '/coms/$comId/team_builderv2'
    | '/coms/$comId/type'
    | '/coms/$comId/view'
    | '/coms/$comId/visualization'
    | '/platform-account/$platformAccountId/actions'
    | '/proxy/$proxyId/actions'
    | '/resource/$resId/platform_account'
    | '/resource/new/res'
    | '/session/$sessionId/actions'
    | '/session/$sessionId/config'
    | '/session/$sessionId/team_state'
    | '/tenant/settings/$tenantSettingId'
    | '/tenant/settings/new'
    | '/workflow-runs/$workflowRunId/additional-metadata'
    | '/workflow-runs/$workflowRunId/chat'
    | '/workflow-runs/$workflowRunId/input'
    | '/workflow-runs/$workflowRunId/summary'
    | '/workflow-runs/$workflowRunId/visualization'
    | '/workflows/$workflowId/trigger'
    | '/coms/$comId/component_editor/'
    | '/site/$siteId/host/'
    | '/coms/$comId/component_editor/$'
    | '/coms/$comId/component_editor/AssistantAgent'
    | '/coms/$comId/component_editor/InstagramAgent'
    | '/coms/$comId/component_editor/MtOpenAIChatCompletionClient'
    | '/coms/$comId/component_editor/SmolaAgent'
    | '/coms/$comId/type/modelClient'
    | '/coms/$comId/run/'
    | '/coms/$comId/team_builder/'
    | '/coms/$comId/team_builderv2/'
    | '/platform-account/$platformAccountId/actions/'
    | '/proxy/$proxyId/actions/'
    | '/resource/$resId/platform_account/'
    | '/resource/new/res/'
    | '/session/$sessionId/actions/'
    | '/session/$sessionId/config/'
    | '/session/$sessionId/team_state/'
    | '/team/$teamId/new/'
    | '/tenant/settings/$tenantSettingId/'
    | '/tenant/settings/new/'
    | '/workflow-runs/$workflowRunId/chat/'
    | '/workflow-runs/$workflowRunId/visualization/'
    | '/workflows/$workflowId/trigger/'
    | '/coms/$comId/component_editor/InstagramTeam'
    | '/coms/$comId/edit/model'
    | '/coms/$comId/team_builder/component'
    | '/coms/$comId/team_builder/jsonview'
    | '/coms/$comId/team_builderv2/instagram_team'
    | '/coms/$comId/type/assisant'
    | '/coms/$comId/type/instagramTeam'
    | '/coms/$comId/view/$subComId'
    | '/resource/new/res/browser'
    | '/resource/new/res/chat'
    | '/resource/new/res/platform_account'
    | '/tenant/settings/$tenantSettingId/model_settings'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
    | '/workflows/$workflowId/trigger/$'
    | '/workflows/$workflowId/trigger/ag'
    | '/workflows/$workflowId/trigger/browser'
    | '/workflows/$workflowId/trigger/com'
    | '/workflows/$workflowId/trigger/model'
    | '/workflows/$workflowId/trigger/research'
    | '/workflows/$workflowId/trigger/smola'
    | '/workflows/$workflowId/trigger/team'
    | '/workflows/$workflowId/trigger/tenant'
    | '/workflows/$workflowId/trigger/test_team'
    | '/coms/$comId/edit/model/'
    | '/coms/$comId/team_builder/jsonview/'
    | '/coms/$comId/team_builderv2/instagram_team/'
    | '/coms/$comId/view/$subComId/'
    | '/tenant/settings/$tenantSettingId/model_settings/'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
    | '/workflows/$workflowId/trigger/ag/'
    | '/workflows/$workflowId/trigger/browser/'
    | '/workflows/$workflowId/trigger/com/'
    | '/workflows/$workflowId/trigger/model/'
    | '/workflows/$workflowId/trigger/research/'
    | '/workflows/$workflowId/trigger/smola/'
    | '/workflows/$workflowId/trigger/team/'
    | '/workflows/$workflowId/trigger/tenant/'
    | '/workflows/$workflowId/trigger/test_team/'
    | '/coms/$comId/team_builder/agent/$agentId'
    | '/coms/$comId/team_builder/agent/new'
    | '/coms/$comId/team_builder/component/$nodeId'
    | '/coms/$comId/team_builder/agent/$agentId/'
    | '/coms/$comId/team_builder/agent/new/'
    | '/coms/$comId/team_builder/agent/$agentId/agent'
    | '/coms/$comId/team_builder/agent/$agentId/model'
    | '/coms/$comId/team_builder/agent/$agentId/agent/'
    | '/coms/$comId/team_builder/agent/$agentId/model/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteLazyRoute: typeof AdminRouteLazyRouteWithChildren
  AuthRouteLazyRoute: typeof AuthRouteLazyRouteWithChildren
  ComsRouteLazyRoute: typeof ComsRouteLazyRouteWithChildren
  EndpointRouteLazyRoute: typeof EndpointRouteLazyRouteWithChildren
  EnvsRouteLazyRoute: typeof EnvsRouteLazyRouteWithChildren
  EventsRouteLazyRoute: typeof EventsRouteLazyRouteWithChildren
  ModelRouteLazyRoute: typeof ModelRouteLazyRouteWithChildren
  PlatformRouteLazyRoute: typeof PlatformRouteLazyRouteWithChildren
  PlatformAccountRouteLazyRoute: typeof PlatformAccountRouteLazyRouteWithChildren
  PostRouteLazyRoute: typeof PostRouteLazyRouteWithChildren
  ProxyRouteLazyRoute: typeof ProxyRouteLazyRouteWithChildren
  RecurringRouteLazyRoute: typeof RecurringRouteLazyRouteWithChildren
  ResourceRouteLazyRoute: typeof ResourceRouteLazyRouteWithChildren
  ScheduledRunsRouteLazyRoute: typeof ScheduledRunsRouteLazyRouteWithChildren
  SessionRouteLazyRoute: typeof SessionRouteLazyRouteWithChildren
  SiteRouteLazyRoute: typeof SiteRouteLazyRouteWithChildren
  TeamRouteLazyRoute: typeof TeamRouteLazyRouteWithChildren
  TenantRouteLazyRoute: typeof TenantRouteLazyRouteWithChildren
  WorkflowRunsRouteLazyRoute: typeof WorkflowRunsRouteLazyRouteWithChildren
  WorkflowsRouteLazyRoute: typeof WorkflowsRouteLazyRouteWithChildren
  OnboardingCreateTenantIndexRoute: typeof OnboardingCreateTenantIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteLazyRoute: AdminRouteLazyRouteWithChildren,
  AuthRouteLazyRoute: AuthRouteLazyRouteWithChildren,
  ComsRouteLazyRoute: ComsRouteLazyRouteWithChildren,
  EndpointRouteLazyRoute: EndpointRouteLazyRouteWithChildren,
  EnvsRouteLazyRoute: EnvsRouteLazyRouteWithChildren,
  EventsRouteLazyRoute: EventsRouteLazyRouteWithChildren,
  ModelRouteLazyRoute: ModelRouteLazyRouteWithChildren,
  PlatformRouteLazyRoute: PlatformRouteLazyRouteWithChildren,
  PlatformAccountRouteLazyRoute: PlatformAccountRouteLazyRouteWithChildren,
  PostRouteLazyRoute: PostRouteLazyRouteWithChildren,
  ProxyRouteLazyRoute: ProxyRouteLazyRouteWithChildren,
  RecurringRouteLazyRoute: RecurringRouteLazyRouteWithChildren,
  ResourceRouteLazyRoute: ResourceRouteLazyRouteWithChildren,
  ScheduledRunsRouteLazyRoute: ScheduledRunsRouteLazyRouteWithChildren,
  SessionRouteLazyRoute: SessionRouteLazyRouteWithChildren,
  SiteRouteLazyRoute: SiteRouteLazyRouteWithChildren,
  TeamRouteLazyRoute: TeamRouteLazyRouteWithChildren,
  TenantRouteLazyRoute: TenantRouteLazyRouteWithChildren,
  WorkflowRunsRouteLazyRoute: WorkflowRunsRouteLazyRouteWithChildren,
  WorkflowsRouteLazyRoute: WorkflowsRouteLazyRouteWithChildren,
  OnboardingCreateTenantIndexRoute: OnboardingCreateTenantIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/admin",
        "/auth",
        "/coms",
        "/endpoint",
        "/envs",
        "/events",
        "/model",
        "/platform",
        "/platform-account",
        "/post",
        "/proxy",
        "/recurring",
        "/resource",
        "/scheduled-runs",
        "/session",
        "/site",
        "/team",
        "/tenant",
        "/workflow-runs",
        "/workflows",
        "/onboarding/create-tenant/"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/admin": {
      "filePath": "~admin/~route.lazy.tsx",
      "children": [
        "/admin/"
      ]
    },
    "/auth": {
      "filePath": "~auth/~route.lazy.tsx",
      "children": [
        "/auth/login",
        "/auth/register"
      ]
    },
    "/coms": {
      "filePath": "~coms/~route.lazy.tsx",
      "children": [
        "/coms/",
        "/coms/$comId"
      ]
    },
    "/endpoint": {
      "filePath": "~endpoint/~route.lazy.tsx",
      "children": [
        "/endpoint/"
      ]
    },
    "/envs": {
      "filePath": "~envs/~route.lazy.tsx",
      "children": [
        "/envs/create",
        "/envs/"
      ]
    },
    "/events": {
      "filePath": "~events/~route.lazy.tsx",
      "children": [
        "/events/"
      ]
    },
    "/model": {
      "filePath": "~model/~route.lazy.tsx",
      "children": [
        "/model/",
        "/model/$modelId",
        "/model/new"
      ]
    },
    "/platform": {
      "filePath": "~platform/~route.lazy.tsx",
      "children": [
        "/platform/"
      ]
    },
    "/platform-account": {
      "filePath": "~platform-account/~route.lazy.tsx",
      "children": [
        "/platform-account/",
        "/platform-account/$platformAccountId",
        "/platform-account/new"
      ]
    },
    "/post": {
      "filePath": "~post/~route.lazy.tsx",
      "children": [
        "/post/",
        "/post/create"
      ]
    },
    "/proxy": {
      "filePath": "~proxy/~route.lazy.tsx",
      "children": [
        "/proxy/",
        "/proxy/$proxyId",
        "/proxy/new"
      ]
    },
    "/recurring": {
      "filePath": "~recurring/~route.lazy.tsx",
      "children": [
        "/recurring/"
      ]
    },
    "/resource": {
      "filePath": "~resource/~route.lazy.tsx",
      "children": [
        "/resource/",
        "/resource/$resId",
        "/resource/new"
      ]
    },
    "/scheduled-runs": {
      "filePath": "~scheduled-runs/~route.lazy.tsx",
      "children": [
        "/scheduled-runs/"
      ]
    },
    "/session": {
      "filePath": "~session/~route.lazy.tsx",
      "children": [
        "/session/",
        "/session/$sessionId"
      ]
    },
    "/site": {
      "filePath": "~site/~route.lazy.tsx",
      "children": [
        "/site/",
        "/site/$siteId",
        "/site/create/"
      ]
    },
    "/team": {
      "filePath": "~team/~route.lazy.tsx",
      "children": [
        "/team/",
        "/team/$teamId"
      ]
    },
    "/tenant": {
      "filePath": "~tenant/~route.lazy.tsx",
      "children": [
        "/tenant/",
        "/tenant/settings"
      ]
    },
    "/workflow-runs": {
      "filePath": "~workflow-runs/~route.lazy.tsx",
      "children": [
        "/workflow-runs/",
        "/workflow-runs/$workflowRunId"
      ]
    },
    "/workflows": {
      "filePath": "~workflows/~route.lazy.tsx",
      "children": [
        "/workflows/",
        "/workflows/$workflowId"
      ]
    },
    "/platform/": {
      "filePath": "~platform/~index.tsx",
      "parent": "/platform"
    },
    "/site/": {
      "filePath": "~site/~index.tsx",
      "parent": "/site"
    },
    "/envs/create": {
      "filePath": "~envs/~create.tsx",
      "parent": "/envs"
    },
    "/site/$siteId": {
      "filePath": "~site/~$siteId/~route.tsx",
      "parent": "/site",
      "children": [
        "/site/$siteId/",
        "/site/$siteId/edit",
        "/site/$siteId/host"
      ]
    },
    "/admin/": {
      "filePath": "~admin/~index.lazy.tsx",
      "parent": "/admin"
    },
    "/coms/": {
      "filePath": "~coms/~index.lazy.tsx",
      "parent": "/coms"
    },
    "/endpoint/": {
      "filePath": "~endpoint/~index.lazy.tsx",
      "parent": "/endpoint"
    },
    "/envs/": {
      "filePath": "~envs/~index.lazy.tsx",
      "parent": "/envs"
    },
    "/events/": {
      "filePath": "~events/~index.lazy.tsx",
      "parent": "/events"
    },
    "/model/": {
      "filePath": "~model/~index.lazy.tsx",
      "parent": "/model"
    },
    "/platform-account/": {
      "filePath": "~platform-account/~index.lazy.tsx",
      "parent": "/platform-account"
    },
    "/post/": {
      "filePath": "~post/~index.lazy.tsx",
      "parent": "/post"
    },
    "/proxy/": {
      "filePath": "~proxy/~index.lazy.tsx",
      "parent": "/proxy"
    },
    "/recurring/": {
      "filePath": "~recurring/~index.lazy.tsx",
      "parent": "/recurring"
    },
    "/resource/": {
      "filePath": "~resource/~index.lazy.tsx",
      "parent": "/resource"
    },
    "/scheduled-runs/": {
      "filePath": "~scheduled-runs/~index.lazy.tsx",
      "parent": "/scheduled-runs"
    },
    "/session/": {
      "filePath": "~session/~index.lazy.tsx",
      "parent": "/session"
    },
    "/team/": {
      "filePath": "~team/~index.lazy.tsx",
      "parent": "/team"
    },
    "/tenant/": {
      "filePath": "~tenant/~index.lazy.tsx",
      "parent": "/tenant"
    },
    "/workflow-runs/": {
      "filePath": "~workflow-runs/~index.lazy.tsx",
      "parent": "/workflow-runs"
    },
    "/workflows/": {
      "filePath": "~workflows/~index.lazy.tsx",
      "parent": "/workflows"
    },
    "/auth/login": {
      "filePath": "~auth/~login/~route.lazy.tsx",
      "parent": "/auth",
      "children": [
        "/auth/login/"
      ]
    },
    "/auth/register": {
      "filePath": "~auth/~register.lazy.tsx",
      "parent": "/auth"
    },
    "/coms/$comId": {
      "filePath": "~coms/~$comId/~route.lazy.tsx",
      "parent": "/coms",
      "children": [
        "/coms/$comId/",
        "/coms/$comId/component_editor",
        "/coms/$comId/run",
        "/coms/$comId/team_builder",
        "/coms/$comId/team_builderv2",
        "/coms/$comId/type",
        "/coms/$comId/view",
        "/coms/$comId/visualization",
        "/coms/$comId/edit/model"
      ]
    },
    "/model/$modelId": {
      "filePath": "~model/~$modelId/~route.lazy.tsx",
      "parent": "/model",
      "children": [
        "/model/$modelId/"
      ]
    },
    "/model/new": {
      "filePath": "~model/~new/~route.lazy.tsx",
      "parent": "/model",
      "children": [
        "/model/new/"
      ]
    },
    "/platform-account/$platformAccountId": {
      "filePath": "~platform-account/~$platformAccountId/~route.lazy.tsx",
      "parent": "/platform-account",
      "children": [
        "/platform-account/$platformAccountId/",
        "/platform-account/$platformAccountId/actions"
      ]
    },
    "/platform-account/new": {
      "filePath": "~platform-account/~new/~route.lazy.tsx",
      "parent": "/platform-account",
      "children": [
        "/platform-account/new/"
      ]
    },
    "/post/create": {
      "filePath": "~post/~create.lazy.tsx",
      "parent": "/post"
    },
    "/proxy/$proxyId": {
      "filePath": "~proxy/~$proxyId/~route.lazy.tsx",
      "parent": "/proxy",
      "children": [
        "/proxy/$proxyId/",
        "/proxy/$proxyId/actions"
      ]
    },
    "/proxy/new": {
      "filePath": "~proxy/~new/~route.lazy.tsx",
      "parent": "/proxy"
    },
    "/resource/$resId": {
      "filePath": "~resource/~$resId/~route.lazy.tsx",
      "parent": "/resource",
      "children": [
        "/resource/$resId/",
        "/resource/$resId/platform_account"
      ]
    },
    "/resource/new": {
      "filePath": "~resource/~new/~route.lazy.tsx",
      "parent": "/resource",
      "children": [
        "/resource/new/res"
      ]
    },
    "/session/$sessionId": {
      "filePath": "~session/~$sessionId/~route.lazy.tsx",
      "parent": "/session",
      "children": [
        "/session/$sessionId/",
        "/session/$sessionId/actions",
        "/session/$sessionId/config",
        "/session/$sessionId/team_state"
      ]
    },
    "/team/$teamId": {
      "filePath": "~team/~$teamId/~route.lazy.tsx",
      "parent": "/team",
      "children": [
        "/team/$teamId/new/"
      ]
    },
    "/tenant/settings": {
      "filePath": "~tenant/~settings/~route.lazy.tsx",
      "parent": "/tenant",
      "children": [
        "/tenant/settings/",
        "/tenant/settings/$tenantSettingId",
        "/tenant/settings/new"
      ]
    },
    "/workflow-runs/$workflowRunId": {
      "filePath": "~workflow-runs/~$workflowRunId/~route.lazy.tsx",
      "parent": "/workflow-runs",
      "children": [
        "/workflow-runs/$workflowRunId/",
        "/workflow-runs/$workflowRunId/additional-metadata",
        "/workflow-runs/$workflowRunId/chat",
        "/workflow-runs/$workflowRunId/input",
        "/workflow-runs/$workflowRunId/summary",
        "/workflow-runs/$workflowRunId/visualization",
        "/workflow-runs/$workflowRunId/stepRun/$stepRunId"
      ]
    },
    "/workflows/$workflowId": {
      "filePath": "~workflows/~$workflowId/~route.lazy.tsx",
      "parent": "/workflows",
      "children": [
        "/workflows/$workflowId/",
        "/workflows/$workflowId/trigger"
      ]
    },
    "/onboarding/create-tenant/": {
      "filePath": "~onboarding/~create-tenant/~index.tsx"
    },
    "/site/$siteId/": {
      "filePath": "~site/~$siteId/~index.tsx",
      "parent": "/site/$siteId"
    },
    "/site/create/": {
      "filePath": "~site/~create/~index.tsx",
      "parent": "/site"
    },
    "/site/$siteId/edit": {
      "filePath": "~site/~$siteId/~edit.tsx",
      "parent": "/site/$siteId"
    },
    "/site/$siteId/host": {
      "filePath": "~site/~$siteId/~host/~route.tsx",
      "parent": "/site/$siteId",
      "children": [
        "/site/$siteId/host/"
      ]
    },
    "/auth/login/": {
      "filePath": "~auth/~login/~index.lazy.tsx",
      "parent": "/auth/login"
    },
    "/coms/$comId/": {
      "filePath": "~coms/~$comId/~index.lazy.tsx",
      "parent": "/coms/$comId"
    },
    "/model/$modelId/": {
      "filePath": "~model/~$modelId/~index.lazy.tsx",
      "parent": "/model/$modelId"
    },
    "/model/new/": {
      "filePath": "~model/~new/~index.lazy.tsx",
      "parent": "/model/new"
    },
    "/platform-account/$platformAccountId/": {
      "filePath": "~platform-account/~$platformAccountId/~index.lazy.tsx",
      "parent": "/platform-account/$platformAccountId"
    },
    "/platform-account/new/": {
      "filePath": "~platform-account/~new/~index.lazy.tsx",
      "parent": "/platform-account/new"
    },
    "/proxy/$proxyId/": {
      "filePath": "~proxy/~$proxyId/~index.lazy.tsx",
      "parent": "/proxy/$proxyId"
    },
    "/resource/$resId/": {
      "filePath": "~resource/~$resId/~index.lazy.tsx",
      "parent": "/resource/$resId"
    },
    "/session/$sessionId/": {
      "filePath": "~session/~$sessionId/~index.lazy.tsx",
      "parent": "/session/$sessionId"
    },
    "/tenant/settings/": {
      "filePath": "~tenant/~settings/~index.lazy.tsx",
      "parent": "/tenant/settings"
    },
    "/workflow-runs/$workflowRunId/": {
      "filePath": "~workflow-runs/~$workflowRunId/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflows/$workflowId/": {
      "filePath": "~workflows/~$workflowId/~index.lazy.tsx",
      "parent": "/workflows/$workflowId"
    },
    "/coms/$comId/component_editor": {
      "filePath": "~coms/~$comId/~component_editor/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/component_editor/",
        "/coms/$comId/component_editor/$",
        "/coms/$comId/component_editor/AssistantAgent",
        "/coms/$comId/component_editor/InstagramAgent",
        "/coms/$comId/component_editor/MtOpenAIChatCompletionClient",
        "/coms/$comId/component_editor/SmolaAgent",
        "/coms/$comId/component_editor/InstagramTeam"
      ]
    },
    "/coms/$comId/run": {
      "filePath": "~coms/~$comId/~run/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/run/"
      ]
    },
    "/coms/$comId/team_builder": {
      "filePath": "~coms/~$comId/~team_builder/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/team_builder/",
        "/coms/$comId/team_builder/component",
        "/coms/$comId/team_builder/jsonview",
        "/coms/$comId/team_builder/agent/$agentId",
        "/coms/$comId/team_builder/agent/new"
      ]
    },
    "/coms/$comId/team_builderv2": {
      "filePath": "~coms/~$comId/~team_builderv2/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/team_builderv2/",
        "/coms/$comId/team_builderv2/instagram_team"
      ]
    },
    "/coms/$comId/type": {
      "filePath": "~coms/~$comId/~type/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/type/modelClient",
        "/coms/$comId/type/assisant",
        "/coms/$comId/type/instagramTeam"
      ]
    },
    "/coms/$comId/view": {
      "filePath": "~coms/~$comId/~view/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/view/$subComId"
      ]
    },
    "/coms/$comId/visualization": {
      "filePath": "~coms/~$comId/~visualization/~route.lazy.tsx",
      "parent": "/coms/$comId"
    },
    "/platform-account/$platformAccountId/actions": {
      "filePath": "~platform-account/~$platformAccountId/~actions/~route.lazy.tsx",
      "parent": "/platform-account/$platformAccountId",
      "children": [
        "/platform-account/$platformAccountId/actions/"
      ]
    },
    "/proxy/$proxyId/actions": {
      "filePath": "~proxy/~$proxyId/~actions/~route.lazy.tsx",
      "parent": "/proxy/$proxyId",
      "children": [
        "/proxy/$proxyId/actions/"
      ]
    },
    "/resource/$resId/platform_account": {
      "filePath": "~resource/~$resId/~platform_account/~route.lazy.tsx",
      "parent": "/resource/$resId",
      "children": [
        "/resource/$resId/platform_account/"
      ]
    },
    "/resource/new/res": {
      "filePath": "~resource/~new/~res/~route.lazy.tsx",
      "parent": "/resource/new",
      "children": [
        "/resource/new/res/",
        "/resource/new/res/browser",
        "/resource/new/res/chat",
        "/resource/new/res/platform_account"
      ]
    },
    "/session/$sessionId/actions": {
      "filePath": "~session/~$sessionId/~actions/~route.lazy.tsx",
      "parent": "/session/$sessionId",
      "children": [
        "/session/$sessionId/actions/"
      ]
    },
    "/session/$sessionId/config": {
      "filePath": "~session/~$sessionId/~config/~route.lazy.tsx",
      "parent": "/session/$sessionId",
      "children": [
        "/session/$sessionId/config/"
      ]
    },
    "/session/$sessionId/team_state": {
      "filePath": "~session/~$sessionId/~team_state/~route.lazy.tsx",
      "parent": "/session/$sessionId",
      "children": [
        "/session/$sessionId/team_state/"
      ]
    },
    "/tenant/settings/$tenantSettingId": {
      "filePath": "~tenant/~settings/~$tenantSettingId/~route.lazy.tsx",
      "parent": "/tenant/settings",
      "children": [
        "/tenant/settings/$tenantSettingId/",
        "/tenant/settings/$tenantSettingId/model_settings"
      ]
    },
    "/tenant/settings/new": {
      "filePath": "~tenant/~settings/~new/~route.lazy.tsx",
      "parent": "/tenant/settings",
      "children": [
        "/tenant/settings/new/"
      ]
    },
    "/workflow-runs/$workflowRunId/additional-metadata": {
      "filePath": "~workflow-runs/~$workflowRunId/~additional-metadata.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflow-runs/$workflowRunId/chat": {
      "filePath": "~workflow-runs/~$workflowRunId/~chat/~route.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId",
      "children": [
        "/workflow-runs/$workflowRunId/chat/"
      ]
    },
    "/workflow-runs/$workflowRunId/input": {
      "filePath": "~workflow-runs/~$workflowRunId/~input.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflow-runs/$workflowRunId/summary": {
      "filePath": "~workflow-runs/~$workflowRunId/~summary.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflow-runs/$workflowRunId/visualization": {
      "filePath": "~workflow-runs/~$workflowRunId/~visualization/~route.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId",
      "children": [
        "/workflow-runs/$workflowRunId/visualization/"
      ]
    },
    "/workflows/$workflowId/trigger": {
      "filePath": "~workflows/~$workflowId/~trigger/~route.lazy.tsx",
      "parent": "/workflows/$workflowId",
      "children": [
        "/workflows/$workflowId/trigger/",
        "/workflows/$workflowId/trigger/$",
        "/workflows/$workflowId/trigger/ag",
        "/workflows/$workflowId/trigger/browser",
        "/workflows/$workflowId/trigger/com",
        "/workflows/$workflowId/trigger/model",
        "/workflows/$workflowId/trigger/research",
        "/workflows/$workflowId/trigger/smola",
        "/workflows/$workflowId/trigger/team",
        "/workflows/$workflowId/trigger/tenant",
        "/workflows/$workflowId/trigger/test_team"
      ]
    },
    "/coms/$comId/component_editor/": {
      "filePath": "~coms/~$comId/~component_editor/~index.tsx",
      "parent": "/coms/$comId/component_editor"
    },
    "/site/$siteId/host/": {
      "filePath": "~site/~$siteId/~host/~index.tsx",
      "parent": "/site/$siteId/host"
    },
    "/coms/$comId/component_editor/$": {
      "filePath": "~coms/~$comId/~component_editor/~$.tsx",
      "parent": "/coms/$comId/component_editor"
    },
    "/coms/$comId/component_editor/AssistantAgent": {
      "filePath": "~coms/~$comId/~component_editor/~AssistantAgent.tsx",
      "parent": "/coms/$comId/component_editor"
    },
    "/coms/$comId/component_editor/InstagramAgent": {
      "filePath": "~coms/~$comId/~component_editor/~InstagramAgent.tsx",
      "parent": "/coms/$comId/component_editor"
    },
    "/coms/$comId/component_editor/MtOpenAIChatCompletionClient": {
      "filePath": "~coms/~$comId/~component_editor/~MtOpenAIChatCompletionClient.tsx",
      "parent": "/coms/$comId/component_editor"
    },
    "/coms/$comId/component_editor/SmolaAgent": {
      "filePath": "~coms/~$comId/~component_editor/~SmolaAgent.tsx",
      "parent": "/coms/$comId/component_editor"
    },
    "/coms/$comId/type/modelClient": {
      "filePath": "~coms/~$comId/~type/~modelClient.tsx",
      "parent": "/coms/$comId/type"
    },
    "/coms/$comId/run/": {
      "filePath": "~coms/~$comId/~run/~index.lazy.tsx",
      "parent": "/coms/$comId/run"
    },
    "/coms/$comId/team_builder/": {
      "filePath": "~coms/~$comId/~team_builder/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builder"
    },
    "/coms/$comId/team_builderv2/": {
      "filePath": "~coms/~$comId/~team_builderv2/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builderv2"
    },
    "/platform-account/$platformAccountId/actions/": {
      "filePath": "~platform-account/~$platformAccountId/~actions/~index.lazy.tsx",
      "parent": "/platform-account/$platformAccountId/actions"
    },
    "/proxy/$proxyId/actions/": {
      "filePath": "~proxy/~$proxyId/~actions/~index.lazy.tsx",
      "parent": "/proxy/$proxyId/actions"
    },
    "/resource/$resId/platform_account/": {
      "filePath": "~resource/~$resId/~platform_account/~index.lazy.tsx",
      "parent": "/resource/$resId/platform_account"
    },
    "/resource/new/res/": {
      "filePath": "~resource/~new/~res/~index.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/session/$sessionId/actions/": {
      "filePath": "~session/~$sessionId/~actions/~index.lazy.tsx",
      "parent": "/session/$sessionId/actions"
    },
    "/session/$sessionId/config/": {
      "filePath": "~session/~$sessionId/~config/~index.lazy.tsx",
      "parent": "/session/$sessionId/config"
    },
    "/session/$sessionId/team_state/": {
      "filePath": "~session/~$sessionId/~team_state/~index.lazy.tsx",
      "parent": "/session/$sessionId/team_state"
    },
    "/team/$teamId/new/": {
      "filePath": "~team/~$teamId/~new/~index.lazy.tsx",
      "parent": "/team/$teamId"
    },
    "/tenant/settings/$tenantSettingId/": {
      "filePath": "~tenant/~settings/~$tenantSettingId/~index.lazy.tsx",
      "parent": "/tenant/settings/$tenantSettingId"
    },
    "/tenant/settings/new/": {
      "filePath": "~tenant/~settings/~new/~index.lazy.tsx",
      "parent": "/tenant/settings/new"
    },
    "/workflow-runs/$workflowRunId/chat/": {
      "filePath": "~workflow-runs/~$workflowRunId/~chat/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId/chat"
    },
    "/workflow-runs/$workflowRunId/visualization/": {
      "filePath": "~workflow-runs/~$workflowRunId/~visualization/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId/visualization"
    },
    "/workflows/$workflowId/trigger/": {
      "filePath": "~workflows/~$workflowId/~trigger/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger"
    },
    "/coms/$comId/component_editor/InstagramTeam": {
      "filePath": "~coms/~$comId/~component_editor/~InstagramTeam.lazy.tsx",
      "parent": "/coms/$comId/component_editor"
    },
    "/coms/$comId/edit/model": {
      "filePath": "~coms/~$comId/~edit/~model/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/edit/model/"
      ]
    },
    "/coms/$comId/team_builder/component": {
      "filePath": "~coms/~$comId/~team_builder/~component/~route.lazy.tsx",
      "parent": "/coms/$comId/team_builder",
      "children": [
        "/coms/$comId/team_builder/component/$nodeId"
      ]
    },
    "/coms/$comId/team_builder/jsonview": {
      "filePath": "~coms/~$comId/~team_builder/~jsonview/~route.lazy.tsx",
      "parent": "/coms/$comId/team_builder",
      "children": [
        "/coms/$comId/team_builder/jsonview/"
      ]
    },
    "/coms/$comId/team_builderv2/instagram_team": {
      "filePath": "~coms/~$comId/~team_builderv2/~instagram_team/~route.lazy.tsx",
      "parent": "/coms/$comId/team_builderv2",
      "children": [
        "/coms/$comId/team_builderv2/instagram_team/"
      ]
    },
    "/coms/$comId/type/assisant": {
      "filePath": "~coms/~$comId/~type/~assisant.lazy.tsx",
      "parent": "/coms/$comId/type"
    },
    "/coms/$comId/type/instagramTeam": {
      "filePath": "~coms/~$comId/~type/~instagramTeam.lazy.tsx",
      "parent": "/coms/$comId/type"
    },
    "/coms/$comId/view/$subComId": {
      "filePath": "~coms/~$comId/~view/~$subComId/~route.lazy.tsx",
      "parent": "/coms/$comId/view",
      "children": [
        "/coms/$comId/view/$subComId/"
      ]
    },
    "/resource/new/res/browser": {
      "filePath": "~resource/~new/~res/~browser.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/resource/new/res/chat": {
      "filePath": "~resource/~new/~res/~chat.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/resource/new/res/platform_account": {
      "filePath": "~resource/~new/~res/~platform_account.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/tenant/settings/$tenantSettingId/model_settings": {
      "filePath": "~tenant/~settings/~$tenantSettingId/~model_settings/~route.lazy.tsx",
      "parent": "/tenant/settings/$tenantSettingId",
      "children": [
        "/tenant/settings/$tenantSettingId/model_settings/"
      ]
    },
    "/workflow-runs/$workflowRunId/stepRun/$stepRunId": {
      "filePath": "~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~route.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId",
      "children": [
        "/workflow-runs/$workflowRunId/stepRun/$stepRunId/"
      ]
    },
    "/workflows/$workflowId/trigger/$": {
      "filePath": "~workflows/~$workflowId/~trigger/~$.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger"
    },
    "/workflows/$workflowId/trigger/ag": {
      "filePath": "~workflows/~$workflowId/~trigger/~ag/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/ag/"
      ]
    },
    "/workflows/$workflowId/trigger/browser": {
      "filePath": "~workflows/~$workflowId/~trigger/~browser/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/browser/"
      ]
    },
    "/workflows/$workflowId/trigger/com": {
      "filePath": "~workflows/~$workflowId/~trigger/~com/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/com/"
      ]
    },
    "/workflows/$workflowId/trigger/model": {
      "filePath": "~workflows/~$workflowId/~trigger/~model/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/model/"
      ]
    },
    "/workflows/$workflowId/trigger/research": {
      "filePath": "~workflows/~$workflowId/~trigger/~research/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/research/"
      ]
    },
    "/workflows/$workflowId/trigger/smola": {
      "filePath": "~workflows/~$workflowId/~trigger/~smola/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/smola/"
      ]
    },
    "/workflows/$workflowId/trigger/team": {
      "filePath": "~workflows/~$workflowId/~trigger/~team/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/team/"
      ]
    },
    "/workflows/$workflowId/trigger/tenant": {
      "filePath": "~workflows/~$workflowId/~trigger/~tenant/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/tenant/"
      ]
    },
    "/workflows/$workflowId/trigger/test_team": {
      "filePath": "~workflows/~$workflowId/~trigger/~test_team/~route.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger",
      "children": [
        "/workflows/$workflowId/trigger/test_team/"
      ]
    },
    "/coms/$comId/edit/model/": {
      "filePath": "~coms/~$comId/~edit/~model/~index.lazy.tsx",
      "parent": "/coms/$comId/edit/model"
    },
    "/coms/$comId/team_builder/jsonview/": {
      "filePath": "~coms/~$comId/~team_builder/~jsonview/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builder/jsonview"
    },
    "/coms/$comId/team_builderv2/instagram_team/": {
      "filePath": "~coms/~$comId/~team_builderv2/~instagram_team/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builderv2/instagram_team"
    },
    "/coms/$comId/view/$subComId/": {
      "filePath": "~coms/~$comId/~view/~$subComId/~index.lazy.tsx",
      "parent": "/coms/$comId/view/$subComId"
    },
    "/tenant/settings/$tenantSettingId/model_settings/": {
      "filePath": "~tenant/~settings/~$tenantSettingId/~model_settings/~index.lazy.tsx",
      "parent": "/tenant/settings/$tenantSettingId/model_settings"
    },
    "/workflow-runs/$workflowRunId/stepRun/$stepRunId/": {
      "filePath": "~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId/stepRun/$stepRunId"
    },
    "/workflows/$workflowId/trigger/ag/": {
      "filePath": "~workflows/~$workflowId/~trigger/~ag/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/ag"
    },
    "/workflows/$workflowId/trigger/browser/": {
      "filePath": "~workflows/~$workflowId/~trigger/~browser/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/browser"
    },
    "/workflows/$workflowId/trigger/com/": {
      "filePath": "~workflows/~$workflowId/~trigger/~com/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/com"
    },
    "/workflows/$workflowId/trigger/model/": {
      "filePath": "~workflows/~$workflowId/~trigger/~model/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/model"
    },
    "/workflows/$workflowId/trigger/research/": {
      "filePath": "~workflows/~$workflowId/~trigger/~research/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/research"
    },
    "/workflows/$workflowId/trigger/smola/": {
      "filePath": "~workflows/~$workflowId/~trigger/~smola/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/smola"
    },
    "/workflows/$workflowId/trigger/team/": {
      "filePath": "~workflows/~$workflowId/~trigger/~team/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/team"
    },
    "/workflows/$workflowId/trigger/tenant/": {
      "filePath": "~workflows/~$workflowId/~trigger/~tenant/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/tenant"
    },
    "/workflows/$workflowId/trigger/test_team/": {
      "filePath": "~workflows/~$workflowId/~trigger/~test_team/~index.lazy.tsx",
      "parent": "/workflows/$workflowId/trigger/test_team"
    },
    "/coms/$comId/team_builder/agent/$agentId": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~$agentId/~route.lazy.tsx",
      "parent": "/coms/$comId/team_builder",
      "children": [
        "/coms/$comId/team_builder/agent/$agentId/",
        "/coms/$comId/team_builder/agent/$agentId/agent",
        "/coms/$comId/team_builder/agent/$agentId/model"
      ]
    },
    "/coms/$comId/team_builder/agent/new": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~new/~route.lazy.tsx",
      "parent": "/coms/$comId/team_builder",
      "children": [
        "/coms/$comId/team_builder/agent/new/"
      ]
    },
    "/coms/$comId/team_builder/component/$nodeId": {
      "filePath": "~coms/~$comId/~team_builder/~component/~$nodeId.lazy.tsx",
      "parent": "/coms/$comId/team_builder/component"
    },
    "/coms/$comId/team_builder/agent/$agentId/": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~$agentId/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builder/agent/$agentId"
    },
    "/coms/$comId/team_builder/agent/new/": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~new/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builder/agent/new"
    },
    "/coms/$comId/team_builder/agent/$agentId/agent": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~$agentId/~agent/~route.lazy.tsx",
      "parent": "/coms/$comId/team_builder/agent/$agentId",
      "children": [
        "/coms/$comId/team_builder/agent/$agentId/agent/"
      ]
    },
    "/coms/$comId/team_builder/agent/$agentId/model": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~$agentId/~model/~route.lazy.tsx",
      "parent": "/coms/$comId/team_builder/agent/$agentId",
      "children": [
        "/coms/$comId/team_builder/agent/$agentId/model/"
      ]
    },
    "/coms/$comId/team_builder/agent/$agentId/agent/": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~$agentId/~agent/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builder/agent/$agentId/agent"
    },
    "/coms/$comId/team_builder/agent/$agentId/model/": {
      "filePath": "~coms/~$comId/~team_builder/~agent/~$agentId/~model/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builder/agent/$agentId/model"
    }
  }
}
ROUTE_MANIFEST_END */
