/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as IndexImport } from './routes/~index'
import { Route as TriggerAgImport } from './routes/~trigger/~ag'
import { Route as SiteSiteIdRouteImport } from './routes/~site/~$siteId/~route'
import { Route as EnvsCreateImport } from './routes/~envs/~create'
import { Route as SiteIndexImport } from './routes/~site/~index'
import { Route as PlatformIndexImport } from './routes/~platform/~index'
import { Route as SiteSiteIdHostRouteImport } from './routes/~site/~$siteId/~host/~route'
import { Route as SiteSiteIdEditImport } from './routes/~site/~$siteId/~edit'
import { Route as SiteCreateIndexImport } from './routes/~site/~create/~index'
import { Route as SiteSiteIdIndexImport } from './routes/~site/~$siteId/~index'
import { Route as OnboardingCreateTenantIndexImport } from './routes/~onboarding/~create-tenant/~index'
import { Route as ComsComIdTypeModelClientImport } from './routes/~coms/~$comId/~type/~modelClient'
import { Route as SiteSiteIdHostIndexImport } from './routes/~site/~$siteId/~host/~index'
import { Route as PlayChatSessionIdIndexImport } from './routes/~play/~chat/~$sessionId/~index'

// Create Virtual Routes

const WorkflowsRouteLazyImport = createFileRoute('/workflows')()
const WorkflowRunsRouteLazyImport = createFileRoute('/workflow-runs')()
const TriggerRouteLazyImport = createFileRoute('/trigger')()
const TenantsettingsRouteLazyImport = createFileRoute('/tenant_settings')()
const TeamRouteLazyImport = createFileRoute('/team')()
const SiteRouteLazyImport = createFileRoute('/site')()
const SettingsRouteLazyImport = createFileRoute('/settings')()
const SessionRouteLazyImport = createFileRoute('/session')()
const ResourceRouteLazyImport = createFileRoute('/resource')()
const PostRouteLazyImport = createFileRoute('/post')()
const PlayRouteLazyImport = createFileRoute('/play')()
const PlatformAccountRouteLazyImport = createFileRoute('/platform-account')()
const PlatformRouteLazyImport = createFileRoute('/platform')()
const ModelRouteLazyImport = createFileRoute('/model')()
const GalleryRouteLazyImport = createFileRoute('/gallery')()
const EventsRouteLazyImport = createFileRoute('/events')()
const EnvsRouteLazyImport = createFileRoute('/envs')()
const EndpointRouteLazyImport = createFileRoute('/endpoint')()
const ComsRouteLazyImport = createFileRoute('/coms')()
const AuthRouteLazyImport = createFileRoute('/auth')()
const AgstateRouteLazyImport = createFileRoute('/ag_state')()
const AgEventsRouteLazyImport = createFileRoute('/agEvents')()
const WorkflowsWorkflowIdLazyImport = createFileRoute(
  '/workflows/$workflowId',
)()
const WorkflowRunsWorkflowRunIdRouteLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId',
)()
const TriggerIdLazyImport = createFileRoute('/trigger/$id')()
const TenantsettingsModelclientsettingsRouteLazyImport = createFileRoute(
  '/tenant_settings/model_client_settings',
)()
const TenantsettingsTenantSettingIdRouteLazyImport = createFileRoute(
  '/tenant_settings/$tenantSettingId',
)()
const TeamTeamIdRouteLazyImport = createFileRoute('/team/$teamId')()
const SessionSsessionIdRouteLazyImport = createFileRoute(
  '/session/$ssessionId',
)()
const ResourceNewRouteLazyImport = createFileRoute('/resource/new')()
const ResourceResIdRouteLazyImport = createFileRoute('/resource/$resId')()
const PostCreateLazyImport = createFileRoute('/post/create')()
const PlayChatRouteLazyImport = createFileRoute('/play/chat')()
const PlatformAccountCreateLazyImport = createFileRoute(
  '/platform-account/create',
)()
const PlatformAccountPlatformAccountIdRouteLazyImport = createFileRoute(
  '/platform-account/$platformAccountId',
)()
const GalleryGalleryIdRouteLazyImport = createFileRoute('/gallery/$galleryId')()
const ComsNewRouteLazyImport = createFileRoute('/coms/new')()
const ComsComIdRouteLazyImport = createFileRoute('/coms/$comId')()
const AuthRegisterLazyImport = createFileRoute('/auth/register')()
const AuthLoginRouteLazyImport = createFileRoute('/auth/login')()
const WorkflowsIndexLazyImport = createFileRoute('/workflows/')()
const WorkflowRunsIndexLazyImport = createFileRoute('/workflow-runs/')()
const TenantsettingsIndexLazyImport = createFileRoute('/tenant_settings/')()
const TeamIndexLazyImport = createFileRoute('/team/')()
const SettingsIndexLazyImport = createFileRoute('/settings/')()
const SessionIndexLazyImport = createFileRoute('/session/')()
const ResourceIndexLazyImport = createFileRoute('/resource/')()
const PostIndexLazyImport = createFileRoute('/post/')()
const PlayIndexLazyImport = createFileRoute('/play/')()
const PlatformAccountIndexLazyImport = createFileRoute('/platform-account/')()
const ModelIndexLazyImport = createFileRoute('/model/')()
const GalleryIndexLazyImport = createFileRoute('/gallery/')()
const EventsIndexLazyImport = createFileRoute('/events/')()
const EnvsIndexLazyImport = createFileRoute('/envs/')()
const EndpointIndexLazyImport = createFileRoute('/endpoint/')()
const ComsIndexLazyImport = createFileRoute('/coms/')()
const AgEventsIndexLazyImport = createFileRoute('/agEvents/')()
const WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/visualization',
)()
const WorkflowRunsWorkflowRunIdSummaryLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/summary',
)()
const WorkflowRunsWorkflowRunIdInputLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/input',
)()
const WorkflowRunsWorkflowRunIdChatRouteLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/chat',
)()
const WorkflowRunsWorkflowRunIdAdditionalMetadataLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/additional-metadata',
)()
const ResourceNewResRouteLazyImport = createFileRoute('/resource/new/res')()
const PlayChatSessionIdRouteLazyImport = createFileRoute(
  '/play/chat/$sessionId',
)()
const ComsNewInstagramteamLazyImport = createFileRoute(
  '/coms/new/instagram_team',
)()
const ComsComIdViewRouteLazyImport = createFileRoute('/coms/$comId/view')()
const ComsComIdTypeRouteLazyImport = createFileRoute('/coms/$comId/type')()
const ComsComIdTeambuilderRouteLazyImport = createFileRoute(
  '/coms/$comId/team_builder',
)()
const ComsComIdSessionRouteLazyImport = createFileRoute(
  '/coms/$comId/session',
)()
const ComsComIdRunRouteLazyImport = createFileRoute('/coms/$comId/run')()
const WorkflowRunsWorkflowRunIdIndexLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/',
)()
const TenantsettingsModelclientsettingsIndexLazyImport = createFileRoute(
  '/tenant_settings/model_client_settings/',
)()
const TenantsettingsTenantSettingIdIndexLazyImport = createFileRoute(
  '/tenant_settings/$tenantSettingId/',
)()
const SessionSsessionIdIndexLazyImport = createFileRoute(
  '/session/$ssessionId/',
)()
const ResourceResIdIndexLazyImport = createFileRoute('/resource/$resId/')()
const PlayChatIndexLazyImport = createFileRoute('/play/chat/')()
const PlatformAccountPlatformAccountIdIndexLazyImport = createFileRoute(
  '/platform-account/$platformAccountId/',
)()
const ComsComIdIndexLazyImport = createFileRoute('/coms/$comId/')()
const AuthLoginIndexLazyImport = createFileRoute('/auth/login/')()
const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport =
  createFileRoute('/workflow-runs/$workflowRunId/stepRun/$stepRunId')()
const ResourceNewResPlatformaccountLazyImport = createFileRoute(
  '/resource/new/res/platform_account',
)()
const ResourceNewResChatLazyImport = createFileRoute('/resource/new/res/chat')()
const ResourceNewResBrowserLazyImport = createFileRoute(
  '/resource/new/res/browser',
)()
const PlayChatSessionIdTeamLazyImport = createFileRoute(
  '/play/chat/$sessionId/team',
)()
const PlayChatSessionIdStateLazyImport = createFileRoute(
  '/play/chat/$sessionId/state',
)()
const PlayChatSessionIdResultLazyImport = createFileRoute(
  '/play/chat/$sessionId/result',
)()
const PlayChatSessionIdEditLazyImport = createFileRoute(
  '/play/chat/$sessionId/edit',
)()
const PlayChatSessionIdDebugLazyImport = createFileRoute(
  '/play/chat/$sessionId/debug',
)()
const ComsComIdViewSubComIdRouteLazyImport = createFileRoute(
  '/coms/$comId/view/$subComId',
)()
const ComsComIdTypeInstagramTeamLazyImport = createFileRoute(
  '/coms/$comId/type/instagramTeam',
)()
const ComsComIdTypeAssisantLazyImport = createFileRoute(
  '/coms/$comId/type/assisant',
)()
const WorkflowRunsWorkflowRunIdVisualizationIndexLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/visualization/',
)()
const WorkflowRunsWorkflowRunIdChatIndexLazyImport = createFileRoute(
  '/workflow-runs/$workflowRunId/chat/',
)()
const TeamTeamIdNewIndexLazyImport = createFileRoute('/team/$teamId/new/')()
const ResourceNewResIndexLazyImport = createFileRoute('/resource/new/res/')()
const ResourceResIdSessionIdIndexLazyImport = createFileRoute(
  '/resource/$resId/$sessionId/',
)()
const ComsComIdTeambuilderIndexLazyImport = createFileRoute(
  '/coms/$comId/team_builder/',
)()
const ComsComIdSessionIndexLazyImport = createFileRoute(
  '/coms/$comId/session/',
)()
const ComsComIdRunIndexLazyImport = createFileRoute('/coms/$comId/run/')()
const WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyImport =
  createFileRoute('/workflow-runs/$workflowRunId/stepRun/$stepRunId/')()
const ComsComIdViewSubComIdIndexLazyImport = createFileRoute(
  '/coms/$comId/view/$subComId/',
)()

// Create/Update Routes

const WorkflowsRouteLazyRoute = WorkflowsRouteLazyImport.update({
  id: '/workflows',
  path: '/workflows',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~workflows/~route.lazy').then((d) => d.Route),
)

const WorkflowRunsRouteLazyRoute = WorkflowRunsRouteLazyImport.update({
  id: '/workflow-runs',
  path: '/workflow-runs',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~workflow-runs/~route.lazy').then((d) => d.Route),
)

const TriggerRouteLazyRoute = TriggerRouteLazyImport.update({
  id: '/trigger',
  path: '/trigger',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~trigger/~route.lazy').then((d) => d.Route),
)

const TenantsettingsRouteLazyRoute = TenantsettingsRouteLazyImport.update({
  id: '/tenant_settings',
  path: '/tenant_settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~tenant_settings/~route.lazy').then((d) => d.Route),
)

const TeamRouteLazyRoute = TeamRouteLazyImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~team/~route.lazy').then((d) => d.Route))

const SiteRouteLazyRoute = SiteRouteLazyImport.update({
  id: '/site',
  path: '/site',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~site/~route.lazy').then((d) => d.Route))

const SettingsRouteLazyRoute = SettingsRouteLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~settings/~route.lazy').then((d) => d.Route),
)

const SessionRouteLazyRoute = SessionRouteLazyImport.update({
  id: '/session',
  path: '/session',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~session/~route.lazy').then((d) => d.Route),
)

const ResourceRouteLazyRoute = ResourceRouteLazyImport.update({
  id: '/resource',
  path: '/resource',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~resource/~route.lazy').then((d) => d.Route),
)

const PostRouteLazyRoute = PostRouteLazyImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~post/~route.lazy').then((d) => d.Route))

const PlayRouteLazyRoute = PlayRouteLazyImport.update({
  id: '/play',
  path: '/play',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~play/~route.lazy').then((d) => d.Route))

const PlatformAccountRouteLazyRoute = PlatformAccountRouteLazyImport.update({
  id: '/platform-account',
  path: '/platform-account',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~platform-account/~route.lazy').then((d) => d.Route),
)

const PlatformRouteLazyRoute = PlatformRouteLazyImport.update({
  id: '/platform',
  path: '/platform',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~platform/~route.lazy').then((d) => d.Route),
)

const ModelRouteLazyRoute = ModelRouteLazyImport.update({
  id: '/model',
  path: '/model',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~model/~route.lazy').then((d) => d.Route))

const GalleryRouteLazyRoute = GalleryRouteLazyImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~gallery/~route.lazy').then((d) => d.Route),
)

const EventsRouteLazyRoute = EventsRouteLazyImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~events/~route.lazy').then((d) => d.Route),
)

const EnvsRouteLazyRoute = EnvsRouteLazyImport.update({
  id: '/envs',
  path: '/envs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~envs/~route.lazy').then((d) => d.Route))

const EndpointRouteLazyRoute = EndpointRouteLazyImport.update({
  id: '/endpoint',
  path: '/endpoint',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~endpoint/~route.lazy').then((d) => d.Route),
)

const ComsRouteLazyRoute = ComsRouteLazyImport.update({
  id: '/coms',
  path: '/coms',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~coms/~route.lazy').then((d) => d.Route))

const AuthRouteLazyRoute = AuthRouteLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~auth/~route.lazy').then((d) => d.Route))

const AgstateRouteLazyRoute = AgstateRouteLazyImport.update({
  id: '/ag_state',
  path: '/ag_state',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~ag_state/~route.lazy').then((d) => d.Route),
)

const AgEventsRouteLazyRoute = AgEventsRouteLazyImport.update({
  id: '/agEvents',
  path: '/agEvents',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~agEvents/~route.lazy').then((d) => d.Route),
)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowsWorkflowIdLazyRoute = WorkflowsWorkflowIdLazyImport.update({
  id: '/$workflowId',
  path: '/$workflowId',
  getParentRoute: () => WorkflowsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~workflows/~$workflowId.lazy').then((d) => d.Route),
)

const WorkflowRunsWorkflowRunIdRouteLazyRoute =
  WorkflowRunsWorkflowRunIdRouteLazyImport.update({
    id: '/$workflowRunId',
    path: '/$workflowRunId',
    getParentRoute: () => WorkflowRunsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const TriggerIdLazyRoute = TriggerIdLazyImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => TriggerRouteLazyRoute,
} as any).lazy(() => import('./routes/~trigger/~$id.lazy').then((d) => d.Route))

const TenantsettingsModelclientsettingsRouteLazyRoute =
  TenantsettingsModelclientsettingsRouteLazyImport.update({
    id: '/model_client_settings',
    path: '/model_client_settings',
    getParentRoute: () => TenantsettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~tenant_settings/~model_client_settings/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const TenantsettingsTenantSettingIdRouteLazyRoute =
  TenantsettingsTenantSettingIdRouteLazyImport.update({
    id: '/$tenantSettingId',
    path: '/$tenantSettingId',
    getParentRoute: () => TenantsettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~tenant_settings/~$tenantSettingId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const TeamTeamIdRouteLazyRoute = TeamTeamIdRouteLazyImport.update({
  id: '/$teamId',
  path: '/$teamId',
  getParentRoute: () => TeamRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~team/~$teamId/~route.lazy').then((d) => d.Route),
)

const SessionSsessionIdRouteLazyRoute = SessionSsessionIdRouteLazyImport.update(
  {
    id: '/$ssessionId',
    path: '/$ssessionId',
    getParentRoute: () => SessionRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/~session/~$ssessionId/~route.lazy').then((d) => d.Route),
)

const ResourceNewRouteLazyRoute = ResourceNewRouteLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ResourceRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~route.lazy').then((d) => d.Route),
)

const ResourceResIdRouteLazyRoute = ResourceResIdRouteLazyImport.update({
  id: '/$resId',
  path: '/$resId',
  getParentRoute: () => ResourceRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~$resId/~route.lazy').then((d) => d.Route),
)

const PostCreateLazyRoute = PostCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PostRouteLazyRoute,
} as any).lazy(() => import('./routes/~post/~create.lazy').then((d) => d.Route))

const PlayChatRouteLazyRoute = PlayChatRouteLazyImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => PlayRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~play/~chat/~route.lazy').then((d) => d.Route),
)

const PlatformAccountCreateLazyRoute = PlatformAccountCreateLazyImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PlatformAccountRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~platform-account/~create.lazy').then((d) => d.Route),
)

const PlatformAccountPlatformAccountIdRouteLazyRoute =
  PlatformAccountPlatformAccountIdRouteLazyImport.update({
    id: '/$platformAccountId',
    path: '/$platformAccountId',
    getParentRoute: () => PlatformAccountRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~$platformAccountId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const GalleryGalleryIdRouteLazyRoute = GalleryGalleryIdRouteLazyImport.update({
  id: '/$galleryId',
  path: '/$galleryId',
  getParentRoute: () => GalleryRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~gallery/~$galleryId/~route.lazy').then((d) => d.Route),
)

const ComsNewRouteLazyRoute = ComsNewRouteLazyImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ComsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~new/~route.lazy').then((d) => d.Route),
)

const ComsComIdRouteLazyRoute = ComsComIdRouteLazyImport.update({
  id: '/$comId',
  path: '/$comId',
  getParentRoute: () => ComsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~route.lazy').then((d) => d.Route),
)

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~register.lazy').then((d) => d.Route),
)

const AuthLoginRouteLazyRoute = AuthLoginRouteLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~login/~route.lazy').then((d) => d.Route),
)

const WorkflowsIndexLazyRoute = WorkflowsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkflowsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~workflows/~index.lazy').then((d) => d.Route),
)

const WorkflowRunsIndexLazyRoute = WorkflowRunsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkflowRunsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~workflow-runs/~index.lazy').then((d) => d.Route),
)

const TenantsettingsIndexLazyRoute = TenantsettingsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TenantsettingsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~tenant_settings/~index.lazy').then((d) => d.Route),
)

const TeamIndexLazyRoute = TeamIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TeamRouteLazyRoute,
} as any).lazy(() => import('./routes/~team/~index.lazy').then((d) => d.Route))

const SettingsIndexLazyRoute = SettingsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettingsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~settings/~index.lazy').then((d) => d.Route),
)

const SessionIndexLazyRoute = SessionIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SessionRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~session/~index.lazy').then((d) => d.Route),
)

const ResourceIndexLazyRoute = ResourceIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourceRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~index.lazy').then((d) => d.Route),
)

const PostIndexLazyRoute = PostIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostRouteLazyRoute,
} as any).lazy(() => import('./routes/~post/~index.lazy').then((d) => d.Route))

const PlayIndexLazyRoute = PlayIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlayRouteLazyRoute,
} as any).lazy(() => import('./routes/~play/~index.lazy').then((d) => d.Route))

const PlatformAccountIndexLazyRoute = PlatformAccountIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlatformAccountRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~platform-account/~index.lazy').then((d) => d.Route),
)

const ModelIndexLazyRoute = ModelIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ModelRouteLazyRoute,
} as any).lazy(() => import('./routes/~model/~index.lazy').then((d) => d.Route))

const GalleryIndexLazyRoute = GalleryIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GalleryRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~gallery/~index.lazy').then((d) => d.Route),
)

const EventsIndexLazyRoute = EventsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EventsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~events/~index.lazy').then((d) => d.Route),
)

const EnvsIndexLazyRoute = EnvsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EnvsRouteLazyRoute,
} as any).lazy(() => import('./routes/~envs/~index.lazy').then((d) => d.Route))

const EndpointIndexLazyRoute = EndpointIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EndpointRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~endpoint/~index.lazy').then((d) => d.Route),
)

const ComsIndexLazyRoute = ComsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ComsRouteLazyRoute,
} as any).lazy(() => import('./routes/~coms/~index.lazy').then((d) => d.Route))

const AgEventsIndexLazyRoute = AgEventsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AgEventsRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~agEvents/~index.lazy').then((d) => d.Route),
)

const TriggerAgRoute = TriggerAgImport.update({
  id: '/ag',
  path: '/ag',
  getParentRoute: () => TriggerRouteLazyRoute,
} as any)

const SiteSiteIdRouteRoute = SiteSiteIdRouteImport.update({
  id: '/$siteId',
  path: '/$siteId',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const EnvsCreateRoute = EnvsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => EnvsRouteLazyRoute,
} as any)

const SiteIndexRoute = SiteIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const PlatformIndexRoute = PlatformIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlatformRouteLazyRoute,
} as any)

const WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute =
  WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport.update({
    id: '/visualization',
    path: '/visualization',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~visualization/~route.lazy'
    ).then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdSummaryLazyRoute =
  WorkflowRunsWorkflowRunIdSummaryLazyImport.update({
    id: '/summary',
    path: '/summary',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~summary.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdInputLazyRoute =
  WorkflowRunsWorkflowRunIdInputLazyImport.update({
    id: '/input',
    path: '/input',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~input.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdChatRouteLazyRoute =
  WorkflowRunsWorkflowRunIdChatRouteLazyImport.update({
    id: '/chat',
    path: '/chat',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~chat/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute =
  WorkflowRunsWorkflowRunIdAdditionalMetadataLazyImport.update({
    id: '/additional-metadata',
    path: '/additional-metadata',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~additional-metadata.lazy'
    ).then((d) => d.Route),
  )

const ResourceNewResRouteLazyRoute = ResourceNewResRouteLazyImport.update({
  id: '/res',
  path: '/res',
  getParentRoute: () => ResourceNewRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~route.lazy').then((d) => d.Route),
)

const PlayChatSessionIdRouteLazyRoute = PlayChatSessionIdRouteLazyImport.update(
  {
    id: '/$sessionId',
    path: '/$sessionId',
    getParentRoute: () => PlayChatRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/~play/~chat/~$sessionId/~route.lazy').then((d) => d.Route),
)

const ComsNewInstagramteamLazyRoute = ComsNewInstagramteamLazyImport.update({
  id: '/instagram_team',
  path: '/instagram_team',
  getParentRoute: () => ComsNewRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~new/~instagram_team.lazy').then((d) => d.Route),
)

const ComsComIdViewRouteLazyRoute = ComsComIdViewRouteLazyImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => ComsComIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~view/~route.lazy').then((d) => d.Route),
)

const ComsComIdTypeRouteLazyRoute = ComsComIdTypeRouteLazyImport.update({
  id: '/type',
  path: '/type',
  getParentRoute: () => ComsComIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~type/~route.lazy').then((d) => d.Route),
)

const ComsComIdTeambuilderRouteLazyRoute =
  ComsComIdTeambuilderRouteLazyImport.update({
    id: '/team_builder',
    path: '/team_builder',
    getParentRoute: () => ComsComIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builder/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdSessionRouteLazyRoute = ComsComIdSessionRouteLazyImport.update({
  id: '/session',
  path: '/session',
  getParentRoute: () => ComsComIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~session/~route.lazy').then((d) => d.Route),
)

const ComsComIdRunRouteLazyRoute = ComsComIdRunRouteLazyImport.update({
  id: '/run',
  path: '/run',
  getParentRoute: () => ComsComIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~run/~route.lazy').then((d) => d.Route),
)

const WorkflowRunsWorkflowRunIdIndexLazyRoute =
  WorkflowRunsWorkflowRunIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const TenantsettingsModelclientsettingsIndexLazyRoute =
  TenantsettingsModelclientsettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TenantsettingsModelclientsettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~tenant_settings/~model_client_settings/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const TenantsettingsTenantSettingIdIndexLazyRoute =
  TenantsettingsTenantSettingIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TenantsettingsTenantSettingIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~tenant_settings/~$tenantSettingId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const SessionSsessionIdIndexLazyRoute = SessionSsessionIdIndexLazyImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => SessionSsessionIdRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/~session/~$ssessionId/~index.lazy').then((d) => d.Route),
)

const ResourceResIdIndexLazyRoute = ResourceResIdIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourceResIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~$resId/~index.lazy').then((d) => d.Route),
)

const PlayChatIndexLazyRoute = PlayChatIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlayChatRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~play/~chat/~index.lazy').then((d) => d.Route),
)

const PlatformAccountPlatformAccountIdIndexLazyRoute =
  PlatformAccountPlatformAccountIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PlatformAccountPlatformAccountIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~platform-account/~$platformAccountId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdIndexLazyRoute = ComsComIdIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ComsComIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~index.lazy').then((d) => d.Route),
)

const AuthLoginIndexLazyRoute = AuthLoginIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthLoginRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~auth/~login/~index.lazy').then((d) => d.Route),
)

const SiteSiteIdHostRouteRoute = SiteSiteIdHostRouteImport.update({
  id: '/host',
  path: '/host',
  getParentRoute: () => SiteSiteIdRouteRoute,
} as any)

const SiteSiteIdEditRoute = SiteSiteIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => SiteSiteIdRouteRoute,
} as any)

const SiteCreateIndexRoute = SiteCreateIndexImport.update({
  id: '/create/',
  path: '/create/',
  getParentRoute: () => SiteRouteLazyRoute,
} as any)

const SiteSiteIdIndexRoute = SiteSiteIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteSiteIdRouteRoute,
} as any)

const OnboardingCreateTenantIndexRoute =
  OnboardingCreateTenantIndexImport.update({
    id: '/onboarding/create-tenant/',
    path: '/onboarding/create-tenant/',
    getParentRoute: () => rootRoute,
  } as any)

const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute =
  WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport.update({
    id: '/stepRun/$stepRunId',
    path: '/stepRun/$stepRunId',
    getParentRoute: () => WorkflowRunsWorkflowRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~route.lazy'
    ).then((d) => d.Route),
  )

const ResourceNewResPlatformaccountLazyRoute =
  ResourceNewResPlatformaccountLazyImport.update({
    id: '/platform_account',
    path: '/platform_account',
    getParentRoute: () => ResourceNewResRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~resource/~new/~res/~platform_account.lazy').then(
      (d) => d.Route,
    ),
  )

const ResourceNewResChatLazyRoute = ResourceNewResChatLazyImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => ResourceNewResRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~chat.lazy').then((d) => d.Route),
)

const ResourceNewResBrowserLazyRoute = ResourceNewResBrowserLazyImport.update({
  id: '/browser',
  path: '/browser',
  getParentRoute: () => ResourceNewResRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~browser.lazy').then((d) => d.Route),
)

const PlayChatSessionIdTeamLazyRoute = PlayChatSessionIdTeamLazyImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => PlayChatSessionIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~play/~chat/~$sessionId/~team.lazy').then((d) => d.Route),
)

const PlayChatSessionIdStateLazyRoute = PlayChatSessionIdStateLazyImport.update(
  {
    id: '/state',
    path: '/state',
    getParentRoute: () => PlayChatSessionIdRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/~play/~chat/~$sessionId/~state.lazy').then((d) => d.Route),
)

const PlayChatSessionIdResultLazyRoute =
  PlayChatSessionIdResultLazyImport.update({
    id: '/result',
    path: '/result',
    getParentRoute: () => PlayChatSessionIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~play/~chat/~$sessionId/~result.lazy').then(
      (d) => d.Route,
    ),
  )

const PlayChatSessionIdEditLazyRoute = PlayChatSessionIdEditLazyImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => PlayChatSessionIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~play/~chat/~$sessionId/~edit.lazy').then((d) => d.Route),
)

const PlayChatSessionIdDebugLazyRoute = PlayChatSessionIdDebugLazyImport.update(
  {
    id: '/debug',
    path: '/debug',
    getParentRoute: () => PlayChatSessionIdRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/~play/~chat/~$sessionId/~debug.lazy').then((d) => d.Route),
)

const ComsComIdViewSubComIdRouteLazyRoute =
  ComsComIdViewSubComIdRouteLazyImport.update({
    id: '/$subComId',
    path: '/$subComId',
    getParentRoute: () => ComsComIdViewRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~view/~$subComId/~route.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTypeInstagramTeamLazyRoute =
  ComsComIdTypeInstagramTeamLazyImport.update({
    id: '/instagramTeam',
    path: '/instagramTeam',
    getParentRoute: () => ComsComIdTypeRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~type/~instagramTeam.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTypeAssisantLazyRoute = ComsComIdTypeAssisantLazyImport.update({
  id: '/assisant',
  path: '/assisant',
  getParentRoute: () => ComsComIdTypeRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~type/~assisant.lazy').then((d) => d.Route),
)

const WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute =
  WorkflowRunsWorkflowRunIdVisualizationIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~visualization/~index.lazy'
    ).then((d) => d.Route),
  )

const WorkflowRunsWorkflowRunIdChatIndexLazyRoute =
  WorkflowRunsWorkflowRunIdChatIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorkflowRunsWorkflowRunIdChatRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~workflow-runs/~$workflowRunId/~chat/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const TeamTeamIdNewIndexLazyRoute = TeamTeamIdNewIndexLazyImport.update({
  id: '/new/',
  path: '/new/',
  getParentRoute: () => TeamTeamIdRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~team/~$teamId/~new/~index.lazy').then((d) => d.Route),
)

const ResourceNewResIndexLazyRoute = ResourceNewResIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ResourceNewResRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~resource/~new/~res/~index.lazy').then((d) => d.Route),
)

const ResourceResIdSessionIdIndexLazyRoute =
  ResourceResIdSessionIdIndexLazyImport.update({
    id: '/$sessionId/',
    path: '/$sessionId/',
    getParentRoute: () => ResourceResIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~resource/~$resId/~$sessionId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdTeambuilderIndexLazyRoute =
  ComsComIdTeambuilderIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdTeambuilderRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~team_builder/~index.lazy').then(
      (d) => d.Route,
    ),
  )

const ComsComIdSessionIndexLazyRoute = ComsComIdSessionIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ComsComIdSessionRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~session/~index.lazy').then((d) => d.Route),
)

const ComsComIdRunIndexLazyRoute = ComsComIdRunIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ComsComIdRunRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/~coms/~$comId/~run/~index.lazy').then((d) => d.Route),
)

const ComsComIdTypeModelClientRoute = ComsComIdTypeModelClientImport.update({
  id: '/modelClient',
  path: '/modelClient',
  getParentRoute: () => ComsComIdTypeRouteLazyRoute,
} as any)

const SiteSiteIdHostIndexRoute = SiteSiteIdHostIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SiteSiteIdHostRouteRoute,
} as any)

const PlayChatSessionIdIndexRoute = PlayChatSessionIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PlayChatSessionIdRouteLazyRoute,
} as any)

const WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute =
  WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~index.lazy'
    ).then((d) => d.Route),
  )

const ComsComIdViewSubComIdIndexLazyRoute =
  ComsComIdViewSubComIdIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ComsComIdViewSubComIdRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~coms/~$comId/~view/~$subComId/~index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/agEvents': {
      id: '/agEvents'
      path: '/agEvents'
      fullPath: '/agEvents'
      preLoaderRoute: typeof AgEventsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/ag_state': {
      id: '/ag_state'
      path: '/ag_state'
      fullPath: '/ag_state'
      preLoaderRoute: typeof AgstateRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/coms': {
      id: '/coms'
      path: '/coms'
      fullPath: '/coms'
      preLoaderRoute: typeof ComsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/endpoint': {
      id: '/endpoint'
      path: '/endpoint'
      fullPath: '/endpoint'
      preLoaderRoute: typeof EndpointRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/envs': {
      id: '/envs'
      path: '/envs'
      fullPath: '/envs'
      preLoaderRoute: typeof EnvsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/model': {
      id: '/model'
      path: '/model'
      fullPath: '/model'
      preLoaderRoute: typeof ModelRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/platform': {
      id: '/platform'
      path: '/platform'
      fullPath: '/platform'
      preLoaderRoute: typeof PlatformRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/platform-account': {
      id: '/platform-account'
      path: '/platform-account'
      fullPath: '/platform-account'
      preLoaderRoute: typeof PlatformAccountRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/play': {
      id: '/play'
      path: '/play'
      fullPath: '/play'
      preLoaderRoute: typeof PlayRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/resource': {
      id: '/resource'
      path: '/resource'
      fullPath: '/resource'
      preLoaderRoute: typeof ResourceRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/session': {
      id: '/session'
      path: '/session'
      fullPath: '/session'
      preLoaderRoute: typeof SessionRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/site': {
      id: '/site'
      path: '/site'
      fullPath: '/site'
      preLoaderRoute: typeof SiteRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/team': {
      id: '/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/tenant_settings': {
      id: '/tenant_settings'
      path: '/tenant_settings'
      fullPath: '/tenant_settings'
      preLoaderRoute: typeof TenantsettingsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/trigger': {
      id: '/trigger'
      path: '/trigger'
      fullPath: '/trigger'
      preLoaderRoute: typeof TriggerRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/workflow-runs': {
      id: '/workflow-runs'
      path: '/workflow-runs'
      fullPath: '/workflow-runs'
      preLoaderRoute: typeof WorkflowRunsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/workflows': {
      id: '/workflows'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/platform/': {
      id: '/platform/'
      path: '/'
      fullPath: '/platform/'
      preLoaderRoute: typeof PlatformIndexImport
      parentRoute: typeof PlatformRouteLazyImport
    }
    '/site/': {
      id: '/site/'
      path: '/'
      fullPath: '/site/'
      preLoaderRoute: typeof SiteIndexImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/envs/create': {
      id: '/envs/create'
      path: '/create'
      fullPath: '/envs/create'
      preLoaderRoute: typeof EnvsCreateImport
      parentRoute: typeof EnvsRouteLazyImport
    }
    '/site/$siteId': {
      id: '/site/$siteId'
      path: '/$siteId'
      fullPath: '/site/$siteId'
      preLoaderRoute: typeof SiteSiteIdRouteImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/trigger/ag': {
      id: '/trigger/ag'
      path: '/ag'
      fullPath: '/trigger/ag'
      preLoaderRoute: typeof TriggerAgImport
      parentRoute: typeof TriggerRouteLazyImport
    }
    '/agEvents/': {
      id: '/agEvents/'
      path: '/'
      fullPath: '/agEvents/'
      preLoaderRoute: typeof AgEventsIndexLazyImport
      parentRoute: typeof AgEventsRouteLazyImport
    }
    '/coms/': {
      id: '/coms/'
      path: '/'
      fullPath: '/coms/'
      preLoaderRoute: typeof ComsIndexLazyImport
      parentRoute: typeof ComsRouteLazyImport
    }
    '/endpoint/': {
      id: '/endpoint/'
      path: '/'
      fullPath: '/endpoint/'
      preLoaderRoute: typeof EndpointIndexLazyImport
      parentRoute: typeof EndpointRouteLazyImport
    }
    '/envs/': {
      id: '/envs/'
      path: '/'
      fullPath: '/envs/'
      preLoaderRoute: typeof EnvsIndexLazyImport
      parentRoute: typeof EnvsRouteLazyImport
    }
    '/events/': {
      id: '/events/'
      path: '/'
      fullPath: '/events/'
      preLoaderRoute: typeof EventsIndexLazyImport
      parentRoute: typeof EventsRouteLazyImport
    }
    '/gallery/': {
      id: '/gallery/'
      path: '/'
      fullPath: '/gallery/'
      preLoaderRoute: typeof GalleryIndexLazyImport
      parentRoute: typeof GalleryRouteLazyImport
    }
    '/model/': {
      id: '/model/'
      path: '/'
      fullPath: '/model/'
      preLoaderRoute: typeof ModelIndexLazyImport
      parentRoute: typeof ModelRouteLazyImport
    }
    '/platform-account/': {
      id: '/platform-account/'
      path: '/'
      fullPath: '/platform-account/'
      preLoaderRoute: typeof PlatformAccountIndexLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/play/': {
      id: '/play/'
      path: '/'
      fullPath: '/play/'
      preLoaderRoute: typeof PlayIndexLazyImport
      parentRoute: typeof PlayRouteLazyImport
    }
    '/post/': {
      id: '/post/'
      path: '/'
      fullPath: '/post/'
      preLoaderRoute: typeof PostIndexLazyImport
      parentRoute: typeof PostRouteLazyImport
    }
    '/resource/': {
      id: '/resource/'
      path: '/'
      fullPath: '/resource/'
      preLoaderRoute: typeof ResourceIndexLazyImport
      parentRoute: typeof ResourceRouteLazyImport
    }
    '/session/': {
      id: '/session/'
      path: '/'
      fullPath: '/session/'
      preLoaderRoute: typeof SessionIndexLazyImport
      parentRoute: typeof SessionRouteLazyImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof SettingsIndexLazyImport
      parentRoute: typeof SettingsRouteLazyImport
    }
    '/team/': {
      id: '/team/'
      path: '/'
      fullPath: '/team/'
      preLoaderRoute: typeof TeamIndexLazyImport
      parentRoute: typeof TeamRouteLazyImport
    }
    '/tenant_settings/': {
      id: '/tenant_settings/'
      path: '/'
      fullPath: '/tenant_settings/'
      preLoaderRoute: typeof TenantsettingsIndexLazyImport
      parentRoute: typeof TenantsettingsRouteLazyImport
    }
    '/workflow-runs/': {
      id: '/workflow-runs/'
      path: '/'
      fullPath: '/workflow-runs/'
      preLoaderRoute: typeof WorkflowRunsIndexLazyImport
      parentRoute: typeof WorkflowRunsRouteLazyImport
    }
    '/workflows/': {
      id: '/workflows/'
      path: '/'
      fullPath: '/workflows/'
      preLoaderRoute: typeof WorkflowsIndexLazyImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof AuthRouteLazyImport
    }
    '/coms/$comId': {
      id: '/coms/$comId'
      path: '/$comId'
      fullPath: '/coms/$comId'
      preLoaderRoute: typeof ComsComIdRouteLazyImport
      parentRoute: typeof ComsRouteLazyImport
    }
    '/coms/new': {
      id: '/coms/new'
      path: '/new'
      fullPath: '/coms/new'
      preLoaderRoute: typeof ComsNewRouteLazyImport
      parentRoute: typeof ComsRouteLazyImport
    }
    '/gallery/$galleryId': {
      id: '/gallery/$galleryId'
      path: '/$galleryId'
      fullPath: '/gallery/$galleryId'
      preLoaderRoute: typeof GalleryGalleryIdRouteLazyImport
      parentRoute: typeof GalleryRouteLazyImport
    }
    '/platform-account/$platformAccountId': {
      id: '/platform-account/$platformAccountId'
      path: '/$platformAccountId'
      fullPath: '/platform-account/$platformAccountId'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdRouteLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/platform-account/create': {
      id: '/platform-account/create'
      path: '/create'
      fullPath: '/platform-account/create'
      preLoaderRoute: typeof PlatformAccountCreateLazyImport
      parentRoute: typeof PlatformAccountRouteLazyImport
    }
    '/play/chat': {
      id: '/play/chat'
      path: '/chat'
      fullPath: '/play/chat'
      preLoaderRoute: typeof PlayChatRouteLazyImport
      parentRoute: typeof PlayRouteLazyImport
    }
    '/post/create': {
      id: '/post/create'
      path: '/create'
      fullPath: '/post/create'
      preLoaderRoute: typeof PostCreateLazyImport
      parentRoute: typeof PostRouteLazyImport
    }
    '/resource/$resId': {
      id: '/resource/$resId'
      path: '/$resId'
      fullPath: '/resource/$resId'
      preLoaderRoute: typeof ResourceResIdRouteLazyImport
      parentRoute: typeof ResourceRouteLazyImport
    }
    '/resource/new': {
      id: '/resource/new'
      path: '/new'
      fullPath: '/resource/new'
      preLoaderRoute: typeof ResourceNewRouteLazyImport
      parentRoute: typeof ResourceRouteLazyImport
    }
    '/session/$ssessionId': {
      id: '/session/$ssessionId'
      path: '/$ssessionId'
      fullPath: '/session/$ssessionId'
      preLoaderRoute: typeof SessionSsessionIdRouteLazyImport
      parentRoute: typeof SessionRouteLazyImport
    }
    '/team/$teamId': {
      id: '/team/$teamId'
      path: '/$teamId'
      fullPath: '/team/$teamId'
      preLoaderRoute: typeof TeamTeamIdRouteLazyImport
      parentRoute: typeof TeamRouteLazyImport
    }
    '/tenant_settings/$tenantSettingId': {
      id: '/tenant_settings/$tenantSettingId'
      path: '/$tenantSettingId'
      fullPath: '/tenant_settings/$tenantSettingId'
      preLoaderRoute: typeof TenantsettingsTenantSettingIdRouteLazyImport
      parentRoute: typeof TenantsettingsRouteLazyImport
    }
    '/tenant_settings/model_client_settings': {
      id: '/tenant_settings/model_client_settings'
      path: '/model_client_settings'
      fullPath: '/tenant_settings/model_client_settings'
      preLoaderRoute: typeof TenantsettingsModelclientsettingsRouteLazyImport
      parentRoute: typeof TenantsettingsRouteLazyImport
    }
    '/trigger/$id': {
      id: '/trigger/$id'
      path: '/$id'
      fullPath: '/trigger/$id'
      preLoaderRoute: typeof TriggerIdLazyImport
      parentRoute: typeof TriggerRouteLazyImport
    }
    '/workflow-runs/$workflowRunId': {
      id: '/workflow-runs/$workflowRunId'
      path: '/$workflowRunId'
      fullPath: '/workflow-runs/$workflowRunId'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
      parentRoute: typeof WorkflowRunsRouteLazyImport
    }
    '/workflows/$workflowId': {
      id: '/workflows/$workflowId'
      path: '/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof WorkflowsWorkflowIdLazyImport
      parentRoute: typeof WorkflowsRouteLazyImport
    }
    '/onboarding/create-tenant/': {
      id: '/onboarding/create-tenant/'
      path: '/onboarding/create-tenant'
      fullPath: '/onboarding/create-tenant'
      preLoaderRoute: typeof OnboardingCreateTenantIndexImport
      parentRoute: typeof rootRoute
    }
    '/site/$siteId/': {
      id: '/site/$siteId/'
      path: '/'
      fullPath: '/site/$siteId/'
      preLoaderRoute: typeof SiteSiteIdIndexImport
      parentRoute: typeof SiteSiteIdRouteImport
    }
    '/site/create/': {
      id: '/site/create/'
      path: '/create'
      fullPath: '/site/create'
      preLoaderRoute: typeof SiteCreateIndexImport
      parentRoute: typeof SiteRouteLazyImport
    }
    '/site/$siteId/edit': {
      id: '/site/$siteId/edit'
      path: '/edit'
      fullPath: '/site/$siteId/edit'
      preLoaderRoute: typeof SiteSiteIdEditImport
      parentRoute: typeof SiteSiteIdRouteImport
    }
    '/site/$siteId/host': {
      id: '/site/$siteId/host'
      path: '/host'
      fullPath: '/site/$siteId/host'
      preLoaderRoute: typeof SiteSiteIdHostRouteImport
      parentRoute: typeof SiteSiteIdRouteImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/'
      fullPath: '/auth/login/'
      preLoaderRoute: typeof AuthLoginIndexLazyImport
      parentRoute: typeof AuthLoginRouteLazyImport
    }
    '/coms/$comId/': {
      id: '/coms/$comId/'
      path: '/'
      fullPath: '/coms/$comId/'
      preLoaderRoute: typeof ComsComIdIndexLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/platform-account/$platformAccountId/': {
      id: '/platform-account/$platformAccountId/'
      path: '/'
      fullPath: '/platform-account/$platformAccountId/'
      preLoaderRoute: typeof PlatformAccountPlatformAccountIdIndexLazyImport
      parentRoute: typeof PlatformAccountPlatformAccountIdRouteLazyImport
    }
    '/play/chat/': {
      id: '/play/chat/'
      path: '/'
      fullPath: '/play/chat/'
      preLoaderRoute: typeof PlayChatIndexLazyImport
      parentRoute: typeof PlayChatRouteLazyImport
    }
    '/resource/$resId/': {
      id: '/resource/$resId/'
      path: '/'
      fullPath: '/resource/$resId/'
      preLoaderRoute: typeof ResourceResIdIndexLazyImport
      parentRoute: typeof ResourceResIdRouteLazyImport
    }
    '/session/$ssessionId/': {
      id: '/session/$ssessionId/'
      path: '/'
      fullPath: '/session/$ssessionId/'
      preLoaderRoute: typeof SessionSsessionIdIndexLazyImport
      parentRoute: typeof SessionSsessionIdRouteLazyImport
    }
    '/tenant_settings/$tenantSettingId/': {
      id: '/tenant_settings/$tenantSettingId/'
      path: '/'
      fullPath: '/tenant_settings/$tenantSettingId/'
      preLoaderRoute: typeof TenantsettingsTenantSettingIdIndexLazyImport
      parentRoute: typeof TenantsettingsTenantSettingIdRouteLazyImport
    }
    '/tenant_settings/model_client_settings/': {
      id: '/tenant_settings/model_client_settings/'
      path: '/'
      fullPath: '/tenant_settings/model_client_settings/'
      preLoaderRoute: typeof TenantsettingsModelclientsettingsIndexLazyImport
      parentRoute: typeof TenantsettingsModelclientsettingsRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/': {
      id: '/workflow-runs/$workflowRunId/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/coms/$comId/run': {
      id: '/coms/$comId/run'
      path: '/run'
      fullPath: '/coms/$comId/run'
      preLoaderRoute: typeof ComsComIdRunRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/session': {
      id: '/coms/$comId/session'
      path: '/session'
      fullPath: '/coms/$comId/session'
      preLoaderRoute: typeof ComsComIdSessionRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/team_builder': {
      id: '/coms/$comId/team_builder'
      path: '/team_builder'
      fullPath: '/coms/$comId/team_builder'
      preLoaderRoute: typeof ComsComIdTeambuilderRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/type': {
      id: '/coms/$comId/type'
      path: '/type'
      fullPath: '/coms/$comId/type'
      preLoaderRoute: typeof ComsComIdTypeRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/$comId/view': {
      id: '/coms/$comId/view'
      path: '/view'
      fullPath: '/coms/$comId/view'
      preLoaderRoute: typeof ComsComIdViewRouteLazyImport
      parentRoute: typeof ComsComIdRouteLazyImport
    }
    '/coms/new/instagram_team': {
      id: '/coms/new/instagram_team'
      path: '/instagram_team'
      fullPath: '/coms/new/instagram_team'
      preLoaderRoute: typeof ComsNewInstagramteamLazyImport
      parentRoute: typeof ComsNewRouteLazyImport
    }
    '/play/chat/$sessionId': {
      id: '/play/chat/$sessionId'
      path: '/$sessionId'
      fullPath: '/play/chat/$sessionId'
      preLoaderRoute: typeof PlayChatSessionIdRouteLazyImport
      parentRoute: typeof PlayChatRouteLazyImport
    }
    '/resource/new/res': {
      id: '/resource/new/res'
      path: '/res'
      fullPath: '/resource/new/res'
      preLoaderRoute: typeof ResourceNewResRouteLazyImport
      parentRoute: typeof ResourceNewRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/additional-metadata': {
      id: '/workflow-runs/$workflowRunId/additional-metadata'
      path: '/additional-metadata'
      fullPath: '/workflow-runs/$workflowRunId/additional-metadata'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/chat': {
      id: '/workflow-runs/$workflowRunId/chat'
      path: '/chat'
      fullPath: '/workflow-runs/$workflowRunId/chat'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdChatRouteLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/input': {
      id: '/workflow-runs/$workflowRunId/input'
      path: '/input'
      fullPath: '/workflow-runs/$workflowRunId/input'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdInputLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/summary': {
      id: '/workflow-runs/$workflowRunId/summary'
      path: '/summary'
      fullPath: '/workflow-runs/$workflowRunId/summary'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdSummaryLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/visualization': {
      id: '/workflow-runs/$workflowRunId/visualization'
      path: '/visualization'
      fullPath: '/workflow-runs/$workflowRunId/visualization'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/play/chat/$sessionId/': {
      id: '/play/chat/$sessionId/'
      path: '/'
      fullPath: '/play/chat/$sessionId/'
      preLoaderRoute: typeof PlayChatSessionIdIndexImport
      parentRoute: typeof PlayChatSessionIdRouteLazyImport
    }
    '/site/$siteId/host/': {
      id: '/site/$siteId/host/'
      path: '/'
      fullPath: '/site/$siteId/host/'
      preLoaderRoute: typeof SiteSiteIdHostIndexImport
      parentRoute: typeof SiteSiteIdHostRouteImport
    }
    '/coms/$comId/type/modelClient': {
      id: '/coms/$comId/type/modelClient'
      path: '/modelClient'
      fullPath: '/coms/$comId/type/modelClient'
      preLoaderRoute: typeof ComsComIdTypeModelClientImport
      parentRoute: typeof ComsComIdTypeRouteLazyImport
    }
    '/coms/$comId/run/': {
      id: '/coms/$comId/run/'
      path: '/'
      fullPath: '/coms/$comId/run/'
      preLoaderRoute: typeof ComsComIdRunIndexLazyImport
      parentRoute: typeof ComsComIdRunRouteLazyImport
    }
    '/coms/$comId/session/': {
      id: '/coms/$comId/session/'
      path: '/'
      fullPath: '/coms/$comId/session/'
      preLoaderRoute: typeof ComsComIdSessionIndexLazyImport
      parentRoute: typeof ComsComIdSessionRouteLazyImport
    }
    '/coms/$comId/team_builder/': {
      id: '/coms/$comId/team_builder/'
      path: '/'
      fullPath: '/coms/$comId/team_builder/'
      preLoaderRoute: typeof ComsComIdTeambuilderIndexLazyImport
      parentRoute: typeof ComsComIdTeambuilderRouteLazyImport
    }
    '/resource/$resId/$sessionId/': {
      id: '/resource/$resId/$sessionId/'
      path: '/$sessionId'
      fullPath: '/resource/$resId/$sessionId'
      preLoaderRoute: typeof ResourceResIdSessionIdIndexLazyImport
      parentRoute: typeof ResourceResIdRouteLazyImport
    }
    '/resource/new/res/': {
      id: '/resource/new/res/'
      path: '/'
      fullPath: '/resource/new/res/'
      preLoaderRoute: typeof ResourceNewResIndexLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/team/$teamId/new/': {
      id: '/team/$teamId/new/'
      path: '/new'
      fullPath: '/team/$teamId/new'
      preLoaderRoute: typeof TeamTeamIdNewIndexLazyImport
      parentRoute: typeof TeamTeamIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/chat/': {
      id: '/workflow-runs/$workflowRunId/chat/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/chat/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdChatIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdChatRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/visualization/': {
      id: '/workflow-runs/$workflowRunId/visualization/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/visualization/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyImport
    }
    '/coms/$comId/type/assisant': {
      id: '/coms/$comId/type/assisant'
      path: '/assisant'
      fullPath: '/coms/$comId/type/assisant'
      preLoaderRoute: typeof ComsComIdTypeAssisantLazyImport
      parentRoute: typeof ComsComIdTypeRouteLazyImport
    }
    '/coms/$comId/type/instagramTeam': {
      id: '/coms/$comId/type/instagramTeam'
      path: '/instagramTeam'
      fullPath: '/coms/$comId/type/instagramTeam'
      preLoaderRoute: typeof ComsComIdTypeInstagramTeamLazyImport
      parentRoute: typeof ComsComIdTypeRouteLazyImport
    }
    '/coms/$comId/view/$subComId': {
      id: '/coms/$comId/view/$subComId'
      path: '/$subComId'
      fullPath: '/coms/$comId/view/$subComId'
      preLoaderRoute: typeof ComsComIdViewSubComIdRouteLazyImport
      parentRoute: typeof ComsComIdViewRouteLazyImport
    }
    '/play/chat/$sessionId/debug': {
      id: '/play/chat/$sessionId/debug'
      path: '/debug'
      fullPath: '/play/chat/$sessionId/debug'
      preLoaderRoute: typeof PlayChatSessionIdDebugLazyImport
      parentRoute: typeof PlayChatSessionIdRouteLazyImport
    }
    '/play/chat/$sessionId/edit': {
      id: '/play/chat/$sessionId/edit'
      path: '/edit'
      fullPath: '/play/chat/$sessionId/edit'
      preLoaderRoute: typeof PlayChatSessionIdEditLazyImport
      parentRoute: typeof PlayChatSessionIdRouteLazyImport
    }
    '/play/chat/$sessionId/result': {
      id: '/play/chat/$sessionId/result'
      path: '/result'
      fullPath: '/play/chat/$sessionId/result'
      preLoaderRoute: typeof PlayChatSessionIdResultLazyImport
      parentRoute: typeof PlayChatSessionIdRouteLazyImport
    }
    '/play/chat/$sessionId/state': {
      id: '/play/chat/$sessionId/state'
      path: '/state'
      fullPath: '/play/chat/$sessionId/state'
      preLoaderRoute: typeof PlayChatSessionIdStateLazyImport
      parentRoute: typeof PlayChatSessionIdRouteLazyImport
    }
    '/play/chat/$sessionId/team': {
      id: '/play/chat/$sessionId/team'
      path: '/team'
      fullPath: '/play/chat/$sessionId/team'
      preLoaderRoute: typeof PlayChatSessionIdTeamLazyImport
      parentRoute: typeof PlayChatSessionIdRouteLazyImport
    }
    '/resource/new/res/browser': {
      id: '/resource/new/res/browser'
      path: '/browser'
      fullPath: '/resource/new/res/browser'
      preLoaderRoute: typeof ResourceNewResBrowserLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/resource/new/res/chat': {
      id: '/resource/new/res/chat'
      path: '/chat'
      fullPath: '/resource/new/res/chat'
      preLoaderRoute: typeof ResourceNewResChatLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/resource/new/res/platform_account': {
      id: '/resource/new/res/platform_account'
      path: '/platform_account'
      fullPath: '/resource/new/res/platform_account'
      preLoaderRoute: typeof ResourceNewResPlatformaccountLazyImport
      parentRoute: typeof ResourceNewResRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/stepRun/$stepRunId': {
      id: '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
      path: '/stepRun/$stepRunId'
      fullPath: '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyImport
    }
    '/coms/$comId/view/$subComId/': {
      id: '/coms/$comId/view/$subComId/'
      path: '/'
      fullPath: '/coms/$comId/view/$subComId/'
      preLoaderRoute: typeof ComsComIdViewSubComIdIndexLazyImport
      parentRoute: typeof ComsComIdViewSubComIdRouteLazyImport
    }
    '/workflow-runs/$workflowRunId/stepRun/$stepRunId/': {
      id: '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
      path: '/'
      fullPath: '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
      preLoaderRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyImport
      parentRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyImport
    }
  }
}

// Create and export the route tree

interface AgEventsRouteLazyRouteChildren {
  AgEventsIndexLazyRoute: typeof AgEventsIndexLazyRoute
}

const AgEventsRouteLazyRouteChildren: AgEventsRouteLazyRouteChildren = {
  AgEventsIndexLazyRoute: AgEventsIndexLazyRoute,
}

const AgEventsRouteLazyRouteWithChildren =
  AgEventsRouteLazyRoute._addFileChildren(AgEventsRouteLazyRouteChildren)

interface AuthLoginRouteLazyRouteChildren {
  AuthLoginIndexLazyRoute: typeof AuthLoginIndexLazyRoute
}

const AuthLoginRouteLazyRouteChildren: AuthLoginRouteLazyRouteChildren = {
  AuthLoginIndexLazyRoute: AuthLoginIndexLazyRoute,
}

const AuthLoginRouteLazyRouteWithChildren =
  AuthLoginRouteLazyRoute._addFileChildren(AuthLoginRouteLazyRouteChildren)

interface AuthRouteLazyRouteChildren {
  AuthLoginRouteLazyRoute: typeof AuthLoginRouteLazyRouteWithChildren
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
}

const AuthRouteLazyRouteChildren: AuthRouteLazyRouteChildren = {
  AuthLoginRouteLazyRoute: AuthLoginRouteLazyRouteWithChildren,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
}

const AuthRouteLazyRouteWithChildren = AuthRouteLazyRoute._addFileChildren(
  AuthRouteLazyRouteChildren,
)

interface ComsComIdRunRouteLazyRouteChildren {
  ComsComIdRunIndexLazyRoute: typeof ComsComIdRunIndexLazyRoute
}

const ComsComIdRunRouteLazyRouteChildren: ComsComIdRunRouteLazyRouteChildren = {
  ComsComIdRunIndexLazyRoute: ComsComIdRunIndexLazyRoute,
}

const ComsComIdRunRouteLazyRouteWithChildren =
  ComsComIdRunRouteLazyRoute._addFileChildren(
    ComsComIdRunRouteLazyRouteChildren,
  )

interface ComsComIdSessionRouteLazyRouteChildren {
  ComsComIdSessionIndexLazyRoute: typeof ComsComIdSessionIndexLazyRoute
}

const ComsComIdSessionRouteLazyRouteChildren: ComsComIdSessionRouteLazyRouteChildren =
  {
    ComsComIdSessionIndexLazyRoute: ComsComIdSessionIndexLazyRoute,
  }

const ComsComIdSessionRouteLazyRouteWithChildren =
  ComsComIdSessionRouteLazyRoute._addFileChildren(
    ComsComIdSessionRouteLazyRouteChildren,
  )

interface ComsComIdTeambuilderRouteLazyRouteChildren {
  ComsComIdTeambuilderIndexLazyRoute: typeof ComsComIdTeambuilderIndexLazyRoute
}

const ComsComIdTeambuilderRouteLazyRouteChildren: ComsComIdTeambuilderRouteLazyRouteChildren =
  {
    ComsComIdTeambuilderIndexLazyRoute: ComsComIdTeambuilderIndexLazyRoute,
  }

const ComsComIdTeambuilderRouteLazyRouteWithChildren =
  ComsComIdTeambuilderRouteLazyRoute._addFileChildren(
    ComsComIdTeambuilderRouteLazyRouteChildren,
  )

interface ComsComIdTypeRouteLazyRouteChildren {
  ComsComIdTypeModelClientRoute: typeof ComsComIdTypeModelClientRoute
  ComsComIdTypeAssisantLazyRoute: typeof ComsComIdTypeAssisantLazyRoute
  ComsComIdTypeInstagramTeamLazyRoute: typeof ComsComIdTypeInstagramTeamLazyRoute
}

const ComsComIdTypeRouteLazyRouteChildren: ComsComIdTypeRouteLazyRouteChildren =
  {
    ComsComIdTypeModelClientRoute: ComsComIdTypeModelClientRoute,
    ComsComIdTypeAssisantLazyRoute: ComsComIdTypeAssisantLazyRoute,
    ComsComIdTypeInstagramTeamLazyRoute: ComsComIdTypeInstagramTeamLazyRoute,
  }

const ComsComIdTypeRouteLazyRouteWithChildren =
  ComsComIdTypeRouteLazyRoute._addFileChildren(
    ComsComIdTypeRouteLazyRouteChildren,
  )

interface ComsComIdViewSubComIdRouteLazyRouteChildren {
  ComsComIdViewSubComIdIndexLazyRoute: typeof ComsComIdViewSubComIdIndexLazyRoute
}

const ComsComIdViewSubComIdRouteLazyRouteChildren: ComsComIdViewSubComIdRouteLazyRouteChildren =
  {
    ComsComIdViewSubComIdIndexLazyRoute: ComsComIdViewSubComIdIndexLazyRoute,
  }

const ComsComIdViewSubComIdRouteLazyRouteWithChildren =
  ComsComIdViewSubComIdRouteLazyRoute._addFileChildren(
    ComsComIdViewSubComIdRouteLazyRouteChildren,
  )

interface ComsComIdViewRouteLazyRouteChildren {
  ComsComIdViewSubComIdRouteLazyRoute: typeof ComsComIdViewSubComIdRouteLazyRouteWithChildren
}

const ComsComIdViewRouteLazyRouteChildren: ComsComIdViewRouteLazyRouteChildren =
  {
    ComsComIdViewSubComIdRouteLazyRoute:
      ComsComIdViewSubComIdRouteLazyRouteWithChildren,
  }

const ComsComIdViewRouteLazyRouteWithChildren =
  ComsComIdViewRouteLazyRoute._addFileChildren(
    ComsComIdViewRouteLazyRouteChildren,
  )

interface ComsComIdRouteLazyRouteChildren {
  ComsComIdIndexLazyRoute: typeof ComsComIdIndexLazyRoute
  ComsComIdRunRouteLazyRoute: typeof ComsComIdRunRouteLazyRouteWithChildren
  ComsComIdSessionRouteLazyRoute: typeof ComsComIdSessionRouteLazyRouteWithChildren
  ComsComIdTeambuilderRouteLazyRoute: typeof ComsComIdTeambuilderRouteLazyRouteWithChildren
  ComsComIdTypeRouteLazyRoute: typeof ComsComIdTypeRouteLazyRouteWithChildren
  ComsComIdViewRouteLazyRoute: typeof ComsComIdViewRouteLazyRouteWithChildren
}

const ComsComIdRouteLazyRouteChildren: ComsComIdRouteLazyRouteChildren = {
  ComsComIdIndexLazyRoute: ComsComIdIndexLazyRoute,
  ComsComIdRunRouteLazyRoute: ComsComIdRunRouteLazyRouteWithChildren,
  ComsComIdSessionRouteLazyRoute: ComsComIdSessionRouteLazyRouteWithChildren,
  ComsComIdTeambuilderRouteLazyRoute:
    ComsComIdTeambuilderRouteLazyRouteWithChildren,
  ComsComIdTypeRouteLazyRoute: ComsComIdTypeRouteLazyRouteWithChildren,
  ComsComIdViewRouteLazyRoute: ComsComIdViewRouteLazyRouteWithChildren,
}

const ComsComIdRouteLazyRouteWithChildren =
  ComsComIdRouteLazyRoute._addFileChildren(ComsComIdRouteLazyRouteChildren)

interface ComsNewRouteLazyRouteChildren {
  ComsNewInstagramteamLazyRoute: typeof ComsNewInstagramteamLazyRoute
}

const ComsNewRouteLazyRouteChildren: ComsNewRouteLazyRouteChildren = {
  ComsNewInstagramteamLazyRoute: ComsNewInstagramteamLazyRoute,
}

const ComsNewRouteLazyRouteWithChildren =
  ComsNewRouteLazyRoute._addFileChildren(ComsNewRouteLazyRouteChildren)

interface ComsRouteLazyRouteChildren {
  ComsIndexLazyRoute: typeof ComsIndexLazyRoute
  ComsComIdRouteLazyRoute: typeof ComsComIdRouteLazyRouteWithChildren
  ComsNewRouteLazyRoute: typeof ComsNewRouteLazyRouteWithChildren
}

const ComsRouteLazyRouteChildren: ComsRouteLazyRouteChildren = {
  ComsIndexLazyRoute: ComsIndexLazyRoute,
  ComsComIdRouteLazyRoute: ComsComIdRouteLazyRouteWithChildren,
  ComsNewRouteLazyRoute: ComsNewRouteLazyRouteWithChildren,
}

const ComsRouteLazyRouteWithChildren = ComsRouteLazyRoute._addFileChildren(
  ComsRouteLazyRouteChildren,
)

interface EndpointRouteLazyRouteChildren {
  EndpointIndexLazyRoute: typeof EndpointIndexLazyRoute
}

const EndpointRouteLazyRouteChildren: EndpointRouteLazyRouteChildren = {
  EndpointIndexLazyRoute: EndpointIndexLazyRoute,
}

const EndpointRouteLazyRouteWithChildren =
  EndpointRouteLazyRoute._addFileChildren(EndpointRouteLazyRouteChildren)

interface EnvsRouteLazyRouteChildren {
  EnvsCreateRoute: typeof EnvsCreateRoute
  EnvsIndexLazyRoute: typeof EnvsIndexLazyRoute
}

const EnvsRouteLazyRouteChildren: EnvsRouteLazyRouteChildren = {
  EnvsCreateRoute: EnvsCreateRoute,
  EnvsIndexLazyRoute: EnvsIndexLazyRoute,
}

const EnvsRouteLazyRouteWithChildren = EnvsRouteLazyRoute._addFileChildren(
  EnvsRouteLazyRouteChildren,
)

interface EventsRouteLazyRouteChildren {
  EventsIndexLazyRoute: typeof EventsIndexLazyRoute
}

const EventsRouteLazyRouteChildren: EventsRouteLazyRouteChildren = {
  EventsIndexLazyRoute: EventsIndexLazyRoute,
}

const EventsRouteLazyRouteWithChildren = EventsRouteLazyRoute._addFileChildren(
  EventsRouteLazyRouteChildren,
)

interface GalleryRouteLazyRouteChildren {
  GalleryIndexLazyRoute: typeof GalleryIndexLazyRoute
  GalleryGalleryIdRouteLazyRoute: typeof GalleryGalleryIdRouteLazyRoute
}

const GalleryRouteLazyRouteChildren: GalleryRouteLazyRouteChildren = {
  GalleryIndexLazyRoute: GalleryIndexLazyRoute,
  GalleryGalleryIdRouteLazyRoute: GalleryGalleryIdRouteLazyRoute,
}

const GalleryRouteLazyRouteWithChildren =
  GalleryRouteLazyRoute._addFileChildren(GalleryRouteLazyRouteChildren)

interface ModelRouteLazyRouteChildren {
  ModelIndexLazyRoute: typeof ModelIndexLazyRoute
}

const ModelRouteLazyRouteChildren: ModelRouteLazyRouteChildren = {
  ModelIndexLazyRoute: ModelIndexLazyRoute,
}

const ModelRouteLazyRouteWithChildren = ModelRouteLazyRoute._addFileChildren(
  ModelRouteLazyRouteChildren,
)

interface PlatformRouteLazyRouteChildren {
  PlatformIndexRoute: typeof PlatformIndexRoute
}

const PlatformRouteLazyRouteChildren: PlatformRouteLazyRouteChildren = {
  PlatformIndexRoute: PlatformIndexRoute,
}

const PlatformRouteLazyRouteWithChildren =
  PlatformRouteLazyRoute._addFileChildren(PlatformRouteLazyRouteChildren)

interface PlatformAccountPlatformAccountIdRouteLazyRouteChildren {
  PlatformAccountPlatformAccountIdIndexLazyRoute: typeof PlatformAccountPlatformAccountIdIndexLazyRoute
}

const PlatformAccountPlatformAccountIdRouteLazyRouteChildren: PlatformAccountPlatformAccountIdRouteLazyRouteChildren =
  {
    PlatformAccountPlatformAccountIdIndexLazyRoute:
      PlatformAccountPlatformAccountIdIndexLazyRoute,
  }

const PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren =
  PlatformAccountPlatformAccountIdRouteLazyRoute._addFileChildren(
    PlatformAccountPlatformAccountIdRouteLazyRouteChildren,
  )

interface PlatformAccountRouteLazyRouteChildren {
  PlatformAccountIndexLazyRoute: typeof PlatformAccountIndexLazyRoute
  PlatformAccountPlatformAccountIdRouteLazyRoute: typeof PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren
  PlatformAccountCreateLazyRoute: typeof PlatformAccountCreateLazyRoute
}

const PlatformAccountRouteLazyRouteChildren: PlatformAccountRouteLazyRouteChildren =
  {
    PlatformAccountIndexLazyRoute: PlatformAccountIndexLazyRoute,
    PlatformAccountPlatformAccountIdRouteLazyRoute:
      PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren,
    PlatformAccountCreateLazyRoute: PlatformAccountCreateLazyRoute,
  }

const PlatformAccountRouteLazyRouteWithChildren =
  PlatformAccountRouteLazyRoute._addFileChildren(
    PlatformAccountRouteLazyRouteChildren,
  )

interface PlayChatSessionIdRouteLazyRouteChildren {
  PlayChatSessionIdIndexRoute: typeof PlayChatSessionIdIndexRoute
  PlayChatSessionIdDebugLazyRoute: typeof PlayChatSessionIdDebugLazyRoute
  PlayChatSessionIdEditLazyRoute: typeof PlayChatSessionIdEditLazyRoute
  PlayChatSessionIdResultLazyRoute: typeof PlayChatSessionIdResultLazyRoute
  PlayChatSessionIdStateLazyRoute: typeof PlayChatSessionIdStateLazyRoute
  PlayChatSessionIdTeamLazyRoute: typeof PlayChatSessionIdTeamLazyRoute
}

const PlayChatSessionIdRouteLazyRouteChildren: PlayChatSessionIdRouteLazyRouteChildren =
  {
    PlayChatSessionIdIndexRoute: PlayChatSessionIdIndexRoute,
    PlayChatSessionIdDebugLazyRoute: PlayChatSessionIdDebugLazyRoute,
    PlayChatSessionIdEditLazyRoute: PlayChatSessionIdEditLazyRoute,
    PlayChatSessionIdResultLazyRoute: PlayChatSessionIdResultLazyRoute,
    PlayChatSessionIdStateLazyRoute: PlayChatSessionIdStateLazyRoute,
    PlayChatSessionIdTeamLazyRoute: PlayChatSessionIdTeamLazyRoute,
  }

const PlayChatSessionIdRouteLazyRouteWithChildren =
  PlayChatSessionIdRouteLazyRoute._addFileChildren(
    PlayChatSessionIdRouteLazyRouteChildren,
  )

interface PlayChatRouteLazyRouteChildren {
  PlayChatIndexLazyRoute: typeof PlayChatIndexLazyRoute
  PlayChatSessionIdRouteLazyRoute: typeof PlayChatSessionIdRouteLazyRouteWithChildren
}

const PlayChatRouteLazyRouteChildren: PlayChatRouteLazyRouteChildren = {
  PlayChatIndexLazyRoute: PlayChatIndexLazyRoute,
  PlayChatSessionIdRouteLazyRoute: PlayChatSessionIdRouteLazyRouteWithChildren,
}

const PlayChatRouteLazyRouteWithChildren =
  PlayChatRouteLazyRoute._addFileChildren(PlayChatRouteLazyRouteChildren)

interface PlayRouteLazyRouteChildren {
  PlayIndexLazyRoute: typeof PlayIndexLazyRoute
  PlayChatRouteLazyRoute: typeof PlayChatRouteLazyRouteWithChildren
}

const PlayRouteLazyRouteChildren: PlayRouteLazyRouteChildren = {
  PlayIndexLazyRoute: PlayIndexLazyRoute,
  PlayChatRouteLazyRoute: PlayChatRouteLazyRouteWithChildren,
}

const PlayRouteLazyRouteWithChildren = PlayRouteLazyRoute._addFileChildren(
  PlayRouteLazyRouteChildren,
)

interface PostRouteLazyRouteChildren {
  PostIndexLazyRoute: typeof PostIndexLazyRoute
  PostCreateLazyRoute: typeof PostCreateLazyRoute
}

const PostRouteLazyRouteChildren: PostRouteLazyRouteChildren = {
  PostIndexLazyRoute: PostIndexLazyRoute,
  PostCreateLazyRoute: PostCreateLazyRoute,
}

const PostRouteLazyRouteWithChildren = PostRouteLazyRoute._addFileChildren(
  PostRouteLazyRouteChildren,
)

interface ResourceResIdRouteLazyRouteChildren {
  ResourceResIdIndexLazyRoute: typeof ResourceResIdIndexLazyRoute
  ResourceResIdSessionIdIndexLazyRoute: typeof ResourceResIdSessionIdIndexLazyRoute
}

const ResourceResIdRouteLazyRouteChildren: ResourceResIdRouteLazyRouteChildren =
  {
    ResourceResIdIndexLazyRoute: ResourceResIdIndexLazyRoute,
    ResourceResIdSessionIdIndexLazyRoute: ResourceResIdSessionIdIndexLazyRoute,
  }

const ResourceResIdRouteLazyRouteWithChildren =
  ResourceResIdRouteLazyRoute._addFileChildren(
    ResourceResIdRouteLazyRouteChildren,
  )

interface ResourceNewResRouteLazyRouteChildren {
  ResourceNewResIndexLazyRoute: typeof ResourceNewResIndexLazyRoute
  ResourceNewResBrowserLazyRoute: typeof ResourceNewResBrowserLazyRoute
  ResourceNewResChatLazyRoute: typeof ResourceNewResChatLazyRoute
  ResourceNewResPlatformaccountLazyRoute: typeof ResourceNewResPlatformaccountLazyRoute
}

const ResourceNewResRouteLazyRouteChildren: ResourceNewResRouteLazyRouteChildren =
  {
    ResourceNewResIndexLazyRoute: ResourceNewResIndexLazyRoute,
    ResourceNewResBrowserLazyRoute: ResourceNewResBrowserLazyRoute,
    ResourceNewResChatLazyRoute: ResourceNewResChatLazyRoute,
    ResourceNewResPlatformaccountLazyRoute:
      ResourceNewResPlatformaccountLazyRoute,
  }

const ResourceNewResRouteLazyRouteWithChildren =
  ResourceNewResRouteLazyRoute._addFileChildren(
    ResourceNewResRouteLazyRouteChildren,
  )

interface ResourceNewRouteLazyRouteChildren {
  ResourceNewResRouteLazyRoute: typeof ResourceNewResRouteLazyRouteWithChildren
}

const ResourceNewRouteLazyRouteChildren: ResourceNewRouteLazyRouteChildren = {
  ResourceNewResRouteLazyRoute: ResourceNewResRouteLazyRouteWithChildren,
}

const ResourceNewRouteLazyRouteWithChildren =
  ResourceNewRouteLazyRoute._addFileChildren(ResourceNewRouteLazyRouteChildren)

interface ResourceRouteLazyRouteChildren {
  ResourceIndexLazyRoute: typeof ResourceIndexLazyRoute
  ResourceResIdRouteLazyRoute: typeof ResourceResIdRouteLazyRouteWithChildren
  ResourceNewRouteLazyRoute: typeof ResourceNewRouteLazyRouteWithChildren
}

const ResourceRouteLazyRouteChildren: ResourceRouteLazyRouteChildren = {
  ResourceIndexLazyRoute: ResourceIndexLazyRoute,
  ResourceResIdRouteLazyRoute: ResourceResIdRouteLazyRouteWithChildren,
  ResourceNewRouteLazyRoute: ResourceNewRouteLazyRouteWithChildren,
}

const ResourceRouteLazyRouteWithChildren =
  ResourceRouteLazyRoute._addFileChildren(ResourceRouteLazyRouteChildren)

interface SessionSsessionIdRouteLazyRouteChildren {
  SessionSsessionIdIndexLazyRoute: typeof SessionSsessionIdIndexLazyRoute
}

const SessionSsessionIdRouteLazyRouteChildren: SessionSsessionIdRouteLazyRouteChildren =
  {
    SessionSsessionIdIndexLazyRoute: SessionSsessionIdIndexLazyRoute,
  }

const SessionSsessionIdRouteLazyRouteWithChildren =
  SessionSsessionIdRouteLazyRoute._addFileChildren(
    SessionSsessionIdRouteLazyRouteChildren,
  )

interface SessionRouteLazyRouteChildren {
  SessionIndexLazyRoute: typeof SessionIndexLazyRoute
  SessionSsessionIdRouteLazyRoute: typeof SessionSsessionIdRouteLazyRouteWithChildren
}

const SessionRouteLazyRouteChildren: SessionRouteLazyRouteChildren = {
  SessionIndexLazyRoute: SessionIndexLazyRoute,
  SessionSsessionIdRouteLazyRoute: SessionSsessionIdRouteLazyRouteWithChildren,
}

const SessionRouteLazyRouteWithChildren =
  SessionRouteLazyRoute._addFileChildren(SessionRouteLazyRouteChildren)

interface SettingsRouteLazyRouteChildren {
  SettingsIndexLazyRoute: typeof SettingsIndexLazyRoute
}

const SettingsRouteLazyRouteChildren: SettingsRouteLazyRouteChildren = {
  SettingsIndexLazyRoute: SettingsIndexLazyRoute,
}

const SettingsRouteLazyRouteWithChildren =
  SettingsRouteLazyRoute._addFileChildren(SettingsRouteLazyRouteChildren)

interface SiteSiteIdHostRouteRouteChildren {
  SiteSiteIdHostIndexRoute: typeof SiteSiteIdHostIndexRoute
}

const SiteSiteIdHostRouteRouteChildren: SiteSiteIdHostRouteRouteChildren = {
  SiteSiteIdHostIndexRoute: SiteSiteIdHostIndexRoute,
}

const SiteSiteIdHostRouteRouteWithChildren =
  SiteSiteIdHostRouteRoute._addFileChildren(SiteSiteIdHostRouteRouteChildren)

interface SiteSiteIdRouteRouteChildren {
  SiteSiteIdIndexRoute: typeof SiteSiteIdIndexRoute
  SiteSiteIdEditRoute: typeof SiteSiteIdEditRoute
  SiteSiteIdHostRouteRoute: typeof SiteSiteIdHostRouteRouteWithChildren
}

const SiteSiteIdRouteRouteChildren: SiteSiteIdRouteRouteChildren = {
  SiteSiteIdIndexRoute: SiteSiteIdIndexRoute,
  SiteSiteIdEditRoute: SiteSiteIdEditRoute,
  SiteSiteIdHostRouteRoute: SiteSiteIdHostRouteRouteWithChildren,
}

const SiteSiteIdRouteRouteWithChildren = SiteSiteIdRouteRoute._addFileChildren(
  SiteSiteIdRouteRouteChildren,
)

interface SiteRouteLazyRouteChildren {
  SiteIndexRoute: typeof SiteIndexRoute
  SiteSiteIdRouteRoute: typeof SiteSiteIdRouteRouteWithChildren
  SiteCreateIndexRoute: typeof SiteCreateIndexRoute
}

const SiteRouteLazyRouteChildren: SiteRouteLazyRouteChildren = {
  SiteIndexRoute: SiteIndexRoute,
  SiteSiteIdRouteRoute: SiteSiteIdRouteRouteWithChildren,
  SiteCreateIndexRoute: SiteCreateIndexRoute,
}

const SiteRouteLazyRouteWithChildren = SiteRouteLazyRoute._addFileChildren(
  SiteRouteLazyRouteChildren,
)

interface TeamTeamIdRouteLazyRouteChildren {
  TeamTeamIdNewIndexLazyRoute: typeof TeamTeamIdNewIndexLazyRoute
}

const TeamTeamIdRouteLazyRouteChildren: TeamTeamIdRouteLazyRouteChildren = {
  TeamTeamIdNewIndexLazyRoute: TeamTeamIdNewIndexLazyRoute,
}

const TeamTeamIdRouteLazyRouteWithChildren =
  TeamTeamIdRouteLazyRoute._addFileChildren(TeamTeamIdRouteLazyRouteChildren)

interface TeamRouteLazyRouteChildren {
  TeamIndexLazyRoute: typeof TeamIndexLazyRoute
  TeamTeamIdRouteLazyRoute: typeof TeamTeamIdRouteLazyRouteWithChildren
}

const TeamRouteLazyRouteChildren: TeamRouteLazyRouteChildren = {
  TeamIndexLazyRoute: TeamIndexLazyRoute,
  TeamTeamIdRouteLazyRoute: TeamTeamIdRouteLazyRouteWithChildren,
}

const TeamRouteLazyRouteWithChildren = TeamRouteLazyRoute._addFileChildren(
  TeamRouteLazyRouteChildren,
)

interface TenantsettingsTenantSettingIdRouteLazyRouteChildren {
  TenantsettingsTenantSettingIdIndexLazyRoute: typeof TenantsettingsTenantSettingIdIndexLazyRoute
}

const TenantsettingsTenantSettingIdRouteLazyRouteChildren: TenantsettingsTenantSettingIdRouteLazyRouteChildren =
  {
    TenantsettingsTenantSettingIdIndexLazyRoute:
      TenantsettingsTenantSettingIdIndexLazyRoute,
  }

const TenantsettingsTenantSettingIdRouteLazyRouteWithChildren =
  TenantsettingsTenantSettingIdRouteLazyRoute._addFileChildren(
    TenantsettingsTenantSettingIdRouteLazyRouteChildren,
  )

interface TenantsettingsModelclientsettingsRouteLazyRouteChildren {
  TenantsettingsModelclientsettingsIndexLazyRoute: typeof TenantsettingsModelclientsettingsIndexLazyRoute
}

const TenantsettingsModelclientsettingsRouteLazyRouteChildren: TenantsettingsModelclientsettingsRouteLazyRouteChildren =
  {
    TenantsettingsModelclientsettingsIndexLazyRoute:
      TenantsettingsModelclientsettingsIndexLazyRoute,
  }

const TenantsettingsModelclientsettingsRouteLazyRouteWithChildren =
  TenantsettingsModelclientsettingsRouteLazyRoute._addFileChildren(
    TenantsettingsModelclientsettingsRouteLazyRouteChildren,
  )

interface TenantsettingsRouteLazyRouteChildren {
  TenantsettingsIndexLazyRoute: typeof TenantsettingsIndexLazyRoute
  TenantsettingsTenantSettingIdRouteLazyRoute: typeof TenantsettingsTenantSettingIdRouteLazyRouteWithChildren
  TenantsettingsModelclientsettingsRouteLazyRoute: typeof TenantsettingsModelclientsettingsRouteLazyRouteWithChildren
}

const TenantsettingsRouteLazyRouteChildren: TenantsettingsRouteLazyRouteChildren =
  {
    TenantsettingsIndexLazyRoute: TenantsettingsIndexLazyRoute,
    TenantsettingsTenantSettingIdRouteLazyRoute:
      TenantsettingsTenantSettingIdRouteLazyRouteWithChildren,
    TenantsettingsModelclientsettingsRouteLazyRoute:
      TenantsettingsModelclientsettingsRouteLazyRouteWithChildren,
  }

const TenantsettingsRouteLazyRouteWithChildren =
  TenantsettingsRouteLazyRoute._addFileChildren(
    TenantsettingsRouteLazyRouteChildren,
  )

interface TriggerRouteLazyRouteChildren {
  TriggerAgRoute: typeof TriggerAgRoute
  TriggerIdLazyRoute: typeof TriggerIdLazyRoute
}

const TriggerRouteLazyRouteChildren: TriggerRouteLazyRouteChildren = {
  TriggerAgRoute: TriggerAgRoute,
  TriggerIdLazyRoute: TriggerIdLazyRoute,
}

const TriggerRouteLazyRouteWithChildren =
  TriggerRouteLazyRoute._addFileChildren(TriggerRouteLazyRouteChildren)

interface WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdChatIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
}

const WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdChatIndexLazyRoute:
      WorkflowRunsWorkflowRunIdChatIndexLazyRoute,
  }

const WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdChatRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdChatRouteLazyRouteChildren,
  )

interface WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
}

const WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute:
      WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute,
  }

const WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteChildren,
  )

interface WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
}

const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute:
      WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute,
  }

const WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteChildren,
  )

interface WorkflowRunsWorkflowRunIdRouteLazyRouteChildren {
  WorkflowRunsWorkflowRunIdIndexLazyRoute: typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute: typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  WorkflowRunsWorkflowRunIdChatRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren
  WorkflowRunsWorkflowRunIdInputLazyRoute: typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  WorkflowRunsWorkflowRunIdSummaryLazyRoute: typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren
  WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren
}

const WorkflowRunsWorkflowRunIdRouteLazyRouteChildren: WorkflowRunsWorkflowRunIdRouteLazyRouteChildren =
  {
    WorkflowRunsWorkflowRunIdIndexLazyRoute:
      WorkflowRunsWorkflowRunIdIndexLazyRoute,
    WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute:
      WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute,
    WorkflowRunsWorkflowRunIdChatRouteLazyRoute:
      WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren,
    WorkflowRunsWorkflowRunIdInputLazyRoute:
      WorkflowRunsWorkflowRunIdInputLazyRoute,
    WorkflowRunsWorkflowRunIdSummaryLazyRoute:
      WorkflowRunsWorkflowRunIdSummaryLazyRoute,
    WorkflowRunsWorkflowRunIdVisualizationRouteLazyRoute:
      WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren,
    WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRoute:
      WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren,
  }

const WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren =
  WorkflowRunsWorkflowRunIdRouteLazyRoute._addFileChildren(
    WorkflowRunsWorkflowRunIdRouteLazyRouteChildren,
  )

interface WorkflowRunsRouteLazyRouteChildren {
  WorkflowRunsIndexLazyRoute: typeof WorkflowRunsIndexLazyRoute
  WorkflowRunsWorkflowRunIdRouteLazyRoute: typeof WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren
}

const WorkflowRunsRouteLazyRouteChildren: WorkflowRunsRouteLazyRouteChildren = {
  WorkflowRunsIndexLazyRoute: WorkflowRunsIndexLazyRoute,
  WorkflowRunsWorkflowRunIdRouteLazyRoute:
    WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren,
}

const WorkflowRunsRouteLazyRouteWithChildren =
  WorkflowRunsRouteLazyRoute._addFileChildren(
    WorkflowRunsRouteLazyRouteChildren,
  )

interface WorkflowsRouteLazyRouteChildren {
  WorkflowsIndexLazyRoute: typeof WorkflowsIndexLazyRoute
  WorkflowsWorkflowIdLazyRoute: typeof WorkflowsWorkflowIdLazyRoute
}

const WorkflowsRouteLazyRouteChildren: WorkflowsRouteLazyRouteChildren = {
  WorkflowsIndexLazyRoute: WorkflowsIndexLazyRoute,
  WorkflowsWorkflowIdLazyRoute: WorkflowsWorkflowIdLazyRoute,
}

const WorkflowsRouteLazyRouteWithChildren =
  WorkflowsRouteLazyRoute._addFileChildren(WorkflowsRouteLazyRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agEvents': typeof AgEventsRouteLazyRouteWithChildren
  '/ag_state': typeof AgstateRouteLazyRoute
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/coms': typeof ComsRouteLazyRouteWithChildren
  '/endpoint': typeof EndpointRouteLazyRouteWithChildren
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/events': typeof EventsRouteLazyRouteWithChildren
  '/gallery': typeof GalleryRouteLazyRouteWithChildren
  '/model': typeof ModelRouteLazyRouteWithChildren
  '/platform': typeof PlatformRouteLazyRouteWithChildren
  '/platform-account': typeof PlatformAccountRouteLazyRouteWithChildren
  '/play': typeof PlayRouteLazyRouteWithChildren
  '/post': typeof PostRouteLazyRouteWithChildren
  '/resource': typeof ResourceRouteLazyRouteWithChildren
  '/session': typeof SessionRouteLazyRouteWithChildren
  '/settings': typeof SettingsRouteLazyRouteWithChildren
  '/site': typeof SiteRouteLazyRouteWithChildren
  '/team': typeof TeamRouteLazyRouteWithChildren
  '/tenant_settings': typeof TenantsettingsRouteLazyRouteWithChildren
  '/trigger': typeof TriggerRouteLazyRouteWithChildren
  '/workflow-runs': typeof WorkflowRunsRouteLazyRouteWithChildren
  '/workflows': typeof WorkflowsRouteLazyRouteWithChildren
  '/platform/': typeof PlatformIndexRoute
  '/site/': typeof SiteIndexRoute
  '/envs/create': typeof EnvsCreateRoute
  '/site/$siteId': typeof SiteSiteIdRouteRouteWithChildren
  '/trigger/ag': typeof TriggerAgRoute
  '/agEvents/': typeof AgEventsIndexLazyRoute
  '/coms/': typeof ComsIndexLazyRoute
  '/endpoint/': typeof EndpointIndexLazyRoute
  '/envs/': typeof EnvsIndexLazyRoute
  '/events/': typeof EventsIndexLazyRoute
  '/gallery/': typeof GalleryIndexLazyRoute
  '/model/': typeof ModelIndexLazyRoute
  '/platform-account/': typeof PlatformAccountIndexLazyRoute
  '/play/': typeof PlayIndexLazyRoute
  '/post/': typeof PostIndexLazyRoute
  '/resource/': typeof ResourceIndexLazyRoute
  '/session/': typeof SessionIndexLazyRoute
  '/settings/': typeof SettingsIndexLazyRoute
  '/team/': typeof TeamIndexLazyRoute
  '/tenant_settings/': typeof TenantsettingsIndexLazyRoute
  '/workflow-runs/': typeof WorkflowRunsIndexLazyRoute
  '/workflows/': typeof WorkflowsIndexLazyRoute
  '/auth/login': typeof AuthLoginRouteLazyRouteWithChildren
  '/auth/register': typeof AuthRegisterLazyRoute
  '/coms/$comId': typeof ComsComIdRouteLazyRouteWithChildren
  '/coms/new': typeof ComsNewRouteLazyRouteWithChildren
  '/gallery/$galleryId': typeof GalleryGalleryIdRouteLazyRoute
  '/platform-account/$platformAccountId': typeof PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren
  '/platform-account/create': typeof PlatformAccountCreateLazyRoute
  '/play/chat': typeof PlayChatRouteLazyRouteWithChildren
  '/post/create': typeof PostCreateLazyRoute
  '/resource/$resId': typeof ResourceResIdRouteLazyRouteWithChildren
  '/resource/new': typeof ResourceNewRouteLazyRouteWithChildren
  '/session/$ssessionId': typeof SessionSsessionIdRouteLazyRouteWithChildren
  '/team/$teamId': typeof TeamTeamIdRouteLazyRouteWithChildren
  '/tenant_settings/$tenantSettingId': typeof TenantsettingsTenantSettingIdRouteLazyRouteWithChildren
  '/tenant_settings/model_client_settings': typeof TenantsettingsModelclientsettingsRouteLazyRouteWithChildren
  '/trigger/$id': typeof TriggerIdLazyRoute
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdLazyRoute
  '/onboarding/create-tenant': typeof OnboardingCreateTenantIndexRoute
  '/site/$siteId/': typeof SiteSiteIdIndexRoute
  '/site/create': typeof SiteCreateIndexRoute
  '/site/$siteId/edit': typeof SiteSiteIdEditRoute
  '/site/$siteId/host': typeof SiteSiteIdHostRouteRouteWithChildren
  '/auth/login/': typeof AuthLoginIndexLazyRoute
  '/coms/$comId/': typeof ComsComIdIndexLazyRoute
  '/platform-account/$platformAccountId/': typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  '/play/chat/': typeof PlayChatIndexLazyRoute
  '/resource/$resId/': typeof ResourceResIdIndexLazyRoute
  '/session/$ssessionId/': typeof SessionSsessionIdIndexLazyRoute
  '/tenant_settings/$tenantSettingId/': typeof TenantsettingsTenantSettingIdIndexLazyRoute
  '/tenant_settings/model_client_settings/': typeof TenantsettingsModelclientsettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/': typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  '/coms/$comId/run': typeof ComsComIdRunRouteLazyRouteWithChildren
  '/coms/$comId/session': typeof ComsComIdSessionRouteLazyRouteWithChildren
  '/coms/$comId/team_builder': typeof ComsComIdTeambuilderRouteLazyRouteWithChildren
  '/coms/$comId/type': typeof ComsComIdTypeRouteLazyRouteWithChildren
  '/coms/$comId/view': typeof ComsComIdViewRouteLazyRouteWithChildren
  '/coms/new/instagram_team': typeof ComsNewInstagramteamLazyRoute
  '/play/chat/$sessionId': typeof PlayChatSessionIdRouteLazyRouteWithChildren
  '/resource/new/res': typeof ResourceNewResRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/additional-metadata': typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  '/workflow-runs/$workflowRunId/chat': typeof WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/input': typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  '/workflow-runs/$workflowRunId/summary': typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  '/workflow-runs/$workflowRunId/visualization': typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren
  '/play/chat/$sessionId/': typeof PlayChatSessionIdIndexRoute
  '/site/$siteId/host/': typeof SiteSiteIdHostIndexRoute
  '/coms/$comId/type/modelClient': typeof ComsComIdTypeModelClientRoute
  '/coms/$comId/run/': typeof ComsComIdRunIndexLazyRoute
  '/coms/$comId/session/': typeof ComsComIdSessionIndexLazyRoute
  '/coms/$comId/team_builder/': typeof ComsComIdTeambuilderIndexLazyRoute
  '/resource/$resId/$sessionId': typeof ResourceResIdSessionIdIndexLazyRoute
  '/resource/new/res/': typeof ResourceNewResIndexLazyRoute
  '/team/$teamId/new': typeof TeamTeamIdNewIndexLazyRoute
  '/workflow-runs/$workflowRunId/chat/': typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
  '/workflow-runs/$workflowRunId/visualization/': typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
  '/coms/$comId/type/assisant': typeof ComsComIdTypeAssisantLazyRoute
  '/coms/$comId/type/instagramTeam': typeof ComsComIdTypeInstagramTeamLazyRoute
  '/coms/$comId/view/$subComId': typeof ComsComIdViewSubComIdRouteLazyRouteWithChildren
  '/play/chat/$sessionId/debug': typeof PlayChatSessionIdDebugLazyRoute
  '/play/chat/$sessionId/edit': typeof PlayChatSessionIdEditLazyRoute
  '/play/chat/$sessionId/result': typeof PlayChatSessionIdResultLazyRoute
  '/play/chat/$sessionId/state': typeof PlayChatSessionIdStateLazyRoute
  '/play/chat/$sessionId/team': typeof PlayChatSessionIdTeamLazyRoute
  '/resource/new/res/browser': typeof ResourceNewResBrowserLazyRoute
  '/resource/new/res/chat': typeof ResourceNewResChatLazyRoute
  '/resource/new/res/platform_account': typeof ResourceNewResPlatformaccountLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren
  '/coms/$comId/view/$subComId/': typeof ComsComIdViewSubComIdIndexLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId/': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ag_state': typeof AgstateRouteLazyRoute
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/trigger': typeof TriggerRouteLazyRouteWithChildren
  '/platform': typeof PlatformIndexRoute
  '/site': typeof SiteIndexRoute
  '/envs/create': typeof EnvsCreateRoute
  '/trigger/ag': typeof TriggerAgRoute
  '/agEvents': typeof AgEventsIndexLazyRoute
  '/coms': typeof ComsIndexLazyRoute
  '/endpoint': typeof EndpointIndexLazyRoute
  '/envs': typeof EnvsIndexLazyRoute
  '/events': typeof EventsIndexLazyRoute
  '/gallery': typeof GalleryIndexLazyRoute
  '/model': typeof ModelIndexLazyRoute
  '/platform-account': typeof PlatformAccountIndexLazyRoute
  '/play': typeof PlayIndexLazyRoute
  '/post': typeof PostIndexLazyRoute
  '/resource': typeof ResourceIndexLazyRoute
  '/session': typeof SessionIndexLazyRoute
  '/settings': typeof SettingsIndexLazyRoute
  '/team': typeof TeamIndexLazyRoute
  '/tenant_settings': typeof TenantsettingsIndexLazyRoute
  '/workflow-runs': typeof WorkflowRunsIndexLazyRoute
  '/workflows': typeof WorkflowsIndexLazyRoute
  '/auth/register': typeof AuthRegisterLazyRoute
  '/coms/new': typeof ComsNewRouteLazyRouteWithChildren
  '/gallery/$galleryId': typeof GalleryGalleryIdRouteLazyRoute
  '/platform-account/create': typeof PlatformAccountCreateLazyRoute
  '/post/create': typeof PostCreateLazyRoute
  '/resource/new': typeof ResourceNewRouteLazyRouteWithChildren
  '/team/$teamId': typeof TeamTeamIdRouteLazyRouteWithChildren
  '/trigger/$id': typeof TriggerIdLazyRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdLazyRoute
  '/onboarding/create-tenant': typeof OnboardingCreateTenantIndexRoute
  '/site/$siteId': typeof SiteSiteIdIndexRoute
  '/site/create': typeof SiteCreateIndexRoute
  '/site/$siteId/edit': typeof SiteSiteIdEditRoute
  '/auth/login': typeof AuthLoginIndexLazyRoute
  '/coms/$comId': typeof ComsComIdIndexLazyRoute
  '/platform-account/$platformAccountId': typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  '/play/chat': typeof PlayChatIndexLazyRoute
  '/resource/$resId': typeof ResourceResIdIndexLazyRoute
  '/session/$ssessionId': typeof SessionSsessionIdIndexLazyRoute
  '/tenant_settings/$tenantSettingId': typeof TenantsettingsTenantSettingIdIndexLazyRoute
  '/tenant_settings/model_client_settings': typeof TenantsettingsModelclientsettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  '/coms/$comId/type': typeof ComsComIdTypeRouteLazyRouteWithChildren
  '/coms/$comId/view': typeof ComsComIdViewRouteLazyRouteWithChildren
  '/coms/new/instagram_team': typeof ComsNewInstagramteamLazyRoute
  '/workflow-runs/$workflowRunId/additional-metadata': typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  '/workflow-runs/$workflowRunId/input': typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  '/workflow-runs/$workflowRunId/summary': typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  '/play/chat/$sessionId': typeof PlayChatSessionIdIndexRoute
  '/site/$siteId/host': typeof SiteSiteIdHostIndexRoute
  '/coms/$comId/type/modelClient': typeof ComsComIdTypeModelClientRoute
  '/coms/$comId/run': typeof ComsComIdRunIndexLazyRoute
  '/coms/$comId/session': typeof ComsComIdSessionIndexLazyRoute
  '/coms/$comId/team_builder': typeof ComsComIdTeambuilderIndexLazyRoute
  '/resource/$resId/$sessionId': typeof ResourceResIdSessionIdIndexLazyRoute
  '/resource/new/res': typeof ResourceNewResIndexLazyRoute
  '/team/$teamId/new': typeof TeamTeamIdNewIndexLazyRoute
  '/workflow-runs/$workflowRunId/chat': typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
  '/workflow-runs/$workflowRunId/visualization': typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
  '/coms/$comId/type/assisant': typeof ComsComIdTypeAssisantLazyRoute
  '/coms/$comId/type/instagramTeam': typeof ComsComIdTypeInstagramTeamLazyRoute
  '/play/chat/$sessionId/debug': typeof PlayChatSessionIdDebugLazyRoute
  '/play/chat/$sessionId/edit': typeof PlayChatSessionIdEditLazyRoute
  '/play/chat/$sessionId/result': typeof PlayChatSessionIdResultLazyRoute
  '/play/chat/$sessionId/state': typeof PlayChatSessionIdStateLazyRoute
  '/play/chat/$sessionId/team': typeof PlayChatSessionIdTeamLazyRoute
  '/resource/new/res/browser': typeof ResourceNewResBrowserLazyRoute
  '/resource/new/res/chat': typeof ResourceNewResChatLazyRoute
  '/resource/new/res/platform_account': typeof ResourceNewResPlatformaccountLazyRoute
  '/coms/$comId/view/$subComId': typeof ComsComIdViewSubComIdIndexLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/agEvents': typeof AgEventsRouteLazyRouteWithChildren
  '/ag_state': typeof AgstateRouteLazyRoute
  '/auth': typeof AuthRouteLazyRouteWithChildren
  '/coms': typeof ComsRouteLazyRouteWithChildren
  '/endpoint': typeof EndpointRouteLazyRouteWithChildren
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/events': typeof EventsRouteLazyRouteWithChildren
  '/gallery': typeof GalleryRouteLazyRouteWithChildren
  '/model': typeof ModelRouteLazyRouteWithChildren
  '/platform': typeof PlatformRouteLazyRouteWithChildren
  '/platform-account': typeof PlatformAccountRouteLazyRouteWithChildren
  '/play': typeof PlayRouteLazyRouteWithChildren
  '/post': typeof PostRouteLazyRouteWithChildren
  '/resource': typeof ResourceRouteLazyRouteWithChildren
  '/session': typeof SessionRouteLazyRouteWithChildren
  '/settings': typeof SettingsRouteLazyRouteWithChildren
  '/site': typeof SiteRouteLazyRouteWithChildren
  '/team': typeof TeamRouteLazyRouteWithChildren
  '/tenant_settings': typeof TenantsettingsRouteLazyRouteWithChildren
  '/trigger': typeof TriggerRouteLazyRouteWithChildren
  '/workflow-runs': typeof WorkflowRunsRouteLazyRouteWithChildren
  '/workflows': typeof WorkflowsRouteLazyRouteWithChildren
  '/platform/': typeof PlatformIndexRoute
  '/site/': typeof SiteIndexRoute
  '/envs/create': typeof EnvsCreateRoute
  '/site/$siteId': typeof SiteSiteIdRouteRouteWithChildren
  '/trigger/ag': typeof TriggerAgRoute
  '/agEvents/': typeof AgEventsIndexLazyRoute
  '/coms/': typeof ComsIndexLazyRoute
  '/endpoint/': typeof EndpointIndexLazyRoute
  '/envs/': typeof EnvsIndexLazyRoute
  '/events/': typeof EventsIndexLazyRoute
  '/gallery/': typeof GalleryIndexLazyRoute
  '/model/': typeof ModelIndexLazyRoute
  '/platform-account/': typeof PlatformAccountIndexLazyRoute
  '/play/': typeof PlayIndexLazyRoute
  '/post/': typeof PostIndexLazyRoute
  '/resource/': typeof ResourceIndexLazyRoute
  '/session/': typeof SessionIndexLazyRoute
  '/settings/': typeof SettingsIndexLazyRoute
  '/team/': typeof TeamIndexLazyRoute
  '/tenant_settings/': typeof TenantsettingsIndexLazyRoute
  '/workflow-runs/': typeof WorkflowRunsIndexLazyRoute
  '/workflows/': typeof WorkflowsIndexLazyRoute
  '/auth/login': typeof AuthLoginRouteLazyRouteWithChildren
  '/auth/register': typeof AuthRegisterLazyRoute
  '/coms/$comId': typeof ComsComIdRouteLazyRouteWithChildren
  '/coms/new': typeof ComsNewRouteLazyRouteWithChildren
  '/gallery/$galleryId': typeof GalleryGalleryIdRouteLazyRoute
  '/platform-account/$platformAccountId': typeof PlatformAccountPlatformAccountIdRouteLazyRouteWithChildren
  '/platform-account/create': typeof PlatformAccountCreateLazyRoute
  '/play/chat': typeof PlayChatRouteLazyRouteWithChildren
  '/post/create': typeof PostCreateLazyRoute
  '/resource/$resId': typeof ResourceResIdRouteLazyRouteWithChildren
  '/resource/new': typeof ResourceNewRouteLazyRouteWithChildren
  '/session/$ssessionId': typeof SessionSsessionIdRouteLazyRouteWithChildren
  '/team/$teamId': typeof TeamTeamIdRouteLazyRouteWithChildren
  '/tenant_settings/$tenantSettingId': typeof TenantsettingsTenantSettingIdRouteLazyRouteWithChildren
  '/tenant_settings/model_client_settings': typeof TenantsettingsModelclientsettingsRouteLazyRouteWithChildren
  '/trigger/$id': typeof TriggerIdLazyRoute
  '/workflow-runs/$workflowRunId': typeof WorkflowRunsWorkflowRunIdRouteLazyRouteWithChildren
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdLazyRoute
  '/onboarding/create-tenant/': typeof OnboardingCreateTenantIndexRoute
  '/site/$siteId/': typeof SiteSiteIdIndexRoute
  '/site/create/': typeof SiteCreateIndexRoute
  '/site/$siteId/edit': typeof SiteSiteIdEditRoute
  '/site/$siteId/host': typeof SiteSiteIdHostRouteRouteWithChildren
  '/auth/login/': typeof AuthLoginIndexLazyRoute
  '/coms/$comId/': typeof ComsComIdIndexLazyRoute
  '/platform-account/$platformAccountId/': typeof PlatformAccountPlatformAccountIdIndexLazyRoute
  '/play/chat/': typeof PlayChatIndexLazyRoute
  '/resource/$resId/': typeof ResourceResIdIndexLazyRoute
  '/session/$ssessionId/': typeof SessionSsessionIdIndexLazyRoute
  '/tenant_settings/$tenantSettingId/': typeof TenantsettingsTenantSettingIdIndexLazyRoute
  '/tenant_settings/model_client_settings/': typeof TenantsettingsModelclientsettingsIndexLazyRoute
  '/workflow-runs/$workflowRunId/': typeof WorkflowRunsWorkflowRunIdIndexLazyRoute
  '/coms/$comId/run': typeof ComsComIdRunRouteLazyRouteWithChildren
  '/coms/$comId/session': typeof ComsComIdSessionRouteLazyRouteWithChildren
  '/coms/$comId/team_builder': typeof ComsComIdTeambuilderRouteLazyRouteWithChildren
  '/coms/$comId/type': typeof ComsComIdTypeRouteLazyRouteWithChildren
  '/coms/$comId/view': typeof ComsComIdViewRouteLazyRouteWithChildren
  '/coms/new/instagram_team': typeof ComsNewInstagramteamLazyRoute
  '/play/chat/$sessionId': typeof PlayChatSessionIdRouteLazyRouteWithChildren
  '/resource/new/res': typeof ResourceNewResRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/additional-metadata': typeof WorkflowRunsWorkflowRunIdAdditionalMetadataLazyRoute
  '/workflow-runs/$workflowRunId/chat': typeof WorkflowRunsWorkflowRunIdChatRouteLazyRouteWithChildren
  '/workflow-runs/$workflowRunId/input': typeof WorkflowRunsWorkflowRunIdInputLazyRoute
  '/workflow-runs/$workflowRunId/summary': typeof WorkflowRunsWorkflowRunIdSummaryLazyRoute
  '/workflow-runs/$workflowRunId/visualization': typeof WorkflowRunsWorkflowRunIdVisualizationRouteLazyRouteWithChildren
  '/play/chat/$sessionId/': typeof PlayChatSessionIdIndexRoute
  '/site/$siteId/host/': typeof SiteSiteIdHostIndexRoute
  '/coms/$comId/type/modelClient': typeof ComsComIdTypeModelClientRoute
  '/coms/$comId/run/': typeof ComsComIdRunIndexLazyRoute
  '/coms/$comId/session/': typeof ComsComIdSessionIndexLazyRoute
  '/coms/$comId/team_builder/': typeof ComsComIdTeambuilderIndexLazyRoute
  '/resource/$resId/$sessionId/': typeof ResourceResIdSessionIdIndexLazyRoute
  '/resource/new/res/': typeof ResourceNewResIndexLazyRoute
  '/team/$teamId/new/': typeof TeamTeamIdNewIndexLazyRoute
  '/workflow-runs/$workflowRunId/chat/': typeof WorkflowRunsWorkflowRunIdChatIndexLazyRoute
  '/workflow-runs/$workflowRunId/visualization/': typeof WorkflowRunsWorkflowRunIdVisualizationIndexLazyRoute
  '/coms/$comId/type/assisant': typeof ComsComIdTypeAssisantLazyRoute
  '/coms/$comId/type/instagramTeam': typeof ComsComIdTypeInstagramTeamLazyRoute
  '/coms/$comId/view/$subComId': typeof ComsComIdViewSubComIdRouteLazyRouteWithChildren
  '/play/chat/$sessionId/debug': typeof PlayChatSessionIdDebugLazyRoute
  '/play/chat/$sessionId/edit': typeof PlayChatSessionIdEditLazyRoute
  '/play/chat/$sessionId/result': typeof PlayChatSessionIdResultLazyRoute
  '/play/chat/$sessionId/state': typeof PlayChatSessionIdStateLazyRoute
  '/play/chat/$sessionId/team': typeof PlayChatSessionIdTeamLazyRoute
  '/resource/new/res/browser': typeof ResourceNewResBrowserLazyRoute
  '/resource/new/res/chat': typeof ResourceNewResChatLazyRoute
  '/resource/new/res/platform_account': typeof ResourceNewResPlatformaccountLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdRouteLazyRouteWithChildren
  '/coms/$comId/view/$subComId/': typeof ComsComIdViewSubComIdIndexLazyRoute
  '/workflow-runs/$workflowRunId/stepRun/$stepRunId/': typeof WorkflowRunsWorkflowRunIdStepRunStepRunIdIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agEvents'
    | '/ag_state'
    | '/auth'
    | '/coms'
    | '/endpoint'
    | '/envs'
    | '/events'
    | '/gallery'
    | '/model'
    | '/platform'
    | '/platform-account'
    | '/play'
    | '/post'
    | '/resource'
    | '/session'
    | '/settings'
    | '/site'
    | '/team'
    | '/tenant_settings'
    | '/trigger'
    | '/workflow-runs'
    | '/workflows'
    | '/platform/'
    | '/site/'
    | '/envs/create'
    | '/site/$siteId'
    | '/trigger/ag'
    | '/agEvents/'
    | '/coms/'
    | '/endpoint/'
    | '/envs/'
    | '/events/'
    | '/gallery/'
    | '/model/'
    | '/platform-account/'
    | '/play/'
    | '/post/'
    | '/resource/'
    | '/session/'
    | '/settings/'
    | '/team/'
    | '/tenant_settings/'
    | '/workflow-runs/'
    | '/workflows/'
    | '/auth/login'
    | '/auth/register'
    | '/coms/$comId'
    | '/coms/new'
    | '/gallery/$galleryId'
    | '/platform-account/$platformAccountId'
    | '/platform-account/create'
    | '/play/chat'
    | '/post/create'
    | '/resource/$resId'
    | '/resource/new'
    | '/session/$ssessionId'
    | '/team/$teamId'
    | '/tenant_settings/$tenantSettingId'
    | '/tenant_settings/model_client_settings'
    | '/trigger/$id'
    | '/workflow-runs/$workflowRunId'
    | '/workflows/$workflowId'
    | '/onboarding/create-tenant'
    | '/site/$siteId/'
    | '/site/create'
    | '/site/$siteId/edit'
    | '/site/$siteId/host'
    | '/auth/login/'
    | '/coms/$comId/'
    | '/platform-account/$platformAccountId/'
    | '/play/chat/'
    | '/resource/$resId/'
    | '/session/$ssessionId/'
    | '/tenant_settings/$tenantSettingId/'
    | '/tenant_settings/model_client_settings/'
    | '/workflow-runs/$workflowRunId/'
    | '/coms/$comId/run'
    | '/coms/$comId/session'
    | '/coms/$comId/team_builder'
    | '/coms/$comId/type'
    | '/coms/$comId/view'
    | '/coms/new/instagram_team'
    | '/play/chat/$sessionId'
    | '/resource/new/res'
    | '/workflow-runs/$workflowRunId/additional-metadata'
    | '/workflow-runs/$workflowRunId/chat'
    | '/workflow-runs/$workflowRunId/input'
    | '/workflow-runs/$workflowRunId/summary'
    | '/workflow-runs/$workflowRunId/visualization'
    | '/play/chat/$sessionId/'
    | '/site/$siteId/host/'
    | '/coms/$comId/type/modelClient'
    | '/coms/$comId/run/'
    | '/coms/$comId/session/'
    | '/coms/$comId/team_builder/'
    | '/resource/$resId/$sessionId'
    | '/resource/new/res/'
    | '/team/$teamId/new'
    | '/workflow-runs/$workflowRunId/chat/'
    | '/workflow-runs/$workflowRunId/visualization/'
    | '/coms/$comId/type/assisant'
    | '/coms/$comId/type/instagramTeam'
    | '/coms/$comId/view/$subComId'
    | '/play/chat/$sessionId/debug'
    | '/play/chat/$sessionId/edit'
    | '/play/chat/$sessionId/result'
    | '/play/chat/$sessionId/state'
    | '/play/chat/$sessionId/team'
    | '/resource/new/res/browser'
    | '/resource/new/res/chat'
    | '/resource/new/res/platform_account'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
    | '/coms/$comId/view/$subComId/'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/ag_state'
    | '/auth'
    | '/trigger'
    | '/platform'
    | '/site'
    | '/envs/create'
    | '/trigger/ag'
    | '/agEvents'
    | '/coms'
    | '/endpoint'
    | '/envs'
    | '/events'
    | '/gallery'
    | '/model'
    | '/platform-account'
    | '/play'
    | '/post'
    | '/resource'
    | '/session'
    | '/settings'
    | '/team'
    | '/tenant_settings'
    | '/workflow-runs'
    | '/workflows'
    | '/auth/register'
    | '/coms/new'
    | '/gallery/$galleryId'
    | '/platform-account/create'
    | '/post/create'
    | '/resource/new'
    | '/team/$teamId'
    | '/trigger/$id'
    | '/workflows/$workflowId'
    | '/onboarding/create-tenant'
    | '/site/$siteId'
    | '/site/create'
    | '/site/$siteId/edit'
    | '/auth/login'
    | '/coms/$comId'
    | '/platform-account/$platformAccountId'
    | '/play/chat'
    | '/resource/$resId'
    | '/session/$ssessionId'
    | '/tenant_settings/$tenantSettingId'
    | '/tenant_settings/model_client_settings'
    | '/workflow-runs/$workflowRunId'
    | '/coms/$comId/type'
    | '/coms/$comId/view'
    | '/coms/new/instagram_team'
    | '/workflow-runs/$workflowRunId/additional-metadata'
    | '/workflow-runs/$workflowRunId/input'
    | '/workflow-runs/$workflowRunId/summary'
    | '/play/chat/$sessionId'
    | '/site/$siteId/host'
    | '/coms/$comId/type/modelClient'
    | '/coms/$comId/run'
    | '/coms/$comId/session'
    | '/coms/$comId/team_builder'
    | '/resource/$resId/$sessionId'
    | '/resource/new/res'
    | '/team/$teamId/new'
    | '/workflow-runs/$workflowRunId/chat'
    | '/workflow-runs/$workflowRunId/visualization'
    | '/coms/$comId/type/assisant'
    | '/coms/$comId/type/instagramTeam'
    | '/play/chat/$sessionId/debug'
    | '/play/chat/$sessionId/edit'
    | '/play/chat/$sessionId/result'
    | '/play/chat/$sessionId/state'
    | '/play/chat/$sessionId/team'
    | '/resource/new/res/browser'
    | '/resource/new/res/chat'
    | '/resource/new/res/platform_account'
    | '/coms/$comId/view/$subComId'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
  id:
    | '__root__'
    | '/'
    | '/agEvents'
    | '/ag_state'
    | '/auth'
    | '/coms'
    | '/endpoint'
    | '/envs'
    | '/events'
    | '/gallery'
    | '/model'
    | '/platform'
    | '/platform-account'
    | '/play'
    | '/post'
    | '/resource'
    | '/session'
    | '/settings'
    | '/site'
    | '/team'
    | '/tenant_settings'
    | '/trigger'
    | '/workflow-runs'
    | '/workflows'
    | '/platform/'
    | '/site/'
    | '/envs/create'
    | '/site/$siteId'
    | '/trigger/ag'
    | '/agEvents/'
    | '/coms/'
    | '/endpoint/'
    | '/envs/'
    | '/events/'
    | '/gallery/'
    | '/model/'
    | '/platform-account/'
    | '/play/'
    | '/post/'
    | '/resource/'
    | '/session/'
    | '/settings/'
    | '/team/'
    | '/tenant_settings/'
    | '/workflow-runs/'
    | '/workflows/'
    | '/auth/login'
    | '/auth/register'
    | '/coms/$comId'
    | '/coms/new'
    | '/gallery/$galleryId'
    | '/platform-account/$platformAccountId'
    | '/platform-account/create'
    | '/play/chat'
    | '/post/create'
    | '/resource/$resId'
    | '/resource/new'
    | '/session/$ssessionId'
    | '/team/$teamId'
    | '/tenant_settings/$tenantSettingId'
    | '/tenant_settings/model_client_settings'
    | '/trigger/$id'
    | '/workflow-runs/$workflowRunId'
    | '/workflows/$workflowId'
    | '/onboarding/create-tenant/'
    | '/site/$siteId/'
    | '/site/create/'
    | '/site/$siteId/edit'
    | '/site/$siteId/host'
    | '/auth/login/'
    | '/coms/$comId/'
    | '/platform-account/$platformAccountId/'
    | '/play/chat/'
    | '/resource/$resId/'
    | '/session/$ssessionId/'
    | '/tenant_settings/$tenantSettingId/'
    | '/tenant_settings/model_client_settings/'
    | '/workflow-runs/$workflowRunId/'
    | '/coms/$comId/run'
    | '/coms/$comId/session'
    | '/coms/$comId/team_builder'
    | '/coms/$comId/type'
    | '/coms/$comId/view'
    | '/coms/new/instagram_team'
    | '/play/chat/$sessionId'
    | '/resource/new/res'
    | '/workflow-runs/$workflowRunId/additional-metadata'
    | '/workflow-runs/$workflowRunId/chat'
    | '/workflow-runs/$workflowRunId/input'
    | '/workflow-runs/$workflowRunId/summary'
    | '/workflow-runs/$workflowRunId/visualization'
    | '/play/chat/$sessionId/'
    | '/site/$siteId/host/'
    | '/coms/$comId/type/modelClient'
    | '/coms/$comId/run/'
    | '/coms/$comId/session/'
    | '/coms/$comId/team_builder/'
    | '/resource/$resId/$sessionId/'
    | '/resource/new/res/'
    | '/team/$teamId/new/'
    | '/workflow-runs/$workflowRunId/chat/'
    | '/workflow-runs/$workflowRunId/visualization/'
    | '/coms/$comId/type/assisant'
    | '/coms/$comId/type/instagramTeam'
    | '/coms/$comId/view/$subComId'
    | '/play/chat/$sessionId/debug'
    | '/play/chat/$sessionId/edit'
    | '/play/chat/$sessionId/result'
    | '/play/chat/$sessionId/state'
    | '/play/chat/$sessionId/team'
    | '/resource/new/res/browser'
    | '/resource/new/res/chat'
    | '/resource/new/res/platform_account'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId'
    | '/coms/$comId/view/$subComId/'
    | '/workflow-runs/$workflowRunId/stepRun/$stepRunId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgEventsRouteLazyRoute: typeof AgEventsRouteLazyRouteWithChildren
  AgstateRouteLazyRoute: typeof AgstateRouteLazyRoute
  AuthRouteLazyRoute: typeof AuthRouteLazyRouteWithChildren
  ComsRouteLazyRoute: typeof ComsRouteLazyRouteWithChildren
  EndpointRouteLazyRoute: typeof EndpointRouteLazyRouteWithChildren
  EnvsRouteLazyRoute: typeof EnvsRouteLazyRouteWithChildren
  EventsRouteLazyRoute: typeof EventsRouteLazyRouteWithChildren
  GalleryRouteLazyRoute: typeof GalleryRouteLazyRouteWithChildren
  ModelRouteLazyRoute: typeof ModelRouteLazyRouteWithChildren
  PlatformRouteLazyRoute: typeof PlatformRouteLazyRouteWithChildren
  PlatformAccountRouteLazyRoute: typeof PlatformAccountRouteLazyRouteWithChildren
  PlayRouteLazyRoute: typeof PlayRouteLazyRouteWithChildren
  PostRouteLazyRoute: typeof PostRouteLazyRouteWithChildren
  ResourceRouteLazyRoute: typeof ResourceRouteLazyRouteWithChildren
  SessionRouteLazyRoute: typeof SessionRouteLazyRouteWithChildren
  SettingsRouteLazyRoute: typeof SettingsRouteLazyRouteWithChildren
  SiteRouteLazyRoute: typeof SiteRouteLazyRouteWithChildren
  TeamRouteLazyRoute: typeof TeamRouteLazyRouteWithChildren
  TenantsettingsRouteLazyRoute: typeof TenantsettingsRouteLazyRouteWithChildren
  TriggerRouteLazyRoute: typeof TriggerRouteLazyRouteWithChildren
  WorkflowRunsRouteLazyRoute: typeof WorkflowRunsRouteLazyRouteWithChildren
  WorkflowsRouteLazyRoute: typeof WorkflowsRouteLazyRouteWithChildren
  OnboardingCreateTenantIndexRoute: typeof OnboardingCreateTenantIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgEventsRouteLazyRoute: AgEventsRouteLazyRouteWithChildren,
  AgstateRouteLazyRoute: AgstateRouteLazyRoute,
  AuthRouteLazyRoute: AuthRouteLazyRouteWithChildren,
  ComsRouteLazyRoute: ComsRouteLazyRouteWithChildren,
  EndpointRouteLazyRoute: EndpointRouteLazyRouteWithChildren,
  EnvsRouteLazyRoute: EnvsRouteLazyRouteWithChildren,
  EventsRouteLazyRoute: EventsRouteLazyRouteWithChildren,
  GalleryRouteLazyRoute: GalleryRouteLazyRouteWithChildren,
  ModelRouteLazyRoute: ModelRouteLazyRouteWithChildren,
  PlatformRouteLazyRoute: PlatformRouteLazyRouteWithChildren,
  PlatformAccountRouteLazyRoute: PlatformAccountRouteLazyRouteWithChildren,
  PlayRouteLazyRoute: PlayRouteLazyRouteWithChildren,
  PostRouteLazyRoute: PostRouteLazyRouteWithChildren,
  ResourceRouteLazyRoute: ResourceRouteLazyRouteWithChildren,
  SessionRouteLazyRoute: SessionRouteLazyRouteWithChildren,
  SettingsRouteLazyRoute: SettingsRouteLazyRouteWithChildren,
  SiteRouteLazyRoute: SiteRouteLazyRouteWithChildren,
  TeamRouteLazyRoute: TeamRouteLazyRouteWithChildren,
  TenantsettingsRouteLazyRoute: TenantsettingsRouteLazyRouteWithChildren,
  TriggerRouteLazyRoute: TriggerRouteLazyRouteWithChildren,
  WorkflowRunsRouteLazyRoute: WorkflowRunsRouteLazyRouteWithChildren,
  WorkflowsRouteLazyRoute: WorkflowsRouteLazyRouteWithChildren,
  OnboardingCreateTenantIndexRoute: OnboardingCreateTenantIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/agEvents",
        "/ag_state",
        "/auth",
        "/coms",
        "/endpoint",
        "/envs",
        "/events",
        "/gallery",
        "/model",
        "/platform",
        "/platform-account",
        "/play",
        "/post",
        "/resource",
        "/session",
        "/settings",
        "/site",
        "/team",
        "/tenant_settings",
        "/trigger",
        "/workflow-runs",
        "/workflows",
        "/onboarding/create-tenant/"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/agEvents": {
      "filePath": "~agEvents/~route.lazy.tsx",
      "children": [
        "/agEvents/"
      ]
    },
    "/ag_state": {
      "filePath": "~ag_state/~route.lazy.tsx"
    },
    "/auth": {
      "filePath": "~auth/~route.lazy.tsx",
      "children": [
        "/auth/login",
        "/auth/register"
      ]
    },
    "/coms": {
      "filePath": "~coms/~route.lazy.tsx",
      "children": [
        "/coms/",
        "/coms/$comId",
        "/coms/new"
      ]
    },
    "/endpoint": {
      "filePath": "~endpoint/~route.lazy.tsx",
      "children": [
        "/endpoint/"
      ]
    },
    "/envs": {
      "filePath": "~envs/~route.lazy.tsx",
      "children": [
        "/envs/create",
        "/envs/"
      ]
    },
    "/events": {
      "filePath": "~events/~route.lazy.tsx",
      "children": [
        "/events/"
      ]
    },
    "/gallery": {
      "filePath": "~gallery/~route.lazy.tsx",
      "children": [
        "/gallery/",
        "/gallery/$galleryId"
      ]
    },
    "/model": {
      "filePath": "~model/~route.lazy.tsx",
      "children": [
        "/model/"
      ]
    },
    "/platform": {
      "filePath": "~platform/~route.lazy.tsx",
      "children": [
        "/platform/"
      ]
    },
    "/platform-account": {
      "filePath": "~platform-account/~route.lazy.tsx",
      "children": [
        "/platform-account/",
        "/platform-account/$platformAccountId",
        "/platform-account/create"
      ]
    },
    "/play": {
      "filePath": "~play/~route.lazy.tsx",
      "children": [
        "/play/",
        "/play/chat"
      ]
    },
    "/post": {
      "filePath": "~post/~route.lazy.tsx",
      "children": [
        "/post/",
        "/post/create"
      ]
    },
    "/resource": {
      "filePath": "~resource/~route.lazy.tsx",
      "children": [
        "/resource/",
        "/resource/$resId",
        "/resource/new"
      ]
    },
    "/session": {
      "filePath": "~session/~route.lazy.tsx",
      "children": [
        "/session/",
        "/session/$ssessionId"
      ]
    },
    "/settings": {
      "filePath": "~settings/~route.lazy.tsx",
      "children": [
        "/settings/"
      ]
    },
    "/site": {
      "filePath": "~site/~route.lazy.tsx",
      "children": [
        "/site/",
        "/site/$siteId",
        "/site/create/"
      ]
    },
    "/team": {
      "filePath": "~team/~route.lazy.tsx",
      "children": [
        "/team/",
        "/team/$teamId"
      ]
    },
    "/tenant_settings": {
      "filePath": "~tenant_settings/~route.lazy.tsx",
      "children": [
        "/tenant_settings/",
        "/tenant_settings/$tenantSettingId",
        "/tenant_settings/model_client_settings"
      ]
    },
    "/trigger": {
      "filePath": "~trigger/~route.lazy.tsx",
      "children": [
        "/trigger/ag",
        "/trigger/$id"
      ]
    },
    "/workflow-runs": {
      "filePath": "~workflow-runs/~route.lazy.tsx",
      "children": [
        "/workflow-runs/",
        "/workflow-runs/$workflowRunId"
      ]
    },
    "/workflows": {
      "filePath": "~workflows/~route.lazy.tsx",
      "children": [
        "/workflows/",
        "/workflows/$workflowId"
      ]
    },
    "/platform/": {
      "filePath": "~platform/~index.tsx",
      "parent": "/platform"
    },
    "/site/": {
      "filePath": "~site/~index.tsx",
      "parent": "/site"
    },
    "/envs/create": {
      "filePath": "~envs/~create.tsx",
      "parent": "/envs"
    },
    "/site/$siteId": {
      "filePath": "~site/~$siteId/~route.tsx",
      "parent": "/site",
      "children": [
        "/site/$siteId/",
        "/site/$siteId/edit",
        "/site/$siteId/host"
      ]
    },
    "/trigger/ag": {
      "filePath": "~trigger/~ag.tsx",
      "parent": "/trigger"
    },
    "/agEvents/": {
      "filePath": "~agEvents/~index.lazy.tsx",
      "parent": "/agEvents"
    },
    "/coms/": {
      "filePath": "~coms/~index.lazy.tsx",
      "parent": "/coms"
    },
    "/endpoint/": {
      "filePath": "~endpoint/~index.lazy.tsx",
      "parent": "/endpoint"
    },
    "/envs/": {
      "filePath": "~envs/~index.lazy.tsx",
      "parent": "/envs"
    },
    "/events/": {
      "filePath": "~events/~index.lazy.tsx",
      "parent": "/events"
    },
    "/gallery/": {
      "filePath": "~gallery/~index.lazy.tsx",
      "parent": "/gallery"
    },
    "/model/": {
      "filePath": "~model/~index.lazy.tsx",
      "parent": "/model"
    },
    "/platform-account/": {
      "filePath": "~platform-account/~index.lazy.tsx",
      "parent": "/platform-account"
    },
    "/play/": {
      "filePath": "~play/~index.lazy.tsx",
      "parent": "/play"
    },
    "/post/": {
      "filePath": "~post/~index.lazy.tsx",
      "parent": "/post"
    },
    "/resource/": {
      "filePath": "~resource/~index.lazy.tsx",
      "parent": "/resource"
    },
    "/session/": {
      "filePath": "~session/~index.lazy.tsx",
      "parent": "/session"
    },
    "/settings/": {
      "filePath": "~settings/~index.lazy.tsx",
      "parent": "/settings"
    },
    "/team/": {
      "filePath": "~team/~index.lazy.tsx",
      "parent": "/team"
    },
    "/tenant_settings/": {
      "filePath": "~tenant_settings/~index.lazy.tsx",
      "parent": "/tenant_settings"
    },
    "/workflow-runs/": {
      "filePath": "~workflow-runs/~index.lazy.tsx",
      "parent": "/workflow-runs"
    },
    "/workflows/": {
      "filePath": "~workflows/~index.lazy.tsx",
      "parent": "/workflows"
    },
    "/auth/login": {
      "filePath": "~auth/~login/~route.lazy.tsx",
      "parent": "/auth",
      "children": [
        "/auth/login/"
      ]
    },
    "/auth/register": {
      "filePath": "~auth/~register.lazy.tsx",
      "parent": "/auth"
    },
    "/coms/$comId": {
      "filePath": "~coms/~$comId/~route.lazy.tsx",
      "parent": "/coms",
      "children": [
        "/coms/$comId/",
        "/coms/$comId/run",
        "/coms/$comId/session",
        "/coms/$comId/team_builder",
        "/coms/$comId/type",
        "/coms/$comId/view"
      ]
    },
    "/coms/new": {
      "filePath": "~coms/~new/~route.lazy.tsx",
      "parent": "/coms",
      "children": [
        "/coms/new/instagram_team"
      ]
    },
    "/gallery/$galleryId": {
      "filePath": "~gallery/~$galleryId/~route.lazy.tsx",
      "parent": "/gallery"
    },
    "/platform-account/$platformAccountId": {
      "filePath": "~platform-account/~$platformAccountId/~route.lazy.tsx",
      "parent": "/platform-account",
      "children": [
        "/platform-account/$platformAccountId/"
      ]
    },
    "/platform-account/create": {
      "filePath": "~platform-account/~create.lazy.tsx",
      "parent": "/platform-account"
    },
    "/play/chat": {
      "filePath": "~play/~chat/~route.lazy.tsx",
      "parent": "/play",
      "children": [
        "/play/chat/",
        "/play/chat/$sessionId"
      ]
    },
    "/post/create": {
      "filePath": "~post/~create.lazy.tsx",
      "parent": "/post"
    },
    "/resource/$resId": {
      "filePath": "~resource/~$resId/~route.lazy.tsx",
      "parent": "/resource",
      "children": [
        "/resource/$resId/",
        "/resource/$resId/$sessionId/"
      ]
    },
    "/resource/new": {
      "filePath": "~resource/~new/~route.lazy.tsx",
      "parent": "/resource",
      "children": [
        "/resource/new/res"
      ]
    },
    "/session/$ssessionId": {
      "filePath": "~session/~$ssessionId/~route.lazy.tsx",
      "parent": "/session",
      "children": [
        "/session/$ssessionId/"
      ]
    },
    "/team/$teamId": {
      "filePath": "~team/~$teamId/~route.lazy.tsx",
      "parent": "/team",
      "children": [
        "/team/$teamId/new/"
      ]
    },
    "/tenant_settings/$tenantSettingId": {
      "filePath": "~tenant_settings/~$tenantSettingId/~route.lazy.tsx",
      "parent": "/tenant_settings",
      "children": [
        "/tenant_settings/$tenantSettingId/"
      ]
    },
    "/tenant_settings/model_client_settings": {
      "filePath": "~tenant_settings/~model_client_settings/~route.lazy.tsx",
      "parent": "/tenant_settings",
      "children": [
        "/tenant_settings/model_client_settings/"
      ]
    },
    "/trigger/$id": {
      "filePath": "~trigger/~$id.lazy.tsx",
      "parent": "/trigger"
    },
    "/workflow-runs/$workflowRunId": {
      "filePath": "~workflow-runs/~$workflowRunId/~route.lazy.tsx",
      "parent": "/workflow-runs",
      "children": [
        "/workflow-runs/$workflowRunId/",
        "/workflow-runs/$workflowRunId/additional-metadata",
        "/workflow-runs/$workflowRunId/chat",
        "/workflow-runs/$workflowRunId/input",
        "/workflow-runs/$workflowRunId/summary",
        "/workflow-runs/$workflowRunId/visualization",
        "/workflow-runs/$workflowRunId/stepRun/$stepRunId"
      ]
    },
    "/workflows/$workflowId": {
      "filePath": "~workflows/~$workflowId.lazy.tsx",
      "parent": "/workflows"
    },
    "/onboarding/create-tenant/": {
      "filePath": "~onboarding/~create-tenant/~index.tsx"
    },
    "/site/$siteId/": {
      "filePath": "~site/~$siteId/~index.tsx",
      "parent": "/site/$siteId"
    },
    "/site/create/": {
      "filePath": "~site/~create/~index.tsx",
      "parent": "/site"
    },
    "/site/$siteId/edit": {
      "filePath": "~site/~$siteId/~edit.tsx",
      "parent": "/site/$siteId"
    },
    "/site/$siteId/host": {
      "filePath": "~site/~$siteId/~host/~route.tsx",
      "parent": "/site/$siteId",
      "children": [
        "/site/$siteId/host/"
      ]
    },
    "/auth/login/": {
      "filePath": "~auth/~login/~index.lazy.tsx",
      "parent": "/auth/login"
    },
    "/coms/$comId/": {
      "filePath": "~coms/~$comId/~index.lazy.tsx",
      "parent": "/coms/$comId"
    },
    "/platform-account/$platformAccountId/": {
      "filePath": "~platform-account/~$platformAccountId/~index.lazy.tsx",
      "parent": "/platform-account/$platformAccountId"
    },
    "/play/chat/": {
      "filePath": "~play/~chat/~index.lazy.tsx",
      "parent": "/play/chat"
    },
    "/resource/$resId/": {
      "filePath": "~resource/~$resId/~index.lazy.tsx",
      "parent": "/resource/$resId"
    },
    "/session/$ssessionId/": {
      "filePath": "~session/~$ssessionId/~index.lazy.tsx",
      "parent": "/session/$ssessionId"
    },
    "/tenant_settings/$tenantSettingId/": {
      "filePath": "~tenant_settings/~$tenantSettingId/~index.lazy.tsx",
      "parent": "/tenant_settings/$tenantSettingId"
    },
    "/tenant_settings/model_client_settings/": {
      "filePath": "~tenant_settings/~model_client_settings/~index.lazy.tsx",
      "parent": "/tenant_settings/model_client_settings"
    },
    "/workflow-runs/$workflowRunId/": {
      "filePath": "~workflow-runs/~$workflowRunId/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/coms/$comId/run": {
      "filePath": "~coms/~$comId/~run/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/run/"
      ]
    },
    "/coms/$comId/session": {
      "filePath": "~coms/~$comId/~session/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/session/"
      ]
    },
    "/coms/$comId/team_builder": {
      "filePath": "~coms/~$comId/~team_builder/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/team_builder/"
      ]
    },
    "/coms/$comId/type": {
      "filePath": "~coms/~$comId/~type/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/type/modelClient",
        "/coms/$comId/type/assisant",
        "/coms/$comId/type/instagramTeam"
      ]
    },
    "/coms/$comId/view": {
      "filePath": "~coms/~$comId/~view/~route.lazy.tsx",
      "parent": "/coms/$comId",
      "children": [
        "/coms/$comId/view/$subComId"
      ]
    },
    "/coms/new/instagram_team": {
      "filePath": "~coms/~new/~instagram_team.lazy.tsx",
      "parent": "/coms/new"
    },
    "/play/chat/$sessionId": {
      "filePath": "~play/~chat/~$sessionId/~route.lazy.tsx",
      "parent": "/play/chat",
      "children": [
        "/play/chat/$sessionId/",
        "/play/chat/$sessionId/debug",
        "/play/chat/$sessionId/edit",
        "/play/chat/$sessionId/result",
        "/play/chat/$sessionId/state",
        "/play/chat/$sessionId/team"
      ]
    },
    "/resource/new/res": {
      "filePath": "~resource/~new/~res/~route.lazy.tsx",
      "parent": "/resource/new",
      "children": [
        "/resource/new/res/",
        "/resource/new/res/browser",
        "/resource/new/res/chat",
        "/resource/new/res/platform_account"
      ]
    },
    "/workflow-runs/$workflowRunId/additional-metadata": {
      "filePath": "~workflow-runs/~$workflowRunId/~additional-metadata.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflow-runs/$workflowRunId/chat": {
      "filePath": "~workflow-runs/~$workflowRunId/~chat/~route.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId",
      "children": [
        "/workflow-runs/$workflowRunId/chat/"
      ]
    },
    "/workflow-runs/$workflowRunId/input": {
      "filePath": "~workflow-runs/~$workflowRunId/~input.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflow-runs/$workflowRunId/summary": {
      "filePath": "~workflow-runs/~$workflowRunId/~summary.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId"
    },
    "/workflow-runs/$workflowRunId/visualization": {
      "filePath": "~workflow-runs/~$workflowRunId/~visualization/~route.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId",
      "children": [
        "/workflow-runs/$workflowRunId/visualization/"
      ]
    },
    "/play/chat/$sessionId/": {
      "filePath": "~play/~chat/~$sessionId/~index.tsx",
      "parent": "/play/chat/$sessionId"
    },
    "/site/$siteId/host/": {
      "filePath": "~site/~$siteId/~host/~index.tsx",
      "parent": "/site/$siteId/host"
    },
    "/coms/$comId/type/modelClient": {
      "filePath": "~coms/~$comId/~type/~modelClient.tsx",
      "parent": "/coms/$comId/type"
    },
    "/coms/$comId/run/": {
      "filePath": "~coms/~$comId/~run/~index.lazy.tsx",
      "parent": "/coms/$comId/run"
    },
    "/coms/$comId/session/": {
      "filePath": "~coms/~$comId/~session/~index.lazy.tsx",
      "parent": "/coms/$comId/session"
    },
    "/coms/$comId/team_builder/": {
      "filePath": "~coms/~$comId/~team_builder/~index.lazy.tsx",
      "parent": "/coms/$comId/team_builder"
    },
    "/resource/$resId/$sessionId/": {
      "filePath": "~resource/~$resId/~$sessionId/~index.lazy.tsx",
      "parent": "/resource/$resId"
    },
    "/resource/new/res/": {
      "filePath": "~resource/~new/~res/~index.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/team/$teamId/new/": {
      "filePath": "~team/~$teamId/~new/~index.lazy.tsx",
      "parent": "/team/$teamId"
    },
    "/workflow-runs/$workflowRunId/chat/": {
      "filePath": "~workflow-runs/~$workflowRunId/~chat/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId/chat"
    },
    "/workflow-runs/$workflowRunId/visualization/": {
      "filePath": "~workflow-runs/~$workflowRunId/~visualization/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId/visualization"
    },
    "/coms/$comId/type/assisant": {
      "filePath": "~coms/~$comId/~type/~assisant.lazy.tsx",
      "parent": "/coms/$comId/type"
    },
    "/coms/$comId/type/instagramTeam": {
      "filePath": "~coms/~$comId/~type/~instagramTeam.lazy.tsx",
      "parent": "/coms/$comId/type"
    },
    "/coms/$comId/view/$subComId": {
      "filePath": "~coms/~$comId/~view/~$subComId/~route.lazy.tsx",
      "parent": "/coms/$comId/view",
      "children": [
        "/coms/$comId/view/$subComId/"
      ]
    },
    "/play/chat/$sessionId/debug": {
      "filePath": "~play/~chat/~$sessionId/~debug.lazy.tsx",
      "parent": "/play/chat/$sessionId"
    },
    "/play/chat/$sessionId/edit": {
      "filePath": "~play/~chat/~$sessionId/~edit.lazy.tsx",
      "parent": "/play/chat/$sessionId"
    },
    "/play/chat/$sessionId/result": {
      "filePath": "~play/~chat/~$sessionId/~result.lazy.tsx",
      "parent": "/play/chat/$sessionId"
    },
    "/play/chat/$sessionId/state": {
      "filePath": "~play/~chat/~$sessionId/~state.lazy.tsx",
      "parent": "/play/chat/$sessionId"
    },
    "/play/chat/$sessionId/team": {
      "filePath": "~play/~chat/~$sessionId/~team.lazy.tsx",
      "parent": "/play/chat/$sessionId"
    },
    "/resource/new/res/browser": {
      "filePath": "~resource/~new/~res/~browser.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/resource/new/res/chat": {
      "filePath": "~resource/~new/~res/~chat.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/resource/new/res/platform_account": {
      "filePath": "~resource/~new/~res/~platform_account.lazy.tsx",
      "parent": "/resource/new/res"
    },
    "/workflow-runs/$workflowRunId/stepRun/$stepRunId": {
      "filePath": "~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~route.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId",
      "children": [
        "/workflow-runs/$workflowRunId/stepRun/$stepRunId/"
      ]
    },
    "/coms/$comId/view/$subComId/": {
      "filePath": "~coms/~$comId/~view/~$subComId/~index.lazy.tsx",
      "parent": "/coms/$comId/view/$subComId"
    },
    "/workflow-runs/$workflowRunId/stepRun/$stepRunId/": {
      "filePath": "~workflow-runs/~$workflowRunId/~stepRun/~$stepRunId/~index.lazy.tsx",
      "parent": "/workflow-runs/$workflowRunId/stepRun/$stepRunId"
    }
  }
}
ROUTE_MANIFEST_END */
