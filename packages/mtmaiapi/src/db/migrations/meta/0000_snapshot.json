{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.PopularPosts": {
      "name": "PopularPosts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "topic": {
          "name": "topic",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "hook": {
          "name": "hook",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "PopularPosts_id_key": {
          "name": "PopularPosts_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.InternalQueueItem": {
      "name": "InternalQueueItem",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "queue": {
          "name": "queue",
          "type": "InternalQueue",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "isQueued": {
          "name": "isQueued",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "priority": {
          "name": "priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "uniqueKey": {
          "name": "uniqueKey",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "InternalQueueItem_isQueued_tenantId_queue_priority_id_idx": {
          "name": "InternalQueueItem_isQueued_tenantId_queue_priority_id_idx",
          "columns": [
            {
              "expression": "isQueued",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            },
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "queue",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "priority",
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "InternalQueueItem_tenantId_queue_uniqueKey_key": {
          "name": "InternalQueueItem_tenantId_queue_uniqueKey_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "queue",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "uniqueKey",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "InternalQueueItem_priority_check": {
          "name": "InternalQueueItem_priority_check",
          "value": "(priority >= 1) AND (priority <= 4)"
        }
      },
      "policies": {},
      "isRLSEnabled": false
    },
    "public.SiteHost": {
      "name": "SiteHost",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "siteId": {
          "name": "siteId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "host": {
          "name": "host",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "SiteHost_id_key": {
          "name": "SiteHost_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "SiteHost_siteId_fkey": {
          "name": "SiteHost_siteId_fkey",
          "tableFrom": "SiteHost",
          "tableTo": "Site",
          "schemaTo": "public",
          "columnsFrom": [
            "siteId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Site": {
      "name": "Site",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enabled": {
          "name": "enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "Site_id_key": {
          "name": "Site_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Site_tenantId_fkey": {
          "name": "Site_tenantId_fkey",
          "tableFrom": "Site",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Env": {
      "name": "Env",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "appName": {
          "name": "appName",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Env_appName_idx": {
          "name": "Env_appName_idx",
          "columns": [
            {
              "expression": "appName",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.ChatSuggestion": {
      "name": "ChatSuggestion",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "documentId": {
          "name": "documentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "documentCreatedAt": {
          "name": "documentCreatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "originalText": {
          "name": "originalText",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "suggestedText": {
          "name": "suggestedText",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "isResolved": {
          "name": "isResolved",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "ChatSuggestion_id_key": {
          "name": "ChatSuggestion_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Event": {
      "name": "Event",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "replayedFromId": {
          "name": "replayedFromId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "additionalMetadata": {
          "name": "additionalMetadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "insertOrder": {
          "name": "insertOrder",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "Event_createdAt_idx": {
          "name": "Event_createdAt_idx",
          "columns": [
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Event_id_key": {
          "name": "Event_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Event_tenantId_createdAt_idx": {
          "name": "Event_tenantId_createdAt_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Event_tenantId_idx": {
          "name": "Event_tenantId_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Event_replayedFromId_fkey": {
          "name": "Event_replayedFromId_fkey",
          "tableFrom": "Event",
          "tableTo": "Event",
          "schemaTo": "public",
          "columnsFrom": [
            "replayedFromId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.EventKey": {
      "name": "EventKey",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "EventKey_key_tenantId_key": {
          "name": "EventKey_key_tenantId_key",
          "columns": [
            {
              "expression": "key",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Lease": {
      "name": "Lease",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "resourceId": {
          "name": "resourceId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "kind": {
          "name": "kind",
          "type": "LeaseKind",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Lease_tenantId_kind_resourceId_key": {
          "name": "Lease_tenantId_kind_resourceId_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "kind",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "resourceId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Endpoint": {
      "name": "Endpoint",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enabled": {
          "name": "enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "priority": {
          "name": "priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {},
      "foreignKeys": {
        "Endpoint_tenantId_fkey": {
          "name": "Endpoint_tenantId_fkey",
          "tableFrom": "Endpoint",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Post": {
      "name": "Post",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "State",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'QUEUE'"
        },
        "publishDate": {
          "name": "publishDate",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "parentPostId": {
          "name": "parentPostId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "releaseId": {
          "name": "releaseId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "releaseURL": {
          "name": "releaseURL",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "settings": {
          "name": "settings",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "submittedForOrganizationId": {
          "name": "submittedForOrganizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "lastMessageId": {
          "name": "lastMessageId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "siteId": {
          "name": "siteId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "authorId": {
          "name": "authorId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'DRAFT'"
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Post_createdAt_idx": {
          "name": "Post_createdAt_idx",
          "columns": [
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_deletedAt_idx": {
          "name": "Post_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_id_key": {
          "name": "Post_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_lastMessageId_idx": {
          "name": "Post_lastMessageId_idx",
          "columns": [
            {
              "expression": "lastMessageId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_parentPostId_idx": {
          "name": "Post_parentPostId_idx",
          "columns": [
            {
              "expression": "parentPostId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_publishDate_idx": {
          "name": "Post_publishDate_idx",
          "columns": [
            {
              "expression": "publishDate",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_releaseURL_idx": {
          "name": "Post_releaseURL_idx",
          "columns": [
            {
              "expression": "releaseURL",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_state_idx": {
          "name": "Post_state_idx",
          "columns": [
            {
              "expression": "state",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_tenantId_idx": {
          "name": "Post_tenantId_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Post_updatedAt_idx": {
          "name": "Post_updatedAt_idx",
          "columns": [
            {
              "expression": "updatedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Post_authorId_fkey": {
          "name": "Post_authorId_fkey",
          "tableFrom": "Post",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "authorId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Post_lastMessageId_fkey": {
          "name": "Post_lastMessageId_fkey",
          "tableFrom": "Post",
          "tableTo": "Messages",
          "schemaTo": "public",
          "columnsFrom": [
            "lastMessageId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "Post_parentPostId_fkey": {
          "name": "Post_parentPostId_fkey",
          "tableFrom": "Post",
          "tableTo": "Post",
          "schemaTo": "public",
          "columnsFrom": [
            "parentPostId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "Post_siteId_fkey": {
          "name": "Post_siteId_fkey",
          "tableFrom": "Post",
          "tableTo": "Site",
          "schemaTo": "public",
          "columnsFrom": [
            "siteId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Post_tenantId_fkey": {
          "name": "Post_tenantId_fkey",
          "tableFrom": "Post",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Queue": {
      "name": "Queue",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "lastActive": {
          "name": "lastActive",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "Queue_tenantId_lastActive_idx": {
          "name": "Queue_tenantId_lastActive_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "lastActive",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Queue_tenantId_name_key": {
          "name": "Queue_tenantId_name_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.PlatformAccount": {
      "name": "PlatformAccount",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "platform": {
          "name": "platform",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "lastUsedAt": {
          "name": "lastUsedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "enabled": {
          "name": "enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "properties": {
          "name": "properties",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "comment": {
          "name": "comment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "PlatformAccount_properties_gin_idx": {
          "name": "PlatformAccount_properties_gin_idx",
          "columns": [
            {
              "expression": "properties",
              "asc": true,
              "nulls": "last",
              "opclass": "jsonb_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "PlatformAccount_tags_idx": {
          "name": "PlatformAccount_tags_idx",
          "columns": [
            {
              "expression": "tags",
              "asc": true,
              "nulls": "last",
              "opclass": "array_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.QueueItem": {
      "name": "QueueItem",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "stepRunId": {
          "name": "stepRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "stepId": {
          "name": "stepId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "actionId": {
          "name": "actionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scheduleTimeoutAt": {
          "name": "scheduleTimeoutAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "stepTimeout": {
          "name": "stepTimeout",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "priority": {
          "name": "priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "isQueued": {
          "name": "isQueued",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "queue": {
          "name": "queue",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "sticky": {
          "name": "sticky",
          "type": "StickyStrategy",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "desiredWorkerId": {
          "name": "desiredWorkerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "QueueItem_isQueued_priority_tenantId_queue_id_idx_2": {
          "name": "QueueItem_isQueued_priority_tenantId_queue_id_idx_2",
          "columns": [
            {
              "expression": "isQueued",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            },
            {
              "expression": "queue",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            },
            {
              "expression": "priority",
              "asc": false,
              "nulls": "first",
              "opclass": "bool_ops",
              "isExpression": false
            },
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "QueueItem_priority_check": {
          "name": "QueueItem_priority_check",
          "value": "(priority >= 1) AND (priority <= 4)"
        }
      },
      "policies": {},
      "isRLSEnabled": false
    },
    "public.SecurityCheckIdent": {
      "name": "SecurityCheckIdent",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {
        "SecurityCheckIdent_id_key": {
          "name": "SecurityCheckIdent_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.SemaphoreQueueItem": {
      "name": "SemaphoreQueueItem",
      "schema": "",
      "columns": {
        "stepRunId": {
          "name": "stepRunId",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "workerId": {
          "name": "workerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "SemaphoreQueueItem_stepRunId_key": {
          "name": "SemaphoreQueueItem_stepRunId_key",
          "columns": [
            {
              "expression": "stepRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "SemaphoreQueueItem_tenantId_workerId_idx": {
          "name": "SemaphoreQueueItem_tenantId_workerId_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "workerId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.SystemConfig": {
      "name": "SystemConfig",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "isDefault": {
          "name": "isDefault",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "SystemConfig_name_unique": {
          "columns": [
            "name"
          ],
          "nullsNotDistinct": false,
          "name": "SystemConfig_name_unique"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.StepRunEvent": {
      "name": "StepRunEvent",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": false,
          "notNull": true
        },
        "timeFirstSeen": {
          "name": "timeFirstSeen",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "timeLastSeen": {
          "name": "timeLastSeen",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "stepRunId": {
          "name": "stepRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "workflowRunId": {
          "name": "workflowRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "reason": {
          "name": "reason",
          "type": "StepRunEventReason",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "severity": {
          "name": "severity",
          "type": "StepRunEventSeverity",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "count": {
          "name": "count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "StepRunEvent_id_key": {
          "name": "StepRunEvent_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRunEvent_stepRunId_idx": {
          "name": "StepRunEvent_stepRunId_idx",
          "columns": [
            {
              "expression": "stepRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRunEvent_workflowRunId_idx": {
          "name": "StepRunEvent_workflowRunId_idx",
          "columns": [
            {
              "expression": "workflowRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.TimeoutQueueItem": {
      "name": "TimeoutQueueItem",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "stepRunId": {
          "name": "stepRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "retryCount": {
          "name": "retryCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "timeoutAt": {
          "name": "timeoutAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "isQueued": {
          "name": "isQueued",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "TimeoutQueueItem_stepRunId_retryCount_key": {
          "name": "TimeoutQueueItem_stepRunId_retryCount_key",
          "columns": [
            {
              "expression": "stepRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops",
              "isExpression": false
            },
            {
              "expression": "retryCount",
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "TimeoutQueueItem_tenantId_isQueued_timeoutAt_idx": {
          "name": "TimeoutQueueItem_tenantId_isQueued_timeoutAt_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "isQueued",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "timeoutAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Vote": {
      "name": "Vote",
      "schema": "",
      "columns": {
        "chatId": {
          "name": "chatId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "messageId": {
          "name": "messageId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "isUpvoted": {
          "name": "isUpvoted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Vote_chatId_messageId_key": {
          "name": "Vote_chatId_messageId_key",
          "columns": [
            {
              "expression": "chatId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "messageId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowRun": {
      "name": "WorkflowRun",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "displayName": {
          "name": "displayName",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workflowVersionId": {
          "name": "workflowVersionId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "concurrencyGroupId": {
          "name": "concurrencyGroupId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "WorkflowRunStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "startedAt": {
          "name": "startedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "finishedAt": {
          "name": "finishedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "duration": {
          "name": "duration",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "priority": {
          "name": "priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "parentId": {
          "name": "parentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "parentStepRunId": {
          "name": "parentStepRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "childIndex": {
          "name": "childIndex",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "childKey": {
          "name": "childKey",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additionalMetadata": {
          "name": "additionalMetadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "insertOrder": {
          "name": "insertOrder",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "byUserId": {
          "name": "byUserId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "WorkflowRun_byUserId_idx": {
          "name": "WorkflowRun_byUserId_idx",
          "columns": [
            {
              "expression": "byUserId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_createdAt_idx": {
          "name": "WorkflowRun_createdAt_idx",
          "columns": [
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_deletedAt_idx": {
          "name": "WorkflowRun_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_finishedAt_idx": {
          "name": "WorkflowRun_finishedAt_idx",
          "columns": [
            {
              "expression": "finishedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_id_key": {
          "name": "WorkflowRun_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_parentId_parentStepRunId_childIndex_key": {
          "name": "WorkflowRun_parentId_parentStepRunId_childIndex_key",
          "columns": [
            {
              "expression": "parentId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "parentStepRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops",
              "isExpression": false
            },
            {
              "expression": "childIndex",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(\"deletedAt\" IS NULL)",
          "with": {}
        },
        "WorkflowRun_parentId_parentStepRunId_childKey_key": {
          "name": "WorkflowRun_parentId_parentStepRunId_childKey_key",
          "columns": [
            {
              "expression": "parentId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "parentStepRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "childKey",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_parentStepRunId": {
          "name": "WorkflowRun_parentStepRunId",
          "columns": [
            {
              "expression": "parentStepRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_status_idx": {
          "name": "WorkflowRun_status_idx",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_tenantId_createdAt_idx": {
          "name": "WorkflowRun_tenantId_createdAt_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_tenantId_idx": {
          "name": "WorkflowRun_tenantId_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRun_workflowVersionId_idx": {
          "name": "WorkflowRun_workflowVersionId_idx",
          "columns": [
            {
              "expression": "workflowVersionId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_workflowrun_concurrency": {
          "name": "idx_workflowrun_concurrency",
          "columns": [
            {
              "expression": "concurrencyGroupId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_workflowrun_main": {
          "name": "idx_workflowrun_main",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "workflowVersionId",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkflowRun_byUserId_fkey": {
          "name": "WorkflowRun_byUserId_fkey",
          "tableFrom": "WorkflowRun",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "byUserId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "WorkflowRun_parentId_fkey": {
          "name": "WorkflowRun_parentId_fkey",
          "tableFrom": "WorkflowRun",
          "tableTo": "WorkflowRun",
          "schemaTo": "public",
          "columnsFrom": [
            "parentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "WorkflowRun_parentStepRunId_fkey": {
          "name": "WorkflowRun_parentStepRunId_fkey",
          "tableFrom": "WorkflowRun",
          "tableTo": "StepRun",
          "schemaTo": "public",
          "columnsFrom": [
            "parentStepRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowRunDedupe": {
      "name": "WorkflowRunDedupe",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workflowId": {
          "name": "workflowId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workflowRunId": {
          "name": "workflowRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "WorkflowRunDedupe_id_key": {
          "name": "WorkflowRunDedupe_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRunDedupe_tenantId_value_idx": {
          "name": "WorkflowRunDedupe_tenantId_value_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "value",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRunDedupe_tenantId_workflowId_value_key": {
          "name": "WorkflowRunDedupe_tenantId_workflowId_value_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "workflowId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "value",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Tenant": {
      "name": "Tenant",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "analyticsOptOut": {
          "name": "analyticsOptOut",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "controllerPartitionId": {
          "name": "controllerPartitionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "schedulerPartitionId": {
          "name": "schedulerPartitionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "workerPartitionId": {
          "name": "workerPartitionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "dataRetentionPeriod": {
          "name": "dataRetentionPeriod",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'720h'"
        },
        "alertMemberEmails": {
          "name": "alertMemberEmails",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "Tenant_controllerPartitionId_idx": {
          "name": "Tenant_controllerPartitionId_idx",
          "columns": [
            {
              "expression": "controllerPartitionId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Tenant_id_key": {
          "name": "Tenant_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Tenant_slug_key": {
          "name": "Tenant_slug_key",
          "columns": [
            {
              "expression": "slug",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Tenant_workerPartitionId_idx": {
          "name": "Tenant_workerPartitionId_idx",
          "columns": [
            {
              "expression": "workerPartitionId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Tenant_controllerPartitionId_fkey": {
          "name": "Tenant_controllerPartitionId_fkey",
          "tableFrom": "Tenant",
          "tableTo": "ControllerPartition",
          "schemaTo": "public",
          "columnsFrom": [
            "controllerPartitionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "set null"
        },
        "Tenant_schedulerPartitionId_fkey": {
          "name": "Tenant_schedulerPartitionId_fkey",
          "tableFrom": "Tenant",
          "tableTo": "SchedulerPartition",
          "schemaTo": "public",
          "columnsFrom": [
            "schedulerPartitionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "set null"
        },
        "Tenant_workerPartitionId_fkey": {
          "name": "Tenant_workerPartitionId_fkey",
          "tableFrom": "Tenant",
          "tableTo": "TenantWorkerPartition",
          "schemaTo": "public",
          "columnsFrom": [
            "workerPartitionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "set null"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.APIToken": {
      "name": "APIToken",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "revoked": {
          "name": "revoked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "nextAlertAt": {
          "name": "nextAlertAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "internal": {
          "name": "internal",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "APIToken_tenantId_fkey": {
          "name": "APIToken_tenantId_fkey",
          "tableFrom": "APIToken",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Action": {
      "name": "Action",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "actionId": {
          "name": "actionId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Action_id_key": {
          "name": "Action_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Action_tenantId_fkey": {
          "name": "Action_tenantId_fkey",
          "tableFrom": "Action",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.AgentNode": {
      "name": "AgentNode",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "parentId": {
          "name": "parentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "childrenId": {
          "name": "childrenId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "config": {
          "name": "config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "state": {
          "name": "state",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "inputs": {
          "name": "inputs",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "outputs": {
          "name": "outputs",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "IsFinal": {
          "name": "IsFinal",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "IsStart": {
          "name": "IsStart",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "tools": {
          "name": "tools",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "lastRunId": {
          "name": "lastRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "resourceId": {
          "name": "resourceId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "resourceType": {
          "name": "resourceType",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "AgentNode_id_key": {
          "name": "AgentNode_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "AgentNode_tenantId_id_idx": {
          "name": "AgentNode_tenantId_id_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "AgentNode_tenantId_fkey": {
          "name": "AgentNode_tenantId_fkey",
          "tableFrom": "AgentNode",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.AgentNodeRun": {
      "name": "AgentNodeRun",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "nodeId": {
          "name": "nodeId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "input": {
          "name": "input",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "output": {
          "name": "output",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'start'"
        },
        "workflowRunId": {
          "name": "workflowRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "AgentNodeRun_id_key": {
          "name": "AgentNodeRun_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "AgentNodeRun_tenantId_id_idx": {
          "name": "AgentNodeRun_tenantId_id_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "AgentNodeRun_nodeId_fkey": {
          "name": "AgentNodeRun_nodeId_fkey",
          "tableFrom": "AgentNodeRun",
          "tableTo": "AgentNode",
          "schemaTo": "public",
          "columnsFrom": [
            "nodeId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "AgentNodeRun_tenantId_fkey": {
          "name": "AgentNodeRun_tenantId_fkey",
          "tableFrom": "AgentNodeRun",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Chat": {
      "name": "Chat",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "activateArtId": {
          "name": "activateArtId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "Chat_id_key": {
          "name": "Chat_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Chat_tenantId_fkey": {
          "name": "Chat_tenantId_fkey",
          "tableFrom": "Chat",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Chat_userId_fkey": {
          "name": "Chat_userId_fkey",
          "tableFrom": "Chat",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Artifact": {
      "name": "Artifact",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "artId": {
          "name": "artId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "icon": {
          "name": "icon",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "prevId": {
          "name": "prevId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "nextId": {
          "name": "nextId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "chatId": {
          "name": "chatId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Artifact_id_key": {
          "name": "Artifact_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Artifact_chatId_fkey": {
          "name": "Artifact_chatId_fkey",
          "tableFrom": "Artifact",
          "tableTo": "Chat",
          "schemaTo": "public",
          "columnsFrom": [
            "chatId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Artifact_tenantId_fkey": {
          "name": "Artifact_tenantId_fkey",
          "tableFrom": "Artifact",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Assisant": {
      "name": "Assisant",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "config": {
          "name": "config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "Assisant_id_key": {
          "name": "Assisant_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Assisant_tenantId_fkey": {
          "name": "Assisant_tenantId_fkey",
          "tableFrom": "Assisant",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Blog": {
      "name": "Blog",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "configId": {
          "name": "configId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "enabled": {
          "name": "enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Blog_id_key": {
          "name": "Blog_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Blog_slug_key": {
          "name": "Blog_slug_key",
          "columns": [
            {
              "expression": "slug",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Blog_tenantId_fkey": {
          "name": "Blog_tenantId_fkey",
          "tableFrom": "Blog",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.BlogConfig": {
      "name": "BlogConfig",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "blogId": {
          "name": "blogId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "BlogConfig_blogId_key": {
          "name": "BlogConfig_blogId_key",
          "columns": [
            {
              "expression": "blogId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "BlogConfig_id_key": {
          "name": "BlogConfig_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "BlogConfig_blogId_fkey": {
          "name": "BlogConfig_blogId_fkey",
          "tableFrom": "BlogConfig",
          "tableTo": "Blog",
          "schemaTo": "public",
          "columnsFrom": [
            "blogId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.User": {
      "name": "User",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "User_email_key": {
          "name": "User_email_key",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "User_id_key": {
          "name": "User_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.BlogPost": {
      "name": "BlogPost",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "blogId": {
          "name": "blogId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "authorId": {
          "name": "authorId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "commentCount": {
          "name": "commentCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "likeCount": {
          "name": "likeCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "BlogPost_id_key": {
          "name": "BlogPost_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "BlogPost_slug_key": {
          "name": "BlogPost_slug_key",
          "columns": [
            {
              "expression": "slug",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "BlogPost_authorId_fkey": {
          "name": "BlogPost_authorId_fkey",
          "tableFrom": "BlogPost",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "authorId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "BlogPost_blogId_fkey": {
          "name": "BlogPost_blogId_fkey",
          "tableFrom": "BlogPost",
          "tableTo": "Blog",
          "schemaTo": "public",
          "columnsFrom": [
            "blogId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "BlogPost_tenantId_fkey": {
          "name": "BlogPost_tenantId_fkey",
          "tableFrom": "BlogPost",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.ChatMessage": {
      "name": "ChatMessage",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "chatId": {
          "name": "chatId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "ChatMessage_id_key": {
          "name": "ChatMessage_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ChatMessage_chatId_fkey": {
          "name": "ChatMessage_chatId_fkey",
          "tableFrom": "ChatMessage",
          "tableTo": "Chat",
          "schemaTo": "public",
          "columnsFrom": [
            "chatId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Comment": {
      "name": "Comment",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "blogId": {
          "name": "blogId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "authorId": {
          "name": "authorId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Comment_id_key": {
          "name": "Comment_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Comment_authorId_fkey": {
          "name": "Comment_authorId_fkey",
          "tableFrom": "Comment",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "authorId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Comment_blogId_fkey": {
          "name": "Comment_blogId_fkey",
          "tableFrom": "Comment",
          "tableTo": "BlogPost",
          "schemaTo": "public",
          "columnsFrom": [
            "blogId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Ticker": {
      "name": "Ticker",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "lastHeartbeatAt": {
          "name": "lastHeartbeatAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "isActive": {
          "name": "isActive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "Ticker_id_key": {
          "name": "Ticker_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.GetGroupKeyRun": {
      "name": "GetGroupKeyRun",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workflowRunId": {
          "name": "workflowRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workerId": {
          "name": "workerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "tickerId": {
          "name": "tickerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "StepRunStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "input": {
          "name": "input",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "output": {
          "name": "output",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "requeueAfter": {
          "name": "requeueAfter",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "scheduleTimeoutAt": {
          "name": "scheduleTimeoutAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "startedAt": {
          "name": "startedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "finishedAt": {
          "name": "finishedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "timeoutAt": {
          "name": "timeoutAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledAt": {
          "name": "cancelledAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledReason": {
          "name": "cancelledReason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledError": {
          "name": "cancelledError",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "GetGroupKeyRun_createdAt_idx": {
          "name": "GetGroupKeyRun_createdAt_idx",
          "columns": [
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "GetGroupKeyRun_deletedAt_idx": {
          "name": "GetGroupKeyRun_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "GetGroupKeyRun_id_key": {
          "name": "GetGroupKeyRun_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "GetGroupKeyRun_status_deletedAt_timeoutAt_idx": {
          "name": "GetGroupKeyRun_status_deletedAt_timeoutAt_idx",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            },
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "timeoutAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "GetGroupKeyRun_tenantId_deletedAt_status_idx": {
          "name": "GetGroupKeyRun_tenantId_deletedAt_status_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "GetGroupKeyRun_tenantId_idx": {
          "name": "GetGroupKeyRun_tenantId_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "GetGroupKeyRun_workerId_idx": {
          "name": "GetGroupKeyRun_workerId_idx",
          "columns": [
            {
              "expression": "workerId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "GetGroupKeyRun_workflowRunId_key": {
          "name": "GetGroupKeyRun_workflowRunId_key",
          "columns": [
            {
              "expression": "workflowRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "GetGroupKeyRun_tickerId_fkey": {
          "name": "GetGroupKeyRun_tickerId_fkey",
          "tableFrom": "GetGroupKeyRun",
          "tableTo": "Ticker",
          "schemaTo": "public",
          "columnsFrom": [
            "tickerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "GetGroupKeyRun_workerId_fkey": {
          "name": "GetGroupKeyRun_workerId_fkey",
          "tableFrom": "GetGroupKeyRun",
          "tableTo": "Worker",
          "schemaTo": "public",
          "columnsFrom": [
            "workerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "GetGroupKeyRun_workflowRunId_fkey": {
          "name": "GetGroupKeyRun_workflowRunId_fkey",
          "tableFrom": "GetGroupKeyRun",
          "tableTo": "WorkflowRun",
          "schemaTo": "public",
          "columnsFrom": [
            "workflowRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Worker": {
      "name": "Worker",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "WorkerType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'SELFHOSTED'"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "lastHeartbeatAt": {
          "name": "lastHeartbeatAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "isPaused": {
          "name": "isPaused",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "isActive": {
          "name": "isActive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "lastListenerEstablished": {
          "name": "lastListenerEstablished",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "dispatcherId": {
          "name": "dispatcherId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "maxRuns": {
          "name": "maxRuns",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 100
        },
        "webhookId": {
          "name": "webhookId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "sdkVersion": {
          "name": "sdkVersion",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "language": {
          "name": "language",
          "type": "WorkerSDKS",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "languageVersion": {
          "name": "languageVersion",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "os": {
          "name": "os",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "runtimeExtra": {
          "name": "runtimeExtra",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "Worker_id_key": {
          "name": "Worker_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Worker_webhookId_key": {
          "name": "Worker_webhookId_key",
          "columns": [
            {
              "expression": "webhookId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Worker_dispatcherId_fkey": {
          "name": "Worker_dispatcherId_fkey",
          "tableFrom": "Worker",
          "tableTo": "Dispatcher",
          "schemaTo": "public",
          "columnsFrom": [
            "dispatcherId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "Worker_webhookId_fkey": {
          "name": "Worker_webhookId_fkey",
          "tableFrom": "Worker",
          "tableTo": "WebhookWorker",
          "schemaTo": "public",
          "columnsFrom": [
            "webhookId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Integration": {
      "name": "Integration",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "internalId": {
          "name": "internalId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "organizationId": {
          "name": "organizationId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "providerIdentifier": {
          "name": "providerIdentifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "disabled": {
          "name": "disabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "tokenExpiration": {
          "name": "tokenExpiration",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "refreshToken": {
          "name": "refreshToken",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "profile": {
          "name": "profile",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "inBetweenSteps": {
          "name": "inBetweenSteps",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "refreshNeeded": {
          "name": "refreshNeeded",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "postingTimes": {
          "name": "postingTimes",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'[{\"time\":120}, {\"time\":400}, {\"time\":700}]'"
        },
        "customInstanceDetails": {
          "name": "customInstanceDetails",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "customerId": {
          "name": "customerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "Integration_deletedAt_idx": {
          "name": "Integration_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Integration_id_key": {
          "name": "Integration_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Integration_organizationId_internalId_key": {
          "name": "Integration_organizationId_internalId_key",
          "columns": [
            {
              "expression": "organizationId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "internalId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Integration_updatedAt_idx": {
          "name": "Integration_updatedAt_idx",
          "columns": [
            {
              "expression": "updatedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Integration_tenantId_fkey": {
          "name": "Integration_tenantId_fkey",
          "tableFrom": "Integration",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowVersion": {
      "name": "WorkflowVersion",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "checksum": {
          "name": "checksum",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "version": {
          "name": "version",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "order": {
          "name": "order",
          "type": "bigserial",
          "primaryKey": false,
          "notNull": true
        },
        "workflowId": {
          "name": "workflowId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "sticky": {
          "name": "sticky",
          "type": "StickyStrategy",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "onFailureJobId": {
          "name": "onFailureJobId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "kind": {
          "name": "kind",
          "type": "WorkflowKind",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'DAG'"
        },
        "scheduleTimeout": {
          "name": "scheduleTimeout",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'5m'"
        },
        "defaultPriority": {
          "name": "defaultPriority",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "WorkflowVersion_deletedAt_idx": {
          "name": "WorkflowVersion_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowVersion_id_key": {
          "name": "WorkflowVersion_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowVersion_onFailureJobId_key": {
          "name": "WorkflowVersion_onFailureJobId_key",
          "columns": [
            {
              "expression": "onFailureJobId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_workflow_version_workflow_id_order": {
          "name": "idx_workflow_version_workflow_id_order",
          "columns": [
            {
              "expression": "workflowId",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            },
            {
              "expression": "order",
              "asc": false,
              "nulls": "first",
              "opclass": "int8_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(\"deletedAt\" IS NULL)",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkflowVersion_onFailureJobId_fkey": {
          "name": "WorkflowVersion_onFailureJobId_fkey",
          "tableFrom": "WorkflowVersion",
          "tableTo": "Job",
          "schemaTo": "public",
          "columnsFrom": [
            "onFailureJobId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "WorkflowVersion_workflowId_fkey": {
          "name": "WorkflowVersion_workflowId_fkey",
          "tableFrom": "WorkflowVersion",
          "tableTo": "Workflow",
          "schemaTo": "public",
          "columnsFrom": [
            "workflowId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Job": {
      "name": "Job",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workflowVersionId": {
          "name": "workflowVersionId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "timeout": {
          "name": "timeout",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "kind": {
          "name": "kind",
          "type": "JobKind",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'DEFAULT'"
        }
      },
      "indexes": {
        "Job_id_key": {
          "name": "Job_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Job_workflowVersionId_name_key": {
          "name": "Job_workflowVersionId_name_key",
          "columns": [
            {
              "expression": "workflowVersionId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Job_workflowVersionId_fkey": {
          "name": "Job_workflowVersionId_fkey",
          "tableFrom": "Job",
          "tableTo": "WorkflowVersion",
          "schemaTo": "public",
          "columnsFrom": [
            "workflowVersionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.JobRun": {
      "name": "JobRun",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workflowRunId": {
          "name": "workflowRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "jobId": {
          "name": "jobId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tickerId": {
          "name": "tickerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "JobRunStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "result": {
          "name": "result",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "startedAt": {
          "name": "startedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "finishedAt": {
          "name": "finishedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "timeoutAt": {
          "name": "timeoutAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledAt": {
          "name": "cancelledAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledReason": {
          "name": "cancelledReason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledError": {
          "name": "cancelledError",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "JobRun_deletedAt_idx": {
          "name": "JobRun_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "JobRun_id_key": {
          "name": "JobRun_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "JobRun_workflowRunId_tenantId_idx": {
          "name": "JobRun_workflowRunId_tenantId_idx",
          "columns": [
            {
              "expression": "workflowRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "JobRun_workflowRunId_fkey": {
          "name": "JobRun_workflowRunId_fkey",
          "tableFrom": "JobRun",
          "tableTo": "WorkflowRun",
          "schemaTo": "public",
          "columnsFrom": [
            "workflowRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.JobRunLookupData": {
      "name": "JobRunLookupData",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "jobRunId": {
          "name": "jobRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "JobRunLookupData_id_key": {
          "name": "JobRunLookupData_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "JobRunLookupData_jobRunId_key": {
          "name": "JobRunLookupData_jobRunId_key",
          "columns": [
            {
              "expression": "jobRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "JobRunLookupData_jobRunId_tenantId_key": {
          "name": "JobRunLookupData_jobRunId_tenantId_key",
          "columns": [
            {
              "expression": "jobRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "JobRunLookupData_jobRunId_fkey": {
          "name": "JobRunLookupData_jobRunId_fkey",
          "tableFrom": "JobRunLookupData",
          "tableTo": "JobRun",
          "schemaTo": "public",
          "columnsFrom": [
            "jobRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.StepRun": {
      "name": "StepRun",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "jobRunId": {
          "name": "jobRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "stepId": {
          "name": "stepId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "order": {
          "name": "order",
          "type": "bigserial",
          "primaryKey": false,
          "notNull": true
        },
        "queue": {
          "name": "queue",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'default'"
        },
        "priority": {
          "name": "priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "workerId": {
          "name": "workerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "tickerId": {
          "name": "tickerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "StepRunStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "input": {
          "name": "input",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "output": {
          "name": "output",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "inputSchema": {
          "name": "inputSchema",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "requeueAfter": {
          "name": "requeueAfter",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "scheduleTimeoutAt": {
          "name": "scheduleTimeoutAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "retryCount": {
          "name": "retryCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "internalRetryCount": {
          "name": "internalRetryCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "startedAt": {
          "name": "startedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "finishedAt": {
          "name": "finishedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "timeoutAt": {
          "name": "timeoutAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledAt": {
          "name": "cancelledAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledReason": {
          "name": "cancelledReason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledError": {
          "name": "cancelledError",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "callerFiles": {
          "name": "callerFiles",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "gitRepoBranch": {
          "name": "gitRepoBranch",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "semaphoreReleased": {
          "name": "semaphoreReleased",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "StepRun_createdAt_idx": {
          "name": "StepRun_createdAt_idx",
          "columns": [
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRun_deletedAt_idx": {
          "name": "StepRun_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRun_id_key": {
          "name": "StepRun_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRun_id_tenantId_idx": {
          "name": "StepRun_id_tenantId_idx",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRun_jobRunId_status_idx": {
          "name": "StepRun_jobRunId_status_idx",
          "columns": [
            {
              "expression": "jobRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            },
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRun_jobRunId_status_tenantId_idx": {
          "name": "StepRun_jobRunId_status_tenantId_idx",
          "columns": [
            {
              "expression": "jobRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            },
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            },
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(status = 'PENDING'::\"StepRunStatus\")",
          "with": {}
        },
        "StepRun_jobRunId_tenantId_order_idx": {
          "name": "StepRun_jobRunId_tenantId_order_idx",
          "columns": [
            {
              "expression": "jobRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            },
            {
              "expression": "order",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRun_stepId_idx": {
          "name": "StepRun_stepId_idx",
          "columns": [
            {
              "expression": "stepId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRun_tenantId_idx": {
          "name": "StepRun_tenantId_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepRun_workerId_idx": {
          "name": "StepRun_workerId_idx",
          "columns": [
            {
              "expression": "workerId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "StepRun_jobRunId_fkey": {
          "name": "StepRun_jobRunId_fkey",
          "tableFrom": "StepRun",
          "tableTo": "JobRun",
          "schemaTo": "public",
          "columnsFrom": [
            "jobRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "StepRun_workerId_fkey": {
          "name": "StepRun_workerId_fkey",
          "tableFrom": "StepRun",
          "tableTo": "Worker",
          "schemaTo": "public",
          "columnsFrom": [
            "workerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.LogLine": {
      "name": "LogLine",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "stepRunId": {
          "name": "stepRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "level": {
          "name": "level",
          "type": "LogLineLevel",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'INFO'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "LogLine_stepRunId_fkey": {
          "name": "LogLine_stepRunId_fkey",
          "tableFrom": "LogLine",
          "tableTo": "StepRun",
          "schemaTo": "public",
          "columnsFrom": [
            "stepRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Media": {
      "name": "Media",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "path": {
          "name": "path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Media_id_key": {
          "name": "Media_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Media_tenantId_idx": {
          "name": "Media_tenantId_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Media_tenantId_fkey": {
          "name": "Media_tenantId_fkey",
          "tableFrom": "Media",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.MessagesGroup": {
      "name": "MessagesGroup",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "MessagesGroup_createdAt_idx": {
          "name": "MessagesGroup_createdAt_idx",
          "columns": [
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "MessagesGroup_id_key": {
          "name": "MessagesGroup_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "MessagesGroup_updatedAt_idx": {
          "name": "MessagesGroup_updatedAt_idx",
          "columns": [
            {
              "expression": "updatedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Messages": {
      "name": "Messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "from": {
          "name": "from",
          "type": "From",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "groupId": {
          "name": "groupId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "special": {
          "name": "special",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "Messages_createdAt_idx": {
          "name": "Messages_createdAt_idx",
          "columns": [
            {
              "expression": "createdAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Messages_deletedAt_idx": {
          "name": "Messages_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Messages_groupId_idx": {
          "name": "Messages_groupId_idx",
          "columns": [
            {
              "expression": "groupId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Messages_id_key": {
          "name": "Messages_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Messages_groupId_fkey": {
          "name": "Messages_groupId_fkey",
          "tableFrom": "Messages",
          "tableTo": "MessagesGroup",
          "schemaTo": "public",
          "columnsFrom": [
            "groupId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Prompt": {
      "name": "Prompt",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Prompt_id_key": {
          "name": "Prompt_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Prompt_tenantId_fkey": {
          "name": "Prompt_tenantId_fkey",
          "tableFrom": "Prompt",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Reply": {
      "name": "Reply",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "commentId": {
          "name": "commentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "authorId": {
          "name": "authorId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "Reply_id_key": {
          "name": "Reply_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Reply_authorId_fkey": {
          "name": "Reply_authorId_fkey",
          "tableFrom": "Reply",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "authorId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "Reply_commentId_fkey": {
          "name": "Reply_commentId_fkey",
          "tableFrom": "Reply",
          "tableTo": "Comment",
          "schemaTo": "public",
          "columnsFrom": [
            "commentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.SNSIntegration": {
      "name": "SNSIntegration",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "topicArn": {
          "name": "topicArn",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "SNSIntegration_id_key": {
          "name": "SNSIntegration_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "SNSIntegration_tenantId_topicArn_key": {
          "name": "SNSIntegration_tenantId_topicArn_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "topicArn",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "SNSIntegration_tenantId_fkey": {
          "name": "SNSIntegration_tenantId_fkey",
          "tableFrom": "SNSIntegration",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Service": {
      "name": "Service",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Service_id_key": {
          "name": "Service_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Service_tenantId_name_key": {
          "name": "Service_tenantId_name_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Service_tenantId_fkey": {
          "name": "Service_tenantId_fkey",
          "tableFrom": "Service",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.SlackAppWebhook": {
      "name": "SlackAppWebhook",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "teamId": {
          "name": "teamId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "teamName": {
          "name": "teamName",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "channelId": {
          "name": "channelId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "channelName": {
          "name": "channelName",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "webhookURL": {
          "name": "webhookURL",
          "type": "bytea",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "SlackAppWebhook_id_key": {
          "name": "SlackAppWebhook_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "SlackAppWebhook_tenantId_teamId_channelId_key": {
          "name": "SlackAppWebhook_tenantId_teamId_channelId_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "teamId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "channelId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "SlackAppWebhook_tenantId_fkey": {
          "name": "SlackAppWebhook_tenantId_fkey",
          "tableFrom": "SlackAppWebhook",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.SocialMediaAgency": {
      "name": "SocialMediaAgency",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "logoId": {
          "name": "logoId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "facebook": {
          "name": "facebook",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "instagram": {
          "name": "instagram",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "twitter": {
          "name": "twitter",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "linkedIn": {
          "name": "linkedIn",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "youtube": {
          "name": "youtube",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tiktok": {
          "name": "tiktok",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "otherSocialMedia": {
          "name": "otherSocialMedia",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "shortDescription": {
          "name": "shortDescription",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "approved": {
          "name": "approved",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "SocialMediaAgency_deletedAt_idx": {
          "name": "SocialMediaAgency_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "SocialMediaAgency_id_idx": {
          "name": "SocialMediaAgency_id_idx",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "SocialMediaAgency_id_key": {
          "name": "SocialMediaAgency_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "SocialMediaAgency_userId_idx": {
          "name": "SocialMediaAgency_userId_idx",
          "columns": [
            {
              "expression": "userId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "SocialMediaAgency_logoId_fkey": {
          "name": "SocialMediaAgency_logoId_fkey",
          "tableFrom": "SocialMediaAgency",
          "tableTo": "Media",
          "schemaTo": "public",
          "columnsFrom": [
            "logoId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "SocialMediaAgency_userId_fkey": {
          "name": "SocialMediaAgency_userId_fkey",
          "tableFrom": "SocialMediaAgency",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Step": {
      "name": "Step",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "readableId": {
          "name": "readableId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "jobId": {
          "name": "jobId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "actionId": {
          "name": "actionId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "timeout": {
          "name": "timeout",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "retries": {
          "name": "retries",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "customUserData": {
          "name": "customUserData",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "scheduleTimeout": {
          "name": "scheduleTimeout",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'5m'"
        }
      },
      "indexes": {
        "Step_id_key": {
          "name": "Step_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Step_jobId_readableId_key": {
          "name": "Step_jobId_readableId_key",
          "columns": [
            {
              "expression": "jobId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "readableId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Step_actionId_tenantId_fkey": {
          "name": "Step_actionId_tenantId_fkey",
          "tableFrom": "Step",
          "tableTo": "Action",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId",
            "actionId"
          ],
          "columnsTo": [
            "actionId",
            "tenantId"
          ],
          "onDelete": "restrict",
          "onUpdate": "cascade"
        },
        "Step_jobId_fkey": {
          "name": "Step_jobId_fkey",
          "tableFrom": "Step",
          "tableTo": "Job",
          "schemaTo": "public",
          "columnsFrom": [
            "jobId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.StepDesiredWorkerLabel": {
      "name": "StepDesiredWorkerLabel",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "stepId": {
          "name": "stepId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "strValue": {
          "name": "strValue",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "intValue": {
          "name": "intValue",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "required": {
          "name": "required",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "comparator": {
          "name": "comparator",
          "type": "WorkerLabelComparator",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "weight": {
          "name": "weight",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "StepDesiredWorkerLabel_stepId_idx": {
          "name": "StepDesiredWorkerLabel_stepId_idx",
          "columns": [
            {
              "expression": "stepId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "StepDesiredWorkerLabel_stepId_key_key": {
          "name": "StepDesiredWorkerLabel_stepId_key_key",
          "columns": [
            {
              "expression": "stepId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "key",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "StepDesiredWorkerLabel_stepId_fkey": {
          "name": "StepDesiredWorkerLabel_stepId_fkey",
          "tableFrom": "StepDesiredWorkerLabel",
          "tableTo": "Step",
          "schemaTo": "public",
          "columnsFrom": [
            "stepId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.RateLimit": {
      "name": "RateLimit",
      "schema": "",
      "columns": {
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "limitValue": {
          "name": "limitValue",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "window": {
          "name": "window",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "lastRefill": {
          "name": "lastRefill",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.StepRateLimit": {
      "name": "StepRateLimit",
      "schema": "",
      "columns": {
        "units": {
          "name": "units",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "stepId": {
          "name": "stepId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "rateLimitKey": {
          "name": "rateLimitKey",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "kind": {
          "name": "kind",
          "type": "StepRateLimitKind",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'STATIC'"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "StepRateLimit_stepId_rateLimitKey_key": {
          "name": "StepRateLimit_stepId_rateLimitKey_key",
          "columns": [
            {
              "expression": "stepId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "rateLimitKey",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "StepRateLimit_tenantId_rateLimitKey_fkey": {
          "name": "StepRateLimit_tenantId_rateLimitKey_fkey",
          "tableFrom": "StepRateLimit",
          "tableTo": "RateLimit",
          "schemaTo": "public",
          "columnsFrom": [
            "rateLimitKey",
            "tenantId"
          ],
          "columnsTo": [
            "tenantId",
            "key"
          ],
          "onDelete": "restrict",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.StepRunResultArchive": {
      "name": "StepRunResultArchive",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "stepRunId": {
          "name": "stepRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "retryCount": {
          "name": "retryCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "order": {
          "name": "order",
          "type": "bigserial",
          "primaryKey": false,
          "notNull": true
        },
        "input": {
          "name": "input",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "output": {
          "name": "output",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "error": {
          "name": "error",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "startedAt": {
          "name": "startedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "finishedAt": {
          "name": "finishedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "timeoutAt": {
          "name": "timeoutAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledAt": {
          "name": "cancelledAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledReason": {
          "name": "cancelledReason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cancelledError": {
          "name": "cancelledError",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "StepRunResultArchive_id_key": {
          "name": "StepRunResultArchive_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "StepRunResultArchive_stepRunId_fkey": {
          "name": "StepRunResultArchive_stepRunId_fkey",
          "tableFrom": "StepRunResultArchive",
          "tableTo": "StepRun",
          "schemaTo": "public",
          "columnsFrom": [
            "stepRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.StreamEvent": {
      "name": "StreamEvent",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "stepRunId": {
          "name": "stepRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "message": {
          "name": "message",
          "type": "bytea",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "StreamEvent_stepRunId_fkey": {
          "name": "StreamEvent_stepRunId_fkey",
          "tableFrom": "StreamEvent",
          "tableTo": "StepRun",
          "schemaTo": "public",
          "columnsFrom": [
            "stepRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.ControllerPartition": {
      "name": "ControllerPartition",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "lastHeartbeat": {
          "name": "lastHeartbeat",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "ControllerPartition_id_key": {
          "name": "ControllerPartition_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.SchedulerPartition": {
      "name": "SchedulerPartition",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "lastHeartbeat": {
          "name": "lastHeartbeat",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "SchedulerPartition_id_key": {
          "name": "SchedulerPartition_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.TenantWorkerPartition": {
      "name": "TenantWorkerPartition",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "lastHeartbeat": {
          "name": "lastHeartbeat",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "TenantWorkerPartition_id_key": {
          "name": "TenantWorkerPartition_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.TenantAlertEmailGroup": {
      "name": "TenantAlertEmailGroup",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "emails": {
          "name": "emails",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "TenantAlertEmailGroup_id_key": {
          "name": "TenantAlertEmailGroup_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "TenantAlertEmailGroup_tenantId_fkey": {
          "name": "TenantAlertEmailGroup_tenantId_fkey",
          "tableFrom": "TenantAlertEmailGroup",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.TenantAlertingSettings": {
      "name": "TenantAlertingSettings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "enableWorkflowRunFailureAlerts": {
          "name": "enableWorkflowRunFailureAlerts",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "enableExpiringTokenAlerts": {
          "name": "enableExpiringTokenAlerts",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "enableTenantResourceLimitAlerts": {
          "name": "enableTenantResourceLimitAlerts",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "maxFrequency": {
          "name": "maxFrequency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'1h'"
        },
        "lastAlertedAt": {
          "name": "lastAlertedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tickerId": {
          "name": "tickerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "TenantAlertingSettings_id_key": {
          "name": "TenantAlertingSettings_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "TenantAlertingSettings_tenantId_key": {
          "name": "TenantAlertingSettings_tenantId_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "TenantAlertingSettings_tenantId_fkey": {
          "name": "TenantAlertingSettings_tenantId_fkey",
          "tableFrom": "TenantAlertingSettings",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "TenantAlertingSettings_tickerId_fkey": {
          "name": "TenantAlertingSettings_tickerId_fkey",
          "tableFrom": "TenantAlertingSettings",
          "tableTo": "Ticker",
          "schemaTo": "public",
          "columnsFrom": [
            "tickerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.TenantInviteLink": {
      "name": "TenantInviteLink",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "inviterEmail": {
          "name": "inviterEmail",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "inviteeEmail": {
          "name": "inviteeEmail",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "InviteLinkStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PENDING'"
        },
        "role": {
          "name": "role",
          "type": "TenantMemberRole",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'OWNER'"
        }
      },
      "indexes": {
        "TenantInviteLink_id_key": {
          "name": "TenantInviteLink_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "TenantInviteLink_tenantId_fkey": {
          "name": "TenantInviteLink_tenantId_fkey",
          "tableFrom": "TenantInviteLink",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.TenantMember": {
      "name": "TenantMember",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "TenantMemberRole",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "TenantMember_id_key": {
          "name": "TenantMember_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "TenantMember_tenantId_userId_key": {
          "name": "TenantMember_tenantId_userId_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "userId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "TenantMember_tenantId_fkey": {
          "name": "TenantMember_tenantId_fkey",
          "tableFrom": "TenantMember",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "TenantMember_userId_fkey": {
          "name": "TenantMember_userId_fkey",
          "tableFrom": "TenantMember",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.TenantResourceLimit": {
      "name": "TenantResourceLimit",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "resource": {
          "name": "resource",
          "type": "LimitResource",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "limitValue": {
          "name": "limitValue",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "alarmValue": {
          "name": "alarmValue",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "value": {
          "name": "value",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "window": {
          "name": "window",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "lastRefill": {
          "name": "lastRefill",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "customValueMeter": {
          "name": "customValueMeter",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "TenantResourceLimit_id_key": {
          "name": "TenantResourceLimit_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "TenantResourceLimit_tenantId_resource_key": {
          "name": "TenantResourceLimit_tenantId_resource_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "resource",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "TenantResourceLimit_tenantId_fkey": {
          "name": "TenantResourceLimit_tenantId_fkey",
          "tableFrom": "TenantResourceLimit",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.TenantResourceLimitAlert": {
      "name": "TenantResourceLimitAlert",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "resourceLimitId": {
          "name": "resourceLimitId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "resource": {
          "name": "resource",
          "type": "LimitResource",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "alertType": {
          "name": "alertType",
          "type": "TenantResourceLimitAlertType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "limit": {
          "name": "limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "TenantResourceLimitAlert_id_key": {
          "name": "TenantResourceLimitAlert_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "TenantResourceLimitAlert_resourceLimitId_fkey": {
          "name": "TenantResourceLimitAlert_resourceLimitId_fkey",
          "tableFrom": "TenantResourceLimitAlert",
          "tableTo": "TenantResourceLimit",
          "schemaTo": "public",
          "columnsFrom": [
            "resourceLimitId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "TenantResourceLimitAlert_tenantId_fkey": {
          "name": "TenantResourceLimitAlert_tenantId_fkey",
          "tableFrom": "TenantResourceLimitAlert",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.TenantVcsProvider": {
      "name": "TenantVcsProvider",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "vcsProvider": {
          "name": "vcsProvider",
          "type": "VcsProvider",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "config": {
          "name": "config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "TenantVcsProvider_id_key": {
          "name": "TenantVcsProvider_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "TenantVcsProvider_tenantId_vcsProvider_key": {
          "name": "TenantVcsProvider_tenantId_vcsProvider_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "vcsProvider",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "TenantVcsProvider_tenantId_fkey": {
          "name": "TenantVcsProvider_tenantId_fkey",
          "tableFrom": "TenantVcsProvider",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.UserOAuth": {
      "name": "UserOAuth",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerUserId": {
          "name": "providerUserId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "accessToken": {
          "name": "accessToken",
          "type": "bytea",
          "primaryKey": false,
          "notNull": true
        },
        "refreshToken": {
          "name": "refreshToken",
          "type": "bytea",
          "primaryKey": false,
          "notNull": false
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "UserOAuth_id_key": {
          "name": "UserOAuth_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "UserOAuth_userId_key": {
          "name": "UserOAuth_userId_key",
          "columns": [
            {
              "expression": "userId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "UserOAuth_userId_provider_key": {
          "name": "UserOAuth_userId_provider_key",
          "columns": [
            {
              "expression": "userId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "provider",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "UserOAuth_userId_fkey": {
          "name": "UserOAuth_userId_fkey",
          "tableFrom": "UserOAuth",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.UserPassword": {
      "name": "UserPassword",
      "schema": "",
      "columns": {
        "hash": {
          "name": "hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "UserPassword_userId_key": {
          "name": "UserPassword_userId_key",
          "columns": [
            {
              "expression": "userId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "UserPassword_userId_fkey": {
          "name": "UserPassword_userId_fkey",
          "tableFrom": "UserPassword",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.UserSession": {
      "name": "UserSession",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "UserSession_id_key": {
          "name": "UserSession_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "UserSession_userId_fkey": {
          "name": "UserSession_userId_fkey",
          "tableFrom": "UserSession",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WebhookWorker": {
      "name": "WebhookWorker",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "secret": {
          "name": "secret",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tokenValue": {
          "name": "tokenValue",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "deleted": {
          "name": "deleted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "tokenId": {
          "name": "tokenId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "WebhookWorker_id_key": {
          "name": "WebhookWorker_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WebhookWorker_url_key": {
          "name": "WebhookWorker_url_key",
          "columns": [
            {
              "expression": "url",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WebhookWorker_tenantId_fkey": {
          "name": "WebhookWorker_tenantId_fkey",
          "tableFrom": "WebhookWorker",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "WebhookWorker_tokenId_fkey": {
          "name": "WebhookWorker_tokenId_fkey",
          "tableFrom": "WebhookWorker",
          "tableTo": "APIToken",
          "schemaTo": "public",
          "columnsFrom": [
            "tokenId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WebhookWorkerRequest": {
      "name": "WebhookWorkerRequest",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "webhookWorkerId": {
          "name": "webhookWorkerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "method": {
          "name": "method",
          "type": "WebhookWorkerRequestMethod",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "statusCode": {
          "name": "statusCode",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "WebhookWorkerRequest_id_key": {
          "name": "WebhookWorkerRequest_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WebhookWorkerRequest_webhookWorkerId_fkey": {
          "name": "WebhookWorkerRequest_webhookWorkerId_fkey",
          "tableFrom": "WebhookWorkerRequest",
          "tableTo": "WebhookWorker",
          "schemaTo": "public",
          "columnsFrom": [
            "webhookWorkerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WebhookWorkerWorkflow": {
      "name": "WebhookWorkerWorkflow",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "webhookWorkerId": {
          "name": "webhookWorkerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workflowId": {
          "name": "workflowId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "WebhookWorkerWorkflow_id_key": {
          "name": "WebhookWorkerWorkflow_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WebhookWorkerWorkflow_webhookWorkerId_workflowId_key": {
          "name": "WebhookWorkerWorkflow_webhookWorkerId_workflowId_key",
          "columns": [
            {
              "expression": "webhookWorkerId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "workflowId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WebhookWorkerWorkflow_webhookWorkerId_fkey": {
          "name": "WebhookWorkerWorkflow_webhookWorkerId_fkey",
          "tableFrom": "WebhookWorkerWorkflow",
          "tableTo": "WebhookWorker",
          "schemaTo": "public",
          "columnsFrom": [
            "webhookWorkerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "WebhookWorkerWorkflow_workflowId_fkey": {
          "name": "WebhookWorkerWorkflow_workflowId_fkey",
          "tableFrom": "WebhookWorkerWorkflow",
          "tableTo": "Workflow",
          "schemaTo": "public",
          "columnsFrom": [
            "workflowId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Workflow": {
      "name": "Workflow",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "isPaused": {
          "name": "isPaused",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "Workflow_deletedAt_idx": {
          "name": "Workflow_deletedAt_idx",
          "columns": [
            {
              "expression": "deletedAt",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Workflow_id_key": {
          "name": "Workflow_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Workflow_tenantId_name_key": {
          "name": "Workflow_tenantId_name_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_workflow_tenant_id": {
          "name": "idx_workflow_tenant_id",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Dispatcher": {
      "name": "Dispatcher",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "lastHeartbeatAt": {
          "name": "lastHeartbeatAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "isActive": {
          "name": "isActive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "Dispatcher_id_key": {
          "name": "Dispatcher_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkerAssignEvent": {
      "name": "WorkerAssignEvent",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "workerId": {
          "name": "workerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "assignedStepRuns": {
          "name": "assignedStepRuns",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "WorkerAssignEvent_workerId_id_idx": {
          "name": "WorkerAssignEvent_workerId_id_idx",
          "columns": [
            {
              "expression": "workerId",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            },
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "int8_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkerAssignEvent_workerId_fkey": {
          "name": "WorkerAssignEvent_workerId_fkey",
          "tableFrom": "WorkerAssignEvent",
          "tableTo": "Worker",
          "schemaTo": "public",
          "columnsFrom": [
            "workerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkerLabel": {
      "name": "WorkerLabel",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "workerId": {
          "name": "workerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "strValue": {
          "name": "strValue",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "intValue": {
          "name": "intValue",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "WorkerLabel_workerId_idx": {
          "name": "WorkerLabel_workerId_idx",
          "columns": [
            {
              "expression": "workerId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkerLabel_workerId_key_key": {
          "name": "WorkerLabel_workerId_key_key",
          "columns": [
            {
              "expression": "workerId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "key",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkerLabel_workerId_fkey": {
          "name": "WorkerLabel_workerId_fkey",
          "tableFrom": "WorkerLabel",
          "tableTo": "Worker",
          "schemaTo": "public",
          "columnsFrom": [
            "workerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowConcurrency": {
      "name": "WorkflowConcurrency",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "workflowVersionId": {
          "name": "workflowVersionId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "getConcurrencyGroupId": {
          "name": "getConcurrencyGroupId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "concurrencyGroupExpression": {
          "name": "concurrencyGroupExpression",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "maxRuns": {
          "name": "maxRuns",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "limitStrategy": {
          "name": "limitStrategy",
          "type": "ConcurrencyLimitStrategy",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'CANCEL_IN_PROGRESS'"
        }
      },
      "indexes": {
        "WorkflowConcurrency_id_key": {
          "name": "WorkflowConcurrency_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowConcurrency_workflowVersionId_key": {
          "name": "WorkflowConcurrency_workflowVersionId_key",
          "columns": [
            {
              "expression": "workflowVersionId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkflowConcurrency_getConcurrencyGroupId_fkey": {
          "name": "WorkflowConcurrency_getConcurrencyGroupId_fkey",
          "tableFrom": "WorkflowConcurrency",
          "tableTo": "Action",
          "schemaTo": "public",
          "columnsFrom": [
            "getConcurrencyGroupId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "WorkflowConcurrency_workflowVersionId_fkey": {
          "name": "WorkflowConcurrency_workflowVersionId_fkey",
          "tableFrom": "WorkflowConcurrency",
          "tableTo": "WorkflowVersion",
          "schemaTo": "public",
          "columnsFrom": [
            "workflowVersionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowRunStickyState": {
      "name": "WorkflowRunStickyState",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workflowRunId": {
          "name": "workflowRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "desiredWorkerId": {
          "name": "desiredWorkerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "strategy": {
          "name": "strategy",
          "type": "StickyStrategy",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "WorkflowRunStickyState_workflowRunId_key": {
          "name": "WorkflowRunStickyState_workflowRunId_key",
          "columns": [
            {
              "expression": "workflowRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkflowRunStickyState_workflowRunId_fkey": {
          "name": "WorkflowRunStickyState_workflowRunId_fkey",
          "tableFrom": "WorkflowRunStickyState",
          "tableTo": "WorkflowRun",
          "schemaTo": "public",
          "columnsFrom": [
            "workflowRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowTriggerCronRef": {
      "name": "WorkflowTriggerCronRef",
      "schema": "",
      "columns": {
        "parentId": {
          "name": "parentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "cron": {
          "name": "cron",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "enabled": {
          "name": "enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "tickerId": {
          "name": "tickerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "input": {
          "name": "input",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "additionalMetadata": {
          "name": "additionalMetadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "WorkflowTriggerCronRef_parentId_fkey": {
          "name": "WorkflowTriggerCronRef_parentId_fkey",
          "tableFrom": "WorkflowTriggerCronRef",
          "tableTo": "WorkflowTriggers",
          "schemaTo": "public",
          "columnsFrom": [
            "parentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "WorkflowTriggerCronRef_tickerId_fkey": {
          "name": "WorkflowTriggerCronRef_tickerId_fkey",
          "tableFrom": "WorkflowTriggerCronRef",
          "tableTo": "Ticker",
          "schemaTo": "public",
          "columnsFrom": [
            "tickerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowRunTriggeredBy": {
      "name": "WorkflowRunTriggeredBy",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "parentId": {
          "name": "parentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "input": {
          "name": "input",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "eventId": {
          "name": "eventId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "cronParentId": {
          "name": "cronParentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "cronSchedule": {
          "name": "cronSchedule",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scheduledId": {
          "name": "scheduledId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "WorkflowRunTriggeredBy_eventId_idx": {
          "name": "WorkflowRunTriggeredBy_eventId_idx",
          "columns": [
            {
              "expression": "eventId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRunTriggeredBy_id_key": {
          "name": "WorkflowRunTriggeredBy_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRunTriggeredBy_parentId_idx": {
          "name": "WorkflowRunTriggeredBy_parentId_idx",
          "columns": [
            {
              "expression": "parentId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRunTriggeredBy_parentId_key": {
          "name": "WorkflowRunTriggeredBy_parentId_key",
          "columns": [
            {
              "expression": "parentId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRunTriggeredBy_scheduledId_key": {
          "name": "WorkflowRunTriggeredBy_scheduledId_key",
          "columns": [
            {
              "expression": "scheduledId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowRunTriggeredBy_tenantId_idx": {
          "name": "WorkflowRunTriggeredBy_tenantId_idx",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkflowRunTriggeredBy_cronParentId_cronSchedule_fkey": {
          "name": "WorkflowRunTriggeredBy_cronParentId_cronSchedule_fkey",
          "tableFrom": "WorkflowRunTriggeredBy",
          "tableTo": "WorkflowTriggerCronRef",
          "schemaTo": "public",
          "columnsFrom": [
            "cronParentId",
            "cronSchedule"
          ],
          "columnsTo": [
            "parentId",
            "cron"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "WorkflowRunTriggeredBy_scheduledId_fkey": {
          "name": "WorkflowRunTriggeredBy_scheduledId_fkey",
          "tableFrom": "WorkflowRunTriggeredBy",
          "tableTo": "WorkflowTriggerScheduledRef",
          "schemaTo": "public",
          "columnsFrom": [
            "scheduledId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowTriggerScheduledRef": {
      "name": "WorkflowTriggerScheduledRef",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "parentId": {
          "name": "parentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "triggerAt": {
          "name": "triggerAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        },
        "tickerId": {
          "name": "tickerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "input": {
          "name": "input",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "parentWorkflowRunId": {
          "name": "parentWorkflowRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "parentStepRunId": {
          "name": "parentStepRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "childIndex": {
          "name": "childIndex",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "childKey": {
          "name": "childKey",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "additionalMetadata": {
          "name": "additionalMetadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "WorkflowTriggerScheduledRef_id_key": {
          "name": "WorkflowTriggerScheduledRef_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowTriggerScheduledRef_parentId_parentStepRunId_childK_key": {
          "name": "WorkflowTriggerScheduledRef_parentId_parentStepRunId_childK_key",
          "columns": [
            {
              "expression": "parentId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "parentStepRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "childKey",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkflowTriggerScheduledRef_parentId_fkey": {
          "name": "WorkflowTriggerScheduledRef_parentId_fkey",
          "tableFrom": "WorkflowTriggerScheduledRef",
          "tableTo": "WorkflowVersion",
          "schemaTo": "public",
          "columnsFrom": [
            "parentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "WorkflowTriggerScheduledRef_parentStepRunId_fkey": {
          "name": "WorkflowTriggerScheduledRef_parentStepRunId_fkey",
          "tableFrom": "WorkflowTriggerScheduledRef",
          "tableTo": "StepRun",
          "schemaTo": "public",
          "columnsFrom": [
            "parentStepRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "WorkflowTriggerScheduledRef_parentWorkflowRunId_fkey": {
          "name": "WorkflowTriggerScheduledRef_parentWorkflowRunId_fkey",
          "tableFrom": "WorkflowTriggerScheduledRef",
          "tableTo": "WorkflowRun",
          "schemaTo": "public",
          "columnsFrom": [
            "parentWorkflowRunId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        },
        "WorkflowTriggerScheduledRef_tickerId_fkey": {
          "name": "WorkflowTriggerScheduledRef_tickerId_fkey",
          "tableFrom": "WorkflowTriggerScheduledRef",
          "tableTo": "Ticker",
          "schemaTo": "public",
          "columnsFrom": [
            "tickerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowTag": {
      "name": "WorkflowTag",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "color": {
          "name": "color",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'#93C5FD'"
        }
      },
      "indexes": {
        "WorkflowTag_id_key": {
          "name": "WorkflowTag_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowTag_tenantId_name_key": {
          "name": "WorkflowTag_tenantId_name_key",
          "columns": [
            {
              "expression": "tenantId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkflowTag_tenantId_fkey": {
          "name": "WorkflowTag_tenantId_fkey",
          "tableFrom": "WorkflowTag",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowTriggers": {
      "name": "WorkflowTriggers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deletedAt": {
          "name": "deletedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        },
        "workflowVersionId": {
          "name": "workflowVersionId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "WorkflowTriggers_id_key": {
          "name": "WorkflowTriggers_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "WorkflowTriggers_workflowVersionId_key": {
          "name": "WorkflowTriggers_workflowVersionId_key",
          "columns": [
            {
              "expression": "workflowVersionId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_workflow_triggers_workflow_version_id": {
          "name": "idx_workflow_triggers_workflow_version_id",
          "columns": [
            {
              "expression": "workflowVersionId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkflowTriggers_tenantId_fkey": {
          "name": "WorkflowTriggers_tenantId_fkey",
          "tableFrom": "WorkflowTriggers",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "WorkflowTriggers_workflowVersionId_fkey": {
          "name": "WorkflowTriggers_workflowVersionId_fkey",
          "tableFrom": "WorkflowTriggers",
          "tableTo": "WorkflowVersion",
          "schemaTo": "public",
          "columnsFrom": [
            "workflowVersionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.WorkflowTriggerEventRef": {
      "name": "WorkflowTriggerEventRef",
      "schema": "",
      "columns": {
        "parentId": {
          "name": "parentId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "eventKey": {
          "name": "eventKey",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "WorkflowTriggerEventRef_parentId_eventKey_key": {
          "name": "WorkflowTriggerEventRef_parentId_eventKey_key",
          "columns": [
            {
              "expression": "parentId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "eventKey",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_workflow_trigger_event_ref_event_key_parent_id": {
          "name": "idx_workflow_trigger_event_ref_event_key_parent_id",
          "columns": [
            {
              "expression": "eventKey",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "parentId",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "WorkflowTriggerEventRef_parentId_fkey": {
          "name": "WorkflowTriggerEventRef_parentId_fkey",
          "tableFrom": "WorkflowTriggerEventRef",
          "tableTo": "WorkflowTriggers",
          "schemaTo": "public",
          "columnsFrom": [
            "parentId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public._ActionToWorker": {
      "name": "_ActionToWorker",
      "schema": "",
      "columns": {
        "A": {
          "name": "A",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "B": {
          "name": "B",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "_ActionToWorker_AB_unique": {
          "name": "_ActionToWorker_AB_unique",
          "columns": [
            {
              "expression": "A",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "_ActionToWorker_B_index": {
          "name": "_ActionToWorker_B_index",
          "columns": [
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "_ActionToWorker_A_fkey": {
          "name": "_ActionToWorker_A_fkey",
          "tableFrom": "_ActionToWorker",
          "tableTo": "Action",
          "schemaTo": "public",
          "columnsFrom": [
            "A"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "_ActionToWorker_B_fkey": {
          "name": "_ActionToWorker_B_fkey",
          "tableFrom": "_ActionToWorker",
          "tableTo": "Worker",
          "schemaTo": "public",
          "columnsFrom": [
            "B"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public._BlogPostToTag": {
      "name": "_BlogPostToTag",
      "schema": "",
      "columns": {
        "A": {
          "name": "A",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "B": {
          "name": "B",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "_BlogPostToTag_AB_unique": {
          "name": "_BlogPostToTag_AB_unique",
          "columns": [
            {
              "expression": "A",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "_BlogPostToTag_B_index": {
          "name": "_BlogPostToTag_B_index",
          "columns": [
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "_BlogPostToTag_A_fkey": {
          "name": "_BlogPostToTag_A_fkey",
          "tableFrom": "_BlogPostToTag",
          "tableTo": "BlogPost",
          "schemaTo": "public",
          "columnsFrom": [
            "A"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "_BlogPostToTag_B_fkey": {
          "name": "_BlogPostToTag_B_fkey",
          "tableFrom": "_BlogPostToTag",
          "tableTo": "Tag",
          "schemaTo": "public",
          "columnsFrom": [
            "B"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Tag": {
      "name": "Tag",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "Tag_id_key": {
          "name": "Tag_id_key",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public._MediaToUser": {
      "name": "_MediaToUser",
      "schema": "",
      "columns": {
        "A": {
          "name": "A",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "B": {
          "name": "B",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "_MediaToUser_AB_unique": {
          "name": "_MediaToUser_AB_unique",
          "columns": [
            {
              "expression": "A",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "_MediaToUser_B_index": {
          "name": "_MediaToUser_B_index",
          "columns": [
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "_MediaToUser_A_fkey": {
          "name": "_MediaToUser_A_fkey",
          "tableFrom": "_MediaToUser",
          "tableTo": "Media",
          "schemaTo": "public",
          "columnsFrom": [
            "A"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "_MediaToUser_B_fkey": {
          "name": "_MediaToUser_B_fkey",
          "tableFrom": "_MediaToUser",
          "tableTo": "User",
          "schemaTo": "public",
          "columnsFrom": [
            "B"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public._ServiceToWorker": {
      "name": "_ServiceToWorker",
      "schema": "",
      "columns": {
        "A": {
          "name": "A",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "B": {
          "name": "B",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "_ServiceToWorker_AB_unique": {
          "name": "_ServiceToWorker_AB_unique",
          "columns": [
            {
              "expression": "A",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "_ServiceToWorker_B_index": {
          "name": "_ServiceToWorker_B_index",
          "columns": [
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "_ServiceToWorker_A_fkey": {
          "name": "_ServiceToWorker_A_fkey",
          "tableFrom": "_ServiceToWorker",
          "tableTo": "Service",
          "schemaTo": "public",
          "columnsFrom": [
            "A"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "_ServiceToWorker_B_fkey": {
          "name": "_ServiceToWorker_B_fkey",
          "tableFrom": "_ServiceToWorker",
          "tableTo": "Worker",
          "schemaTo": "public",
          "columnsFrom": [
            "B"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public._StepOrder": {
      "name": "_StepOrder",
      "schema": "",
      "columns": {
        "A": {
          "name": "A",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "B": {
          "name": "B",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "_StepOrder_AB_unique": {
          "name": "_StepOrder_AB_unique",
          "columns": [
            {
              "expression": "A",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "_StepOrder_B_index": {
          "name": "_StepOrder_B_index",
          "columns": [
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "_StepOrder_A_fkey": {
          "name": "_StepOrder_A_fkey",
          "tableFrom": "_StepOrder",
          "tableTo": "Step",
          "schemaTo": "public",
          "columnsFrom": [
            "A"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "_StepOrder_B_fkey": {
          "name": "_StepOrder_B_fkey",
          "tableFrom": "_StepOrder",
          "tableTo": "Step",
          "schemaTo": "public",
          "columnsFrom": [
            "B"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public._StepRunOrder": {
      "name": "_StepRunOrder",
      "schema": "",
      "columns": {
        "A": {
          "name": "A",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "B": {
          "name": "B",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "_StepRunOrder_AB_unique": {
          "name": "_StepRunOrder_AB_unique",
          "columns": [
            {
              "expression": "A",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "_StepRunOrder_B_index": {
          "name": "_StepRunOrder_B_index",
          "columns": [
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "_StepRunOrder_A_fkey": {
          "name": "_StepRunOrder_A_fkey",
          "tableFrom": "_StepRunOrder",
          "tableTo": "StepRun",
          "schemaTo": "public",
          "columnsFrom": [
            "A"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "_StepRunOrder_B_fkey": {
          "name": "_StepRunOrder_B_fkey",
          "tableFrom": "_StepRunOrder",
          "tableTo": "StepRun",
          "schemaTo": "public",
          "columnsFrom": [
            "B"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public._WorkflowToWorkflowTag": {
      "name": "_WorkflowToWorkflowTag",
      "schema": "",
      "columns": {
        "A": {
          "name": "A",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "B": {
          "name": "B",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "_WorkflowToWorkflowTag_AB_unique": {
          "name": "_WorkflowToWorkflowTag_AB_unique",
          "columns": [
            {
              "expression": "A",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "_WorkflowToWorkflowTag_B_index": {
          "name": "_WorkflowToWorkflowTag_B_index",
          "columns": [
            {
              "expression": "B",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "_WorkflowToWorkflowTag_A_fkey": {
          "name": "_WorkflowToWorkflowTag_A_fkey",
          "tableFrom": "_WorkflowToWorkflowTag",
          "tableTo": "Workflow",
          "schemaTo": "public",
          "columnsFrom": [
            "A"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "_WorkflowToWorkflowTag_B_fkey": {
          "name": "_WorkflowToWorkflowTag_B_fkey",
          "tableFrom": "_WorkflowToWorkflowTag",
          "tableTo": "WorkflowTag",
          "schemaTo": "public",
          "columnsFrom": [
            "B"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.SocialMediaAgencyNiche": {
      "name": "SocialMediaAgencyNiche",
      "schema": "",
      "columns": {
        "agencyId": {
          "name": "agencyId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "niche": {
          "name": "niche",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "SocialMediaAgencyNiche_agencyId_fkey": {
          "name": "SocialMediaAgencyNiche_agencyId_fkey",
          "tableFrom": "SocialMediaAgencyNiche",
          "tableTo": "SocialMediaAgency",
          "schemaTo": "public",
          "columnsFrom": [
            "agencyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "SocialMediaAgencyNiche_pkey": {
          "name": "SocialMediaAgencyNiche_pkey",
          "columns": [
            "agencyId",
            "niche"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.StepExpression": {
      "name": "StepExpression",
      "schema": "",
      "columns": {
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stepId": {
          "name": "stepId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "expression": {
          "name": "expression",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "kind": {
          "name": "kind",
          "type": "StepExpressionKind",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "StepExpression_pkey": {
          "name": "StepExpression_pkey",
          "columns": [
            "key",
            "stepId",
            "kind"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.StepRunExpressionEval": {
      "name": "StepRunExpressionEval",
      "schema": "",
      "columns": {
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stepRunId": {
          "name": "stepRunId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "valueStr": {
          "name": "valueStr",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "valueInt": {
          "name": "valueInt",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "kind": {
          "name": "kind",
          "type": "StepExpressionKind",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "StepRunExpressionEval_stepRunId_idx": {
          "name": "StepRunExpressionEval_stepRunId_idx",
          "columns": [
            {
              "expression": "stepRunId",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "StepRunExpressionEval_pkey": {
          "name": "StepRunExpressionEval_pkey",
          "columns": [
            "key",
            "stepRunId",
            "kind"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.KVStore": {
      "name": "KVStore",
      "schema": "",
      "columns": {
        "ns": {
          "name": "ns",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'default'"
        },
        "isSystem": {
          "name": "isSystem",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "tenantId": {
          "name": "tenantId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "KVStore_ns_key_idx": {
          "name": "KVStore_ns_key_idx",
          "columns": [
            {
              "expression": "ns",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "key",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "KVStore_tenantId_fkey": {
          "name": "KVStore_tenantId_fkey",
          "tableFrom": "KVStore",
          "tableTo": "Tenant",
          "schemaTo": "public",
          "columnsFrom": [
            "tenantId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "KVStore_pkey": {
          "name": "KVStore_pkey",
          "columns": [
            "ns",
            "key"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.ConcurrencyLimitStrategy": {
      "name": "ConcurrencyLimitStrategy",
      "values": [
        "CANCEL_IN_PROGRESS",
        "DROP_NEWEST",
        "QUEUE_NEWEST",
        "GROUP_ROUND_ROBIN"
      ],
      "schema": "public"
    },
    "public.From": {
      "name": "From",
      "values": [
        "BUYER",
        "SELLER"
      ],
      "schema": "public"
    },
    "public.InternalQueue": {
      "name": "InternalQueue",
      "values": [
        "WORKER_SEMAPHORE_COUNT",
        "STEP_RUN_UPDATE",
        "STEP_RUN_UPDATE_V2",
        "WORKFLOW_RUN_UPDATE",
        "WORKFLOW_RUN_PAUSED"
      ],
      "schema": "public"
    },
    "public.InviteLinkStatus": {
      "name": "InviteLinkStatus",
      "values": [
        "PENDING",
        "ACCEPTED",
        "REJECTED"
      ],
      "schema": "public"
    },
    "public.JobKind": {
      "name": "JobKind",
      "values": [
        "DEFAULT",
        "ON_FAILURE"
      ],
      "schema": "public"
    },
    "public.JobRunStatus": {
      "name": "JobRunStatus",
      "values": [
        "PENDING",
        "RUNNING",
        "SUCCEEDED",
        "FAILED",
        "CANCELLED"
      ],
      "schema": "public"
    },
    "public.LeaseKind": {
      "name": "LeaseKind",
      "values": [
        "WORKER",
        "QUEUE"
      ],
      "schema": "public"
    },
    "public.LimitResource": {
      "name": "LimitResource",
      "values": [
        "WORKFLOW_RUN",
        "EVENT",
        "WORKER",
        "CRON",
        "SCHEDULE"
      ],
      "schema": "public"
    },
    "public.LogLineLevel": {
      "name": "LogLineLevel",
      "values": [
        "DEBUG",
        "INFO",
        "WARN",
        "ERROR"
      ],
      "schema": "public"
    },
    "public.State": {
      "name": "State",
      "values": [
        "QUEUE",
        "PUBLISHED",
        "ERROR",
        "DRAFT"
      ],
      "schema": "public"
    },
    "public.StepExpressionKind": {
      "name": "StepExpressionKind",
      "values": [
        "DYNAMIC_RATE_LIMIT_KEY",
        "DYNAMIC_RATE_LIMIT_VALUE",
        "DYNAMIC_RATE_LIMIT_UNITS",
        "DYNAMIC_RATE_LIMIT_WINDOW"
      ],
      "schema": "public"
    },
    "public.StepRateLimitKind": {
      "name": "StepRateLimitKind",
      "values": [
        "STATIC",
        "DYNAMIC"
      ],
      "schema": "public"
    },
    "public.StepRunEventReason": {
      "name": "StepRunEventReason",
      "values": [
        "REQUEUED_NO_WORKER",
        "REQUEUED_RATE_LIMIT",
        "RATE_LIMIT_ERROR",
        "SCHEDULING_TIMED_OUT",
        "TIMED_OUT",
        "REASSIGNED",
        "ASSIGNED",
        "SENT_TO_WORKER",
        "STARTED",
        "ACKNOWLEDGED",
        "FINISHED",
        "FAILED",
        "RETRYING",
        "RETRIED_BY_USER",
        "CANCELLED",
        "TIMEOUT_REFRESHED",
        "SLOT_RELEASED",
        "WORKFLOW_RUN_GROUP_KEY_SUCCEEDED",
        "WORKFLOW_RUN_GROUP_KEY_FAILED"
      ],
      "schema": "public"
    },
    "public.StepRunEventSeverity": {
      "name": "StepRunEventSeverity",
      "values": [
        "INFO",
        "WARNING",
        "CRITICAL"
      ],
      "schema": "public"
    },
    "public.StepRunStatus": {
      "name": "StepRunStatus",
      "values": [
        "PENDING",
        "PENDING_ASSIGNMENT",
        "ASSIGNED",
        "RUNNING",
        "CANCELLING",
        "SUCCEEDED",
        "FAILED",
        "CANCELLED"
      ],
      "schema": "public"
    },
    "public.StickyStrategy": {
      "name": "StickyStrategy",
      "values": [
        "SOFT",
        "HARD"
      ],
      "schema": "public"
    },
    "public.TenantMemberRole": {
      "name": "TenantMemberRole",
      "values": [
        "OWNER",
        "ADMIN",
        "MEMBER"
      ],
      "schema": "public"
    },
    "public.TenantResourceLimitAlertType": {
      "name": "TenantResourceLimitAlertType",
      "values": [
        "Alarm",
        "Exhausted"
      ],
      "schema": "public"
    },
    "public.VcsProvider": {
      "name": "VcsProvider",
      "values": [
        "GITHUB"
      ],
      "schema": "public"
    },
    "public.WebhookWorkerRequestMethod": {
      "name": "WebhookWorkerRequestMethod",
      "values": [
        "GET",
        "POST",
        "PUT"
      ],
      "schema": "public"
    },
    "public.WorkerLabelComparator": {
      "name": "WorkerLabelComparator",
      "values": [
        "EQUAL",
        "NOT_EQUAL",
        "GREATER_THAN",
        "GREATER_THAN_OR_EQUAL",
        "LESS_THAN",
        "LESS_THAN_OR_EQUAL"
      ],
      "schema": "public"
    },
    "public.WorkerSDKS": {
      "name": "WorkerSDKS",
      "values": [
        "UNKNOWN",
        "GO",
        "PYTHON",
        "TYPESCRIPT"
      ],
      "schema": "public"
    },
    "public.WorkerType": {
      "name": "WorkerType",
      "values": [
        "WEBHOOK",
        "MANAGED",
        "SELFHOSTED"
      ],
      "schema": "public"
    },
    "public.WorkflowKind": {
      "name": "WorkflowKind",
      "values": [
        "FUNCTION",
        "DURABLE",
        "DAG"
      ],
      "schema": "public"
    },
    "public.WorkflowRunStatus": {
      "name": "WorkflowRunStatus",
      "values": [
        "PENDING",
        "QUEUED",
        "RUNNING",
        "SUCCEEDED",
        "FAILED"
      ],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.pg_stat_statements_info": {
      "name": "pg_stat_statements_info",
      "schema": "public",
      "columns": {
        "dealloc": {
          "name": "dealloc",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "stats_reset": {
          "name": "stats_reset",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT dealloc, stats_reset FROM pg_stat_statements_info() pg_stat_statements_info(dealloc, stats_reset)",
      "materialized": false
    },
    "public.pg_stat_statements": {
      "name": "pg_stat_statements",
      "schema": "public",
      "columns": {
        "userid": {
          "name": "userid",
          "type": "oid",
          "primaryKey": false,
          "notNull": false
        },
        "dbid": {
          "name": "dbid",
          "type": "oid",
          "primaryKey": false,
          "notNull": false
        },
        "toplevel": {
          "name": "toplevel",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "queryid": {
          "name": "queryid",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "query": {
          "name": "query",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "plans": {
          "name": "plans",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "total_plan_time": {
          "name": "total_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "min_plan_time": {
          "name": "min_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "max_plan_time": {
          "name": "max_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "mean_plan_time": {
          "name": "mean_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "stddev_plan_time": {
          "name": "stddev_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "calls": {
          "name": "calls",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "total_exec_time": {
          "name": "total_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "min_exec_time": {
          "name": "min_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "max_exec_time": {
          "name": "max_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "mean_exec_time": {
          "name": "mean_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "stddev_exec_time": {
          "name": "stddev_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "rows": {
          "name": "rows",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_hit": {
          "name": "shared_blks_hit",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_read": {
          "name": "shared_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_dirtied": {
          "name": "shared_blks_dirtied",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_written": {
          "name": "shared_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_hit": {
          "name": "local_blks_hit",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_read": {
          "name": "local_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_dirtied": {
          "name": "local_blks_dirtied",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_written": {
          "name": "local_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blks_read": {
          "name": "temp_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blks_written": {
          "name": "temp_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "blk_read_time": {
          "name": "blk_read_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "blk_write_time": {
          "name": "blk_write_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blk_read_time": {
          "name": "temp_blk_read_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blk_write_time": {
          "name": "temp_blk_write_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "wal_records": {
          "name": "wal_records",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "wal_fpi": {
          "name": "wal_fpi",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "wal_bytes": {
          "name": "wal_bytes",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "jit_functions": {
          "name": "jit_functions",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_generation_time": {
          "name": "jit_generation_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_inlining_count": {
          "name": "jit_inlining_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_inlining_time": {
          "name": "jit_inlining_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_optimization_count": {
          "name": "jit_optimization_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_optimization_time": {
          "name": "jit_optimization_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "jit_emission_count": {
          "name": "jit_emission_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "jit_emission_time": {
          "name": "jit_emission_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT userid, dbid, toplevel, queryid, query, plans, total_plan_time, min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time, calls, total_exec_time, min_exec_time, max_exec_time, mean_exec_time, stddev_exec_time, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, blk_read_time, blk_write_time, temp_blk_read_time, temp_blk_write_time, wal_records, wal_fpi, wal_bytes, jit_functions, jit_generation_time, jit_inlining_count, jit_inlining_time, jit_optimization_count, jit_optimization_time, jit_emission_count, jit_emission_time FROM pg_stat_statements(true) pg_stat_statements(userid, dbid, toplevel, queryid, query, plans, total_plan_time, min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time, calls, total_exec_time, min_exec_time, max_exec_time, mean_exec_time, stddev_exec_time, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, blk_read_time, blk_write_time, temp_blk_read_time, temp_blk_write_time, wal_records, wal_fpi, wal_bytes, jit_functions, jit_generation_time, jit_inlining_count, jit_inlining_time, jit_optimization_count, jit_optimization_time, jit_emission_count, jit_emission_time)",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "PlatformAccount": {
        "columns": {
          "tags": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      }
    }
  }
}