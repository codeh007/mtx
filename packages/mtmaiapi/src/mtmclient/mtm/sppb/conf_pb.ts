// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file mtm/sppb/conf.proto (package mtmai.mtm.sppb, syntax proto3)
/* eslint-disable */

import type {
  GenFile,
  GenMessage,
  GenService,
} from "@bufbuild/protobuf/codegenv1";
import {
  fileDesc,
  messageDesc,
  serviceDesc,
} from "@bufbuild/protobuf/codegenv1";
import type { Paging, ResDeleteReqSchema, ResultSchema } from "./mtm_pb";
import { file_mtm_sppb_mtm } from "./mtm_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file mtm/sppb/conf.proto.
 */
export const file_mtm_sppb_conf: GenFile =
  /*@__PURE__*/
  fileDesc(
    "ChNtdG0vc3BwYi9jb25mLnByb3RvEg5tdG1haS5tdG0uc3BwYiKIBwoGQ29uZmlnEg4KBnNlY3JldBgBIAEoCRIWCg5kaXNhYmxlX3dvcmtlchgfIAEoCBIPCgdwcm9maWxlGCAgASgJEhIKCmJvb3RzdHJhcHMYISADKAkSEwoLbWFpbl9kb21haW4YIiABKAkSEAoIYm90X3R5cGUYIyABKAkSJAoCbXEYAiABKAsyGC5tdG1haS5tdG0uc3BwYi5Db25maWdNcRIkCgJkYhgDIAEoCzIYLm10bWFpLm10bS5zcHBiLkNvbmZpZ0RCEiwKBnNlcnZlchgFIAEoCzIcLm10bWFpLm10bS5zcHBiLkNvbmZpZ1NlcnZlchIoCgRvdGVsGAYgASgLMhoubXRtYWkubXRtLnNwcGIuQ29uZmlnT3RlbBImCgNtdGcYByABKAsyGS5tdG1haS5tdG0uc3BwYi5Db25maWdNdGcSLAoGZ2l0aHViGAggASgLMhwubXRtYWkubXRtLnNwcGIuQ29uZmlnR2l0aHViEjMKDWxvY2FsX3N0b3JhZ2UYCSABKAsyHC5tdG1haS5tdG0uc3BwYi5Mb2NhbFN0b3JhZ2USKAoEc2l0ZRgMIAEoCzIaLm10bWFpLm10bS5zcHBiLkNvbmZpZ1NpdGUSLQoKY2Z0X2NvbmZpZxgQIAEoCzIZLm10bWFpLm10bS5zcHBiLkNmdENvbmZpZxImCgNsb2cYEiABKAsyGS5tdG1haS5tdG0uc3BwYi5Db25maWdMb2cSKAoEYXV0aBgTIAEoCzIaLm10bWFpLm10bS5zcHBiLkNvbmZpZ0F1dGgSJgoDd2ViGBUgASgLMhkubXRtYWkubXRtLnNwcGIuQ29uZmlnV2ViEigKBHNzaGQYFyABKAsyGi5tdG1haS5tdG0uc3BwYi5Db25maWdTc2hkEiYKA3AycBgYIAEoCzIZLm10bWFpLm10bS5zcHBiLkNvbmZpZ1AycBIvCghjcm9uX2pvYhgbIAEoCzIdLm10bWFpLm10bS5zcHBiLkNvbmZpZ0Nyb25qb2ISMAoIbGluZXNsb2cYHCABKAsyHi5tdG1haS5tdG0uc3BwYi5Db25maWdMaW5lc2xvZxIkCgJwcxgdIAEoCzIYLm10bWFpLm10bS5zcHBiLkNvbmZpZ1BzEi0KB3dlYl9hcHAYHiABKAsyHC5tdG1haS5tdG0uc3BwYi5Db25maWdXZWJBcHAiMgoMQ29uZmlnV2ViQXBwEg8KB2JhY2tlbmQYAiABKAkSEQoJc2l0ZV9ob3N0GAMgASgJIq0DCglDZnRDb25maWcSDwoHZW5hYmxlZBgBIAEoCBI2CgdpbmdyZXNzGAIgAygLMiUubXRtYWkubXRtLnNwcGIuQ2Z0Q29uZmlnLkluZ3Jlc3NJdGVtEhMKC3R1bm5lbF9uYW1lGAMgASgJEhgKEHN1YkRvbWFpbl9wcmVmaXgYBCABKAkSFAoMY2ZfYXBpX3Rva2VuGAUgASgJEhUKDWNmX2FjY291bnRfaWQYBiABKAkSFAoMY2ZfYXBpX2VtYWlsGAcgASgJGnEKC0luZ3Jlc3NJdGVtEhAKCGhvc3RuYW1lGAEgASgJEg8KB3NlcnZpY2UYAiABKAkSPwoOb3JpZ2luX3JlcXVlc3QYAyABKAsyJy5tdG1haS5tdG0uc3BwYi5DZnRDb25maWcuT3JpZ2luUmVxdWVzdBpyCg1PcmlnaW5SZXF1ZXN0EhMKC3Rsc190aW1lb3V0GAEgASgJEhQKDG5vVExTX3ZlcmlmeRgCIAEoCBIUCgxodHRwMl9vcmlnaW4YAyABKAgSIAoYZGlzYWJsZV9jaHVua2VkX2VuY29kaW5nGAQgASgIIlgKD0NvbmZpZ1RhaWxzY2FsZRIPCgdlbmFibGVkGAEgASgIEg8KB2FwaV9rZXkYAiABKAkSEAoIYXV0aF9rZXkYAyABKAkSEQoJaG9zdF9uYW1lGAQgASgJIvABCgxDb25maWdTZXJ2ZXISDwoHZW5hYmxlZBgBIAEoCBIvCgRodHRwGAIgASgLMiEubXRtYWkubXRtLnNwcGIuQ29uZmlnU2VydmVyLkh0dHASDgoGZG9tYWluGAMgASgJGo0BCgRIdHRwEgwKBGFkZHIYASABKAkSCwoDdGxzGAIgASgIEioKB3RpbWVvdXQYAyABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SEgoKYXBpX3ByZWZpeBgEIAEoCRIqCgVvbmlvbhgFIAEoCzIbLm10bWFpLm10bS5zcHBiLk9uaW9uQ29uZmlnIokBCghDb25maWdEQhIOCgZkYl91cmwYASABKAkSDwoHZGJfdXJsMhgCIAEoCRIRCglsb2dfbGV2ZWwYAyABKAkSFAoMYXV0b19taWdyYXRlGAQgASgIEhcKD3Byb2R1Y3RfZGJfdXJscxgFIAMoCRIaChJkZXZsb3BtZW50X2RiX3VybHMYBiADKAkiiAEKCENvbmZpZ01xEg0KBWdyb3VwGAEgASgJEhAKCGFtcXBfdXJsGAIgASgJEhkKEXF1ZXVlX25hbWVfcHJlZml4GAMgASgJEhEKCW5zcWRfYWRkchgEIAEoCRIUCgxuc3FkX2FwaV91cmwYBSABKAkSFwoPbnNxZF9sb29rdXBfdXJsGAYgASgJIocBCglDb25maWdMb2cSDQoFbGV2ZWwYASABKAkSFQoNbG9raV9wdXNoX3VybBgCIAEoCRIYChBmaWxlX2xvZ19lbmFibGVkGAMgASgIEhQKDGZpbGVfbG9nX2RpchgEIAEoCRIWCgl3aXRoX25hbWUYBSABKAlIAIgBAUIMCgpfd2l0aF9uYW1lIo4BCgpDb25maWdPdGVsEg8KB2VuYWJsZWQYASABKAgSHgoWZXhwb3J0ZXJfb3RscF9wcm90b2NvbBgCIAEoCRIeChZleHBvcnRlcl9vdGxwX2VuZHBvaW50GAMgASgJEh0KFWV4cG9ydGVyX290bHBfaGVhZGVycxgEIAEoCRIQCghzdmNfbmFtZRgFIAEoCSJBCglDb25maWdNdGcSFwoPaHR0cF9wcm94eV9hZGRyGAEgASgJEhsKE2h0dHBfcHJveHlfYWRkcl90bHMYAiABKAkinAEKDENvbmZpZ0dpdGh1YhIQCghnaF90b2tlbhgBIAEoCRIPCgdnaF91c2VyGAIgASgJEhQKDGdoX21haW5fcmVwbxgDIAEoCRIQCgh3b3JrX2RpchgEIAEoCRIRCglnaF9hcHBfaWQYBSABKAkSFAoMZ2hfY2xpZW50X2lkGAYgASgJEhgKEGdoX2NsaWVudF9zZWNyZXQYByABKAkiPQoKQ29uZmlnU2l0ZRIWCg5kZWZhdWx0X2RvbWFpbhgBIAEoCRIXCg9kZWZhdWx0X3NpdGVfaWQYAiABKA0iHAoKQ29uZmlnQXV0aBIOCgZzZWNyZXQYASABKAkidQoJQ29uZmlnV2ViEg4KBmVuYWJsZRgBIAEoCBIMCgRhZGRyGAIgASgJEgsKA2RpchgDIAEoCRIRCglmcmFtZXdvcmsYBCABKAkSFQoNYnVpbGRfY29tbWFuZBgFIAEoCRITCgtydW5fY29tbWFuZBgGIAEoCSIiCgpDb25maWdNdGt2EhQKDGZvcmNlX21lbW9yeRgBIAEoCCJaCgtPbmlvbkNvbmZpZxIPCgdlbmFibGVkGAEgASgIEhMKC3ByaXZhdGVfa2V5GAIgASgJEhAKCG9uaW9uX2lkGAMgASgJEhMKC2xpc3Rlbl9hZGRyGAQgASgJInMKCkNvbmZpZ1NzaGQSDwoHZW5hYmxlZBgBIAEoCBIMCgRhZGRyGAIgASgJEhsKE2FkbWluX3VzZXJfcGFzc3dvcmQYAyABKAkSEwoLbWF4X3RpbWVvdXQYBCABKA0SFAoMaWRsZV90aW1lb3V0GAUgASgNIloKCUNvbmZpZ1AycBIPCgdlbmFibGVkGAEgASgIEhMKC3ByaXZhdGVfa2V5GAIgASgJEhIKCnJlbmRlenZvdXMYAyABKAkSEwoLZW5hYmxlZF9kaHQYBiABKAgiIAoNQ29uZmlnQ3JvbmpvYhIPCgdlbmFibGVkGAEgASgIIiQKDkNvbmZpZ0xpbmVzbG9nEhIKCnVzZV9tZW1vcnkYASABKAgiMQoMTG9jYWxTdG9yYWdlEhAKCGRpcl9iYXNlGAEgASgJEg8KB2Rpcl9iaW4YAiABKAkiUgoIQ29uZmlnUHMSMAoMY21kX2NoYW5uZWxzGAEgAygLMhoubXRtYWkubXRtLnNwcGIuQ21kQ2hhbm5lbBIUCgxldmVudHNfdG9waWMYAiABKAkiRQoKQ21kQ2hhbm5lbBIMCgR0eXBlGAEgASgJEgsKA3VybBgCIAEoCRINCgVncm91cBgDIAEoCRINCgV0b3BpYxgEIAEoCSJMCgpDb25mR2V0UmVxEgoKAmlkGAEgASgNEg8KB3Byb2ZpbGUYAiABKAkSDwoHaG9zdF9pZBgDIAEoCRIQCghib3RfdHlwZRgEIAEoCSJECgtDb25mTGlzdFJlcRIqCgpQYWdpbmF0aW9uGAEgASgLMhYubXRtYWkubXRtLnNwcGIuUGFnaW5nEgkKAXEYAiABKAkiOgoKQ29uZmlnSXRlbRIKCgJpZBgBIAEoDRIPCgdjb250ZW50GAIgASgJEg8KB2VuYWJsZWQYAyABKAgicwoLQ29uZkxpc3RSZXMSKgoKUGFnaW5hdGlvbhgBIAEoCzIWLm10bWFpLm10bS5zcHBiLlBhZ2luZxINCgVUb3RhbBgCIAEoBRIpCgVpdGVtcxgDIAMoCzIaLm10bWFpLm10bS5zcHBiLkNvbmZpZ0l0ZW0iLAoNQ29uZkNyZWF0ZVJlcRIKCgJpZBgBIAEoCRIPCgdjb250ZW50GAIgASgJIj0KDUNvbmZVcGRhdGVSZXESCgoCaWQYASABKAkSDwoHY29udGVudBgCIAEoCRIPCgdlbmFibGVkGAMgASgIImIKCkNvbmZHZXRSZXMSCgoCaWQYASABKA0SDwoHY29udGVudBgCIAEoCRIPCgdlbmFibGVkGAMgASgIEiYKBmNvbmZpZxgEIAEoCzIWLm10bWFpLm10bS5zcHBiLkNvbmZpZzLuAgoLQ29uZlNlcnZpY2USRgoIQ29uZkxpc3QSGy5tdG1haS5tdG0uc3BwYi5Db25mTGlzdFJlcRobLm10bWFpLm10bS5zcHBiLkNvbmZMaXN0UmVzIgASQwoHQ29uZkdldBIaLm10bWFpLm10bS5zcHBiLkNvbmZHZXRSZXEaGi5tdG1haS5tdG0uc3BwYi5Db25mR2V0UmVzIgASRQoKQ29uZkNyZWF0ZRIdLm10bWFpLm10bS5zcHBiLkNvbmZDcmVhdGVSZXEaFi5tdG1haS5tdG0uc3BwYi5SZXN1bHQiABJFCgpDb25mVXBkYXRlEh0ubXRtYWkubXRtLnNwcGIuQ29uZlVwZGF0ZVJlcRoWLm10bWFpLm10bS5zcHBiLlJlc3VsdCIAEkQKCkNvbmZEZWxldGUSHC5tdG1haS5tdG0uc3BwYi5SZXNEZWxldGVSZXEaFi5tdG1haS5tdG0uc3BwYi5SZXN1bHQiAEKiAQoSY29tLm10bWFpLm10bS5zcHBiQglDb25mUHJvdG9QAVonZ2l0aHViLmNvbS9jb2RlaDAwNy9nb210bS9tdG0vc3BwYjtzcHBiogIDTU1TqgIOTXRtYWkuTXRtLlNwcGLKAg5NdG1haVxNdG1cU3BwYuICGk10bWFpXE10bVxTcHBiXEdQQk1ldGFkYXRh6gIQTXRtYWk6Ok10bTo6U3BwYmIGcHJvdG8z",
    [file_mtm_sppb_mtm, file_google_protobuf_duration],
  );

/**
 * @generated from message mtmai.mtm.sppb.Config
 */
export type Config = Message<"mtmai.mtm.sppb.Config"> & {
  /**
   * @gotags: yaml:"secret,omitempty"
   *
   * @generated from field: string secret = 1;
   */
  secret: string;

  /**
   * @generated from field: bool disable_worker = 31;
   */
  disableWorker: boolean;

  /**
   * @generated from field: string profile = 32;
   */
  profile: string;

  /**
   * @gotags: yaml:"bootstraps,omitempty"
   *
   * @generated from field: repeated string bootstraps = 33;
   */
  bootstraps: string[];

  /**
   * @generated from field: string main_domain = 34;
   */
  mainDomain: string;

  /**
   * @generated from field: string bot_type = 35;
   */
  botType: string;

  /**
   * @gotags: yaml:"mq,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigMq mq = 2;
   */
  mq?: ConfigMq;

  /**
   * @gotags: yaml:"db,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigDB db = 3;
   */
  db?: ConfigDB;

  /**
   * 应该过时了。
   * ConfigBot bot = 4;              // @gotags: yaml:"bot,omitempty"
   *
   * @gotags: yaml:"server,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigServer server = 5;
   */
  server?: ConfigServer;

  /**
   * @gotags: yaml:"otel,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigOtel otel = 6;
   */
  otel?: ConfigOtel;

  /**
   * @gotags: yaml:"mtg,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigMtg mtg = 7;
   */
  mtg?: ConfigMtg;

  /**
   * @gotags: yaml:"github,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigGithub github = 8;
   */
  github?: ConfigGithub;

  /**
   * @gotags: yaml:"localStorage,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.LocalStorage local_storage = 9;
   */
  localStorage?: LocalStorage;

  /**
   * @gotags: yaml:"site,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigSite site = 12;
   */
  site?: ConfigSite;

  /**
   * @gotags: yaml:"cftConfig,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.CftConfig cft_config = 16;
   */
  cftConfig?: CftConfig;

  /**
   * ConfigTailscale tailscale = 17; // @gotags: yaml:"tailscale,omitempty"
   *
   * @gotags: yaml:"log,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigLog log = 18;
   */
  log?: ConfigLog;

  /**
   * @gotags: yaml:"auth,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigAuth auth = 19;
   */
  auth?: ConfigAuth;

  /**
   * @gotags: yaml:"web,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigWeb web = 21;
   */
  web?: ConfigWeb;

  /**
   * ConfigMtkv mtkv = 22;           // @gotags: yaml:"mtkv,omitempty"
   *
   * @gotags: yaml:"sshd,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigSshd sshd = 23;
   */
  sshd?: ConfigSshd;

  /**
   * @gotags: yaml:"p2p,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigP2p p2p = 24;
   */
  p2p?: ConfigP2p;

  /**
   * bool is_master = 25;            // @gotags: yaml:"isMaster,omitempty"
   *
   * @gotags: yaml:"cronJob,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigCronjob cron_job = 27;
   */
  cronJob?: ConfigCronjob;

  /**
   * @gotags: yaml:"lineslog,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigLineslog lineslog = 28;
   */
  lineslog?: ConfigLineslog;

  /**
   * @gotags: yaml:"ps,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigPs ps = 29;
   */
  ps?: ConfigPs;

  /**
   * @gotags: yaml:"web_app,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigWebApp web_app = 30;
   */
  webApp?: ConfigWebApp;
};

/**
 * Describes the message mtmai.mtm.sppb.Config.
 * Use `create(ConfigSchema)` to create a new message.
 */
export const ConfigSchema: GenMessage<Config> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 0);

/**
 * 前端web 中使用的 配置文件
 *
 * @generated from message mtmai.mtm.sppb.ConfigWebApp
 */
export type ConfigWebApp = Message<"mtmai.mtm.sppb.ConfigWebApp"> & {
  /**
   * @generated from field: string backend = 2;
   */
  backend: string;

  /**
   * @generated from field: string site_host = 3;
   */
  siteHost: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigWebApp.
 * Use `create(ConfigWebAppSchema)` to create a new message.
 */
export const ConfigWebAppSchema: GenMessage<ConfigWebApp> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 1);

/**
 * @generated from message mtmai.mtm.sppb.CftConfig
 */
export type CftConfig = Message<"mtmai.mtm.sppb.CftConfig"> & {
  /**
   * @gotags: yaml:"enabled,omitempty"
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @gotags: yaml:"ingress,omitempty"
   *
   * @generated from field: repeated mtmai.mtm.sppb.CftConfig.IngressItem ingress = 2;
   */
  ingress: CftConfig_IngressItem[];

  /**
   * @gotags: yaml:"tunnelName,omitempty"
   *
   * @generated from field: string tunnel_name = 3;
   */
  tunnelName: string;

  /**
   * @gotags: yaml:"subDomainPrefix,omitempty"
   *
   * @generated from field: string subDomain_prefix = 4;
   */
  subDomainPrefix: string;

  /**
   * @gotags: yaml:"cfApiToken,omitempty"
   *
   * @generated from field: string cf_api_token = 5;
   */
  cfApiToken: string;

  /**
   * @gotags: yaml:"cfAccountId,omitempty"
   *
   * @generated from field: string cf_account_id = 6;
   */
  cfAccountId: string;

  /**
   * @gotags: yaml:"cfApiEmail,omitempty"
   *
   * @generated from field: string cf_api_email = 7;
   */
  cfApiEmail: string;
};

/**
 * Describes the message mtmai.mtm.sppb.CftConfig.
 * Use `create(CftConfigSchema)` to create a new message.
 */
export const CftConfigSchema: GenMessage<CftConfig> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 2);

/**
 * cloudflared tunnel 更加详细的定义，参考：
 * https://github.com/cloudflare/cloudflare-go/blob/master/tunnel.go
 *
 * @generated from message mtmai.mtm.sppb.CftConfig.IngressItem
 */
export type CftConfig_IngressItem =
  Message<"mtmai.mtm.sppb.CftConfig.IngressItem"> & {
    /**
     * @gotags: yaml:"hostname,omitempty"
     *
     * @generated from field: string hostname = 1;
     */
    hostname: string;

    /**
     * @gotags: yaml:"service,omitempty"
     *
     * @generated from field: string service = 2;
     */
    service: string;

    /**
     * @gotags: yaml:"originRequest,omitempty"
     *
     * @generated from field: mtmai.mtm.sppb.CftConfig.OriginRequest origin_request = 3;
     */
    originRequest?: CftConfig_OriginRequest;
  };

/**
 * Describes the message mtmai.mtm.sppb.CftConfig.IngressItem.
 * Use `create(CftConfig_IngressItemSchema)` to create a new message.
 */
export const CftConfig_IngressItemSchema: GenMessage<CftConfig_IngressItem> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 2, 0);

/**
 * @generated from message mtmai.mtm.sppb.CftConfig.OriginRequest
 */
export type CftConfig_OriginRequest =
  Message<"mtmai.mtm.sppb.CftConfig.OriginRequest"> & {
    /**
     * e.g: 10s
     *
     * @gotags: yaml:"tlsTimeout,omitempty"
     *
     * @generated from field: string tls_timeout = 1;
     */
    tlsTimeout: string;

    /**
     * @gotags: yaml:"noTLSVerify,omitempty"
     *
     * @generated from field: bool noTLS_verify = 2;
     */
    noTLSVerify: boolean;

    /**
     * @gotags: yaml:"http2Origin,omitempty"
     *
     * @generated from field: bool http2_origin = 3;
     */
    http2Origin: boolean;

    /**
     * gotags: yaml:"disableChunkedEncoding,omitempty"
     *
     * @generated from field: bool disable_chunked_encoding = 4;
     */
    disableChunkedEncoding: boolean;
  };

/**
 * Describes the message mtmai.mtm.sppb.CftConfig.OriginRequest.
 * Use `create(CftConfig_OriginRequestSchema)` to create a new message.
 */
export const CftConfig_OriginRequestSchema: GenMessage<CftConfig_OriginRequest> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 2, 1);

/**
 * @generated from message mtmai.mtm.sppb.ConfigTailscale
 */
export type ConfigTailscale = Message<"mtmai.mtm.sppb.ConfigTailscale"> & {
  /**
   * @gotags: yaml:"enabled,omitempty"
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @gotags: yaml:"apiKey,omitempty"
   *
   * @generated from field: string api_key = 2;
   */
  apiKey: string;

  /**
   * @gotags: yaml:"authKey,omitempty"
   *
   * @generated from field: string auth_key = 3;
   */
  authKey: string;

  /**
   * @gotags: yaml:"hostName,omitempty"
   *
   * @generated from field: string host_name = 4;
   */
  hostName: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigTailscale.
 * Use `create(ConfigTailscaleSchema)` to create a new message.
 */
export const ConfigTailscaleSchema: GenMessage<ConfigTailscale> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 3);

/**
 * @generated from message mtmai.mtm.sppb.ConfigServer
 */
export type ConfigServer = Message<"mtmai.mtm.sppb.ConfigServer"> & {
  /**
   * @gotags: yaml:"enabled,omitempty"
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @gotags: yaml:"http,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.ConfigServer.Http http = 2;
   */
  http?: ConfigServer_Http;

  /**
   * 主域名
   *
   * 子域名前缀
   * string sub_domain_prefix = 4;
   *
   * @generated from field: string domain = 3;
   */
  domain: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigServer.
 * Use `create(ConfigServerSchema)` to create a new message.
 */
export const ConfigServerSchema: GenMessage<ConfigServer> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 4);

/**
 * @generated from message mtmai.mtm.sppb.ConfigServer.Http
 */
export type ConfigServer_Http = Message<"mtmai.mtm.sppb.ConfigServer.Http"> & {
  /**
   * @gotags: yaml:"addr,omitempty"
   *
   * @generated from field: string addr = 1;
   */
  addr: string;

  /**
   * @gotags: yaml:"tls,omitempty"
   *
   * @generated from field: bool tls = 2;
   */
  tls: boolean;

  /**
   * @gotags: yaml:"timeout,omitempty"
   *
   * @generated from field: google.protobuf.Duration timeout = 3;
   */
  timeout?: Duration;

  /**
   * @gotags: yaml:"apiPrefix,omitempty"
   *
   * @generated from field: string api_prefix = 4;
   */
  apiPrefix: string;

  /**
   * @gotags: yaml:"onion,omitempty"
   *
   * @generated from field: mtmai.mtm.sppb.OnionConfig onion = 5;
   */
  onion?: OnionConfig;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigServer.Http.
 * Use `create(ConfigServer_HttpSchema)` to create a new message.
 */
export const ConfigServer_HttpSchema: GenMessage<ConfigServer_Http> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 4, 0);

/**
 * @generated from message mtmai.mtm.sppb.ConfigDB
 */
export type ConfigDB = Message<"mtmai.mtm.sppb.ConfigDB"> & {
  /**
   * @gotags: yaml:"dbUrl,omitempty"
   *
   * @generated from field: string db_url = 1;
   */
  dbUrl: string;

  /**
   * @gotags: yaml:"dbUrl2,omitempty"
   *
   * @generated from field: string db_url2 = 2;
   */
  dbUrl2: string;

  /**
   * @gotags: yaml:"logLevel,omitempty"
   *
   * @generated from field: string log_level = 3;
   */
  logLevel: string;

  /**
   * @gotags: yaml:"authMigrate,omitempty"
   *
   * @generated from field: bool auto_migrate = 4;
   */
  autoMigrate: boolean;

  /**
   * @gotags: yaml:"productDbUrls,omitempty"
   *
   * @generated from field: repeated string product_db_urls = 5;
   */
  productDbUrls: string[];

  /**
   * @gotags: yaml:"devlopmentDbUrls,omitempty"
   *
   * @generated from field: repeated string devlopment_db_urls = 6;
   */
  devlopmentDbUrls: string[];
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigDB.
 * Use `create(ConfigDBSchema)` to create a new message.
 */
export const ConfigDBSchema: GenMessage<ConfigDB> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 5);

/**
 * @generated from message mtmai.mtm.sppb.ConfigMq
 */
export type ConfigMq = Message<"mtmai.mtm.sppb.ConfigMq"> & {
  /**
   * @gotags: yaml:"group,omitempty"
   *
   * @generated from field: string group = 1;
   */
  group: string;

  /**
   * @gotags: yaml:"mqMain,omitempty"
   *
   * @generated from field: string amqp_url = 2;
   */
  amqpUrl: string;

  /**
   * @gotags: yaml:"queueNamePrefix,omitempty"
   *
   * @generated from field: string queue_name_prefix = 3;
   */
  queueNamePrefix: string;

  /**
   * @gotags: yaml:"nsqdAddr,omitempty"
   *
   * @generated from field: string nsqd_addr = 4;
   */
  nsqdAddr: string;

  /**
   * @gotags: yaml:"nsqdApiUrl,omitempty"
   *
   * @generated from field: string nsqd_api_url = 5;
   */
  nsqdApiUrl: string;

  /**
   * @gotags: yaml:"nsqdLookupUrl,omitempty"
   *
   * @generated from field: string nsqd_lookup_url = 6;
   */
  nsqdLookupUrl: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigMq.
 * Use `create(ConfigMqSchema)` to create a new message.
 */
export const ConfigMqSchema: GenMessage<ConfigMq> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 6);

/**
 * @generated from message mtmai.mtm.sppb.ConfigLog
 */
export type ConfigLog = Message<"mtmai.mtm.sppb.ConfigLog"> & {
  /**
   * @gotags: yaml:"level,omitempty"
   *
   * @generated from field: string level = 1;
   */
  level: string;

  /**
   * 对应 promtail.yaml中的 client: url:, 用于向免费的 grafana.net 推送日志
   *
   * @gotags: yaml:"lokiPushUrl,omitempty"
   *
   * @generated from field: string loki_push_url = 2;
   */
  lokiPushUrl: string;

  /**
   * @gotags: yaml:fileLogEnabled",omitempty"
   *
   * @generated from field: bool file_log_enabled = 3;
   */
  fileLogEnabled: boolean;

  /**
   * @gotags: yaml:fileLogDir",omitempty"
   *
   * @generated from field: string file_log_dir = 4;
   */
  fileLogDir: string;

  /**
   * @gotags: yaml:withName",omitempty"
   *
   * @generated from field: optional string with_name = 5;
   */
  withName?: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigLog.
 * Use `create(ConfigLogSchema)` to create a new message.
 */
export const ConfigLogSchema: GenMessage<ConfigLog> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 7);

/**
 * @generated from message mtmai.mtm.sppb.ConfigOtel
 */
export type ConfigOtel = Message<"mtmai.mtm.sppb.ConfigOtel"> & {
  /**
   * @gotags: yaml:"enabled,omitempty"
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @gotags: yaml:"exporterOtlpProtocol,omitempty"
   *
   * @generated from field: string exporter_otlp_protocol = 2;
   */
  exporterOtlpProtocol: string;

  /**
   * @gotags: yaml:"exporterOtlpEndpoint,omitempty"
   *
   * @generated from field: string exporter_otlp_endpoint = 3;
   */
  exporterOtlpEndpoint: string;

  /**
   * @gotags: yaml:"exporterOtlpHeaders,omitempty"
   *
   * @generated from field: string exporter_otlp_headers = 4;
   */
  exporterOtlpHeaders: string;

  /**
   * @gotags: yaml:"svcName,omitempty"
   *
   * @generated from field: string svc_name = 5;
   */
  svcName: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigOtel.
 * Use `create(ConfigOtelSchema)` to create a new message.
 */
export const ConfigOtelSchema: GenMessage<ConfigOtel> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 8);

/**
 * @generated from message mtmai.mtm.sppb.ConfigMtg
 */
export type ConfigMtg = Message<"mtmai.mtm.sppb.ConfigMtg"> & {
  /**
   * @gotags: yaml:"httpProxyAddr,omitempty"
   *
   * @generated from field: string http_proxy_addr = 1;
   */
  httpProxyAddr: string;

  /**
   * @gotags: yaml:"httpProxyAddrTls,omitempty"
   *
   * @generated from field: string http_proxy_addr_tls = 2;
   */
  httpProxyAddrTls: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigMtg.
 * Use `create(ConfigMtgSchema)` to create a new message.
 */
export const ConfigMtgSchema: GenMessage<ConfigMtg> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 9);

/**
 * @generated from message mtmai.mtm.sppb.ConfigGithub
 */
export type ConfigGithub = Message<"mtmai.mtm.sppb.ConfigGithub"> & {
  /**
   * @gotags: yaml:"ghToken,omitempty"
   *
   * @generated from field: string gh_token = 1;
   */
  ghToken: string;

  /**
   * @gotags: yaml:"ghUser,omitempty"
   *
   * @generated from field: string gh_user = 2;
   */
  ghUser: string;

  /**
   * @gotags: yaml:"ghMainRepo,omitempty"
   *
   * @generated from field: string gh_main_repo = 3;
   */
  ghMainRepo: string;

  /**
   * 自动化操作时，拉取源码存放的根目录
   *
   * @gotags: yaml:"workDir,omitempty"
   *
   * @generated from field: string work_dir = 4;
   */
  workDir: string;

  /**
   * @gotags: yaml:"ghAppId,omitempty"
   *
   * @generated from field: string gh_app_id = 5;
   */
  ghAppId: string;

  /**
   * @gotags: yaml:"ghClientId,omitempty"
   *
   * @generated from field: string gh_client_id = 6;
   */
  ghClientId: string;

  /**
   * @gotags: yaml:"ghClientSecret,omitempty"
   *
   * @generated from field: string gh_client_secret = 7;
   */
  ghClientSecret: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigGithub.
 * Use `create(ConfigGithubSchema)` to create a new message.
 */
export const ConfigGithubSchema: GenMessage<ConfigGithub> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 10);

/**
 * @generated from message mtmai.mtm.sppb.ConfigSite
 */
export type ConfigSite = Message<"mtmai.mtm.sppb.ConfigSite"> & {
  /**
   * @generated from field: string default_domain = 1;
   */
  defaultDomain: string;

  /**
   * @generated from field: uint32 default_site_id = 2;
   */
  defaultSiteId: number;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigSite.
 * Use `create(ConfigSiteSchema)` to create a new message.
 */
export const ConfigSiteSchema: GenMessage<ConfigSite> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 11);

/**
 * @generated from message mtmai.mtm.sppb.ConfigAuth
 */
export type ConfigAuth = Message<"mtmai.mtm.sppb.ConfigAuth"> & {
  /**
   * @gotags: yaml:"secret,omitempty"
   *
   * @generated from field: string secret = 1;
   */
  secret: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigAuth.
 * Use `create(ConfigAuthSchema)` to create a new message.
 */
export const ConfigAuthSchema: GenMessage<ConfigAuth> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 12);

/**
 * @generated from message mtmai.mtm.sppb.ConfigWeb
 */
export type ConfigWeb = Message<"mtmai.mtm.sppb.ConfigWeb"> & {
  /**
   * @gotags: yaml:"endable,omitempty"
   *
   * @generated from field: bool enable = 1;
   */
  enable: boolean;

  /**
   * @gotags: yaml:"addr,omitempty"
   *
   * @generated from field: string addr = 2;
   */
  addr: string;

  /**
   * @gotags: yaml:"dir,omitempty"
   *
   * @generated from field: string dir = 3;
   */
  dir: string;

  /**
   * @gotags: yaml:"framework,omitempty"
   *
   * @generated from field: string framework = 4;
   */
  framework: string;

  /**
   * @gotags: yaml:"buildCommand,omitempty"
   *
   * @generated from field: string build_command = 5;
   */
  buildCommand: string;

  /**
   * @gotags: yaml:"runCommand,omitempty"
   *
   * @generated from field: string run_command = 6;
   */
  runCommand: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigWeb.
 * Use `create(ConfigWebSchema)` to create a new message.
 */
export const ConfigWebSchema: GenMessage<ConfigWeb> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 13);

/**
 * @generated from message mtmai.mtm.sppb.ConfigMtkv
 */
export type ConfigMtkv = Message<"mtmai.mtm.sppb.ConfigMtkv"> & {
  /**
   * @gotags: yaml:"forceMemory,omitempty"
   *
   * @generated from field: bool force_memory = 1;
   */
  forceMemory: boolean;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigMtkv.
 * Use `create(ConfigMtkvSchema)` to create a new message.
 */
export const ConfigMtkvSchema: GenMessage<ConfigMtkv> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 14);

/**
 * 表示 基于 onion 域名的服务配置
 *
 * @generated from message mtmai.mtm.sppb.OnionConfig
 */
export type OnionConfig = Message<"mtmai.mtm.sppb.OnionConfig"> & {
  /**
   * @gotags: yaml:"enabled,omitempty"
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @gotags: yaml:"privateKey,omitempty"
   *
   * @generated from field: string private_key = 2;
   */
  privateKey: string;

  /**
   * @gotags: yaml:"onionId,omitempty"
   *
   * @generated from field: string onion_id = 3;
   */
  onionId: string;

  /**
   * @gotags: yaml:"listenAddr,omitempty"
   *
   * @generated from field: string listen_addr = 4;
   */
  listenAddr: string;
};

/**
 * Describes the message mtmai.mtm.sppb.OnionConfig.
 * Use `create(OnionConfigSchema)` to create a new message.
 */
export const OnionConfigSchema: GenMessage<OnionConfig> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 15);

/**
 * @generated from message mtmai.mtm.sppb.ConfigSshd
 */
export type ConfigSshd = Message<"mtmai.mtm.sppb.ConfigSshd"> & {
  /**
   * @gotags: yaml:"enabled,omitempty"
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @gotags: yaml:"addr,omitempty"
   *
   * @generated from field: string addr = 2;
   */
  addr: string;

  /**
   * @gotags: yaml:"adminUserPassword,omitempty"
   *
   * @generated from field: string admin_user_password = 3;
   */
  adminUserPassword: string;

  /**
   * @gotags: yaml:"maxTimeout,omitempty"
   *
   * @generated from field: uint32 max_timeout = 4;
   */
  maxTimeout: number;

  /**
   * @gotags: yaml:"idelTimeout,omitempty"
   *
   * @generated from field: uint32 idle_timeout = 5;
   */
  idleTimeout: number;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigSshd.
 * Use `create(ConfigSshdSchema)` to create a new message.
 */
export const ConfigSshdSchema: GenMessage<ConfigSshd> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 16);

/**
 * @generated from message mtmai.mtm.sppb.ConfigP2p
 */
export type ConfigP2p = Message<"mtmai.mtm.sppb.ConfigP2p"> & {
  /**
   * @gotags: yaml:"enabled,omitempty"
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @gotags: yaml:"privateKey,omitempty"
   *
   * @generated from field: string private_key = 2;
   */
  privateKey: string;

  /**
   * @gotags: yaml:"rendezvous,omitempty"
   *
   * @generated from field: string rendezvous = 3;
   */
  rendezvous: string;

  /**
   * @gotags: yaml:"enabledDht,omitempty"
   *
   * @generated from field: bool enabled_dht = 6;
   */
  enabledDht: boolean;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigP2p.
 * Use `create(ConfigP2pSchema)` to create a new message.
 */
export const ConfigP2pSchema: GenMessage<ConfigP2p> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 17);

/**
 * @generated from message mtmai.mtm.sppb.ConfigCronjob
 */
export type ConfigCronjob = Message<"mtmai.mtm.sppb.ConfigCronjob"> & {
  /**
   * @gotags: yaml:"enabled,omitempty"
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigCronjob.
 * Use `create(ConfigCronjobSchema)` to create a new message.
 */
export const ConfigCronjobSchema: GenMessage<ConfigCronjob> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 18);

/**
 * @generated from message mtmai.mtm.sppb.ConfigLineslog
 */
export type ConfigLineslog = Message<"mtmai.mtm.sppb.ConfigLineslog"> & {
  /**
   * @gotags: yaml:"useMemory,omitempty"
   *
   * @generated from field: bool use_memory = 1;
   */
  useMemory: boolean;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigLineslog.
 * Use `create(ConfigLineslogSchema)` to create a new message.
 */
export const ConfigLineslogSchema: GenMessage<ConfigLineslog> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 19);

/**
 * @generated from message mtmai.mtm.sppb.LocalStorage
 */
export type LocalStorage = Message<"mtmai.mtm.sppb.LocalStorage"> & {
  /**
   * @gotags: yaml:"dirBase,omitempty"
   *
   * @generated from field: string dir_base = 1;
   */
  dirBase: string;

  /**
   * @gotags: yaml:"dirBin,omitempty"
   *
   * @generated from field: string dir_bin = 2;
   */
  dirBin: string;
};

/**
 * Describes the message mtmai.mtm.sppb.LocalStorage.
 * Use `create(LocalStorageSchema)` to create a new message.
 */
export const LocalStorageSchema: GenMessage<LocalStorage> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 20);

/**
 * @generated from message mtmai.mtm.sppb.ConfigPs
 */
export type ConfigPs = Message<"mtmai.mtm.sppb.ConfigPs"> & {
  /**
   * @gotags: yaml:"cmdChannels,omitempty"
   *
   * @generated from field: repeated mtmai.mtm.sppb.CmdChannel cmd_channels = 1;
   */
  cmdChannels: CmdChannel[];

  /**
   * @gotags: yaml:"eventsTopic,omitempty"
   *
   * @generated from field: string events_topic = 2;
   */
  eventsTopic: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigPs.
 * Use `create(ConfigPsSchema)` to create a new message.
 */
export const ConfigPsSchema: GenMessage<ConfigPs> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 21);

/**
 * @generated from message mtmai.mtm.sppb.CmdChannel
 */
export type CmdChannel = Message<"mtmai.mtm.sppb.CmdChannel"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * @generated from field: string group = 3;
   */
  group: string;

  /**
   * @generated from field: string topic = 4;
   */
  topic: string;
};

/**
 * Describes the message mtmai.mtm.sppb.CmdChannel.
 * Use `create(CmdChannelSchema)` to create a new message.
 */
export const CmdChannelSchema: GenMessage<CmdChannel> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 22);

/**
 * @generated from message mtmai.mtm.sppb.ConfGetReq
 */
export type ConfGetReq = Message<"mtmai.mtm.sppb.ConfGetReq"> & {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string profile = 2;
   */
  profile: string;

  /**
   * 本机唯一识别码
   *
   * @generated from field: string host_id = 3;
   */
  hostId: string;

  /**
   * 在profile 基础上细分
   *
   * @generated from field: string bot_type = 4;
   */
  botType: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfGetReq.
 * Use `create(ConfGetReqSchema)` to create a new message.
 */
export const ConfGetReqSchema: GenMessage<ConfGetReq> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 23);

/**
 * @generated from message mtmai.mtm.sppb.ConfListReq
 */
export type ConfListReq = Message<"mtmai.mtm.sppb.ConfListReq"> & {
  /**
   * @generated from field: mtmai.mtm.sppb.Paging Pagination = 1;
   */
  Pagination?: Paging;

  /**
   * @generated from field: string q = 2;
   */
  q: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfListReq.
 * Use `create(ConfListReqSchema)` to create a new message.
 */
export const ConfListReqSchema: GenMessage<ConfListReq> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 24);

/**
 * @generated from message mtmai.mtm.sppb.ConfigItem
 */
export type ConfigItem = Message<"mtmai.mtm.sppb.ConfigItem"> & {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled: boolean;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfigItem.
 * Use `create(ConfigItemSchema)` to create a new message.
 */
export const ConfigItemSchema: GenMessage<ConfigItem> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 25);

/**
 * @generated from message mtmai.mtm.sppb.ConfListRes
 */
export type ConfListRes = Message<"mtmai.mtm.sppb.ConfListRes"> & {
  /**
   * @generated from field: mtmai.mtm.sppb.Paging Pagination = 1;
   */
  Pagination?: Paging;

  /**
   * @generated from field: int32 Total = 2;
   */
  Total: number;

  /**
   * @generated from field: repeated mtmai.mtm.sppb.ConfigItem items = 3;
   */
  items: ConfigItem[];
};

/**
 * Describes the message mtmai.mtm.sppb.ConfListRes.
 * Use `create(ConfListResSchema)` to create a new message.
 */
export const ConfListResSchema: GenMessage<ConfListRes> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 26);

/**
 * @generated from message mtmai.mtm.sppb.ConfCreateReq
 */
export type ConfCreateReq = Message<"mtmai.mtm.sppb.ConfCreateReq"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string content = 2;
   */
  content: string;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfCreateReq.
 * Use `create(ConfCreateReqSchema)` to create a new message.
 */
export const ConfCreateReqSchema: GenMessage<ConfCreateReq> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 27);

/**
 * @generated from message mtmai.mtm.sppb.ConfUpdateReq
 */
export type ConfUpdateReq = Message<"mtmai.mtm.sppb.ConfUpdateReq"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled: boolean;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfUpdateReq.
 * Use `create(ConfUpdateReqSchema)` to create a new message.
 */
export const ConfUpdateReqSchema: GenMessage<ConfUpdateReq> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 28);

/**
 * @generated from message mtmai.mtm.sppb.ConfGetRes
 */
export type ConfGetRes = Message<"mtmai.mtm.sppb.ConfGetRes"> & {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled: boolean;

  /**
   * @generated from field: mtmai.mtm.sppb.Config config = 4;
   */
  config?: Config;
};

/**
 * Describes the message mtmai.mtm.sppb.ConfGetRes.
 * Use `create(ConfGetResSchema)` to create a new message.
 */
export const ConfGetResSchema: GenMessage<ConfGetRes> =
  /*@__PURE__*/
  messageDesc(file_mtm_sppb_conf, 29);

/**
 * @generated from service mtmai.mtm.sppb.ConfService
 */
export const ConfService: GenService<{
  /**
   * @generated from rpc mtmai.mtm.sppb.ConfService.ConfList
   */
  confList: {
    methodKind: "unary";
    input: typeof ConfListReqSchema;
    output: typeof ConfListResSchema;
  };
  /**
   * @generated from rpc mtmai.mtm.sppb.ConfService.ConfGet
   */
  confGet: {
    methodKind: "unary";
    input: typeof ConfGetReqSchema;
    output: typeof ConfGetResSchema;
  };
  /**
   * @generated from rpc mtmai.mtm.sppb.ConfService.ConfCreate
   */
  confCreate: {
    methodKind: "unary";
    input: typeof ConfCreateReqSchema;
    output: typeof ResultSchema;
  };
  /**
   * @generated from rpc mtmai.mtm.sppb.ConfService.ConfUpdate
   */
  confUpdate: {
    methodKind: "unary";
    input: typeof ConfUpdateReqSchema;
    output: typeof ResultSchema;
  };
  /**
   * @generated from rpc mtmai.mtm.sppb.ConfService.ConfDelete
   */
  confDelete: {
    methodKind: "unary";
    input: typeof ResDeleteReqSchema;
    output: typeof ResultSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_mtm_sppb_conf, 0);
