// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file mtmai/mtmpb/dispatcher.proto (package mtmai.mtmpb, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file mtmai/mtmpb/dispatcher.proto.
 */
export const file_mtmai_mtmpb_dispatcher: GenFile = /*@__PURE__*/
  fileDesc("ChxtdG1haS9tdG1wYi9kaXNwYXRjaGVyLnByb3RvEgttdG1haS5tdG1wYiJWCgxXb3JrZXJMYWJlbHMSFQoIc3RyVmFsdWUYASABKAlIAIgBARIVCghpbnRWYWx1ZRgCIAEoBUgBiAEBQgsKCV9zdHJWYWx1ZUILCglfaW50VmFsdWUi1AEKC1J1bnRpbWVJbmZvEhcKCnNka1ZlcnNpb24YASABKAlIAIgBARIoCghsYW5ndWFnZRgCIAEoDjIRLm10bWFpLm10bXBiLlNES1NIAYgBARIcCg9sYW5ndWFnZVZlcnNpb24YAyABKAlIAogBARIPCgJvcxgEIAEoCUgDiAEBEhIKBWV4dHJhGAUgASgJSASIAQFCDQoLX3Nka1ZlcnNpb25CCwoJX2xhbmd1YWdlQhIKEF9sYW5ndWFnZVZlcnNpb25CBQoDX29zQggKBl9leHRyYSLkAgoVV29ya2VyUmVnaXN0ZXJSZXF1ZXN0EhIKCndvcmtlck5hbWUYASABKAkSDwoHYWN0aW9ucxgCIAMoCRIQCghzZXJ2aWNlcxgDIAMoCRIUCgdtYXhSdW5zGAQgASgFSACIAQESPgoGbGFiZWxzGAUgAygLMi4ubXRtYWkubXRtcGIuV29ya2VyUmVnaXN0ZXJSZXF1ZXN0LkxhYmVsc0VudHJ5EhYKCXdlYmhvb2tJZBgGIAEoCUgBiAEBEjIKC3J1bnRpbWVJbmZvGAcgASgLMhgubXRtYWkubXRtcGIuUnVudGltZUluZm9IAogBARpICgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSKAoFdmFsdWUYAiABKAsyGS5tdG1haS5tdG1wYi5Xb3JrZXJMYWJlbHM6AjgBQgoKCF9tYXhSdW5zQgwKCl93ZWJob29rSWRCDgoMX3J1bnRpbWVJbmZvIlAKFldvcmtlclJlZ2lzdGVyUmVzcG9uc2USEAoIdGVuYW50SWQYASABKAkSEAoId29ya2VySWQYAiABKAkSEgoKd29ya2VyTmFtZRgDIAEoCSK7AQoZVXBzZXJ0V29ya2VyTGFiZWxzUmVxdWVzdBIQCgh3b3JrZXJJZBgBIAEoCRJCCgZsYWJlbHMYAiADKAsyMi5tdG1haS5tdG1wYi5VcHNlcnRXb3JrZXJMYWJlbHNSZXF1ZXN0LkxhYmVsc0VudHJ5GkgKC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRIoCgV2YWx1ZRgCIAEoCzIZLm10bWFpLm10bXBiLldvcmtlckxhYmVsczoCOAEiQAoaVXBzZXJ0V29ya2VyTGFiZWxzUmVzcG9uc2USEAoIdGVuYW50SWQYASABKAkSEAoId29ya2VySWQYAiABKAkikgQKDkFzc2lnbmVkQWN0aW9uEhAKCHRlbmFudElkGAEgASgJEhUKDXdvcmtmbG93UnVuSWQYAiABKAkSGAoQZ2V0R3JvdXBLZXlSdW5JZBgDIAEoCRINCgVqb2JJZBgEIAEoCRIPCgdqb2JOYW1lGAUgASgJEhAKCGpvYlJ1bklkGAYgASgJEg4KBnN0ZXBJZBgHIAEoCRIRCglzdGVwUnVuSWQYCCABKAkSEAoIYWN0aW9uSWQYCSABKAkSKwoKYWN0aW9uVHlwZRgKIAEoDjIXLm10bWFpLm10bXBiLkFjdGlvblR5cGUSFQoNYWN0aW9uUGF5bG9hZBgLIAEoCRIQCghzdGVwTmFtZRgMIAEoCRISCgpyZXRyeUNvdW50GA0gASgFEiAKE2FkZGl0aW9uYWxfbWV0YWRhdGEYDiABKAlIAIgBARIhChRjaGlsZF93b3JrZmxvd19pbmRleBgPIAEoBUgBiAEBEh8KEmNoaWxkX3dvcmtmbG93X2tleRgQIAEoCUgCiAEBEiMKFnBhcmVudF93b3JrZmxvd19ydW5faWQYESABKAlIA4gBAUIWChRfYWRkaXRpb25hbF9tZXRhZGF0YUIXChVfY2hpbGRfd29ya2Zsb3dfaW5kZXhCFQoTX2NoaWxkX3dvcmtmbG93X2tleUIZChdfcGFyZW50X3dvcmtmbG93X3J1bl9pZCInChNXb3JrZXJMaXN0ZW5SZXF1ZXN0EhAKCHdvcmtlcklkGAEgASgJIiwKGFdvcmtlclVuc3Vic2NyaWJlUmVxdWVzdBIQCgh3b3JrZXJJZBgBIAEoCSI/ChlXb3JrZXJVbnN1YnNjcmliZVJlc3BvbnNlEhAKCHRlbmFudElkGAEgASgJEhAKCHdvcmtlcklkGAIgASgJIu0BChNHcm91cEtleUFjdGlvbkV2ZW50EhAKCHdvcmtlcklkGAEgASgJEhUKDXdvcmtmbG93UnVuSWQYAiABKAkSGAoQZ2V0R3JvdXBLZXlSdW5JZBgDIAEoCRIQCghhY3Rpb25JZBgEIAEoCRIyCg5ldmVudFRpbWVzdGFtcBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNwoJZXZlbnRUeXBlGAYgASgOMiQubXRtYWkubXRtcGIuR3JvdXBLZXlBY3Rpb25FdmVudFR5cGUSFAoMZXZlbnRQYXlsb2FkGAcgASgJIqACCg9TdGVwQWN0aW9uRXZlbnQSEAoId29ya2VySWQYASABKAkSDQoFam9iSWQYAiABKAkSEAoIam9iUnVuSWQYAyABKAkSDgoGc3RlcElkGAQgASgJEhEKCXN0ZXBSdW5JZBgFIAEoCRIQCghhY3Rpb25JZBgGIAEoCRIyCg5ldmVudFRpbWVzdGFtcBgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMwoJZXZlbnRUeXBlGAggASgOMiAubXRtYWkubXRtcGIuU3RlcEFjdGlvbkV2ZW50VHlwZRIUCgxldmVudFBheWxvYWQYCSABKAkSFwoKcmV0cnlDb3VudBgKIAEoBUgAiAEBQg0KC19yZXRyeUNvdW50IjkKE0FjdGlvbkV2ZW50UmVzcG9uc2USEAoIdGVuYW50SWQYASABKAkSEAoId29ya2VySWQYAiABKAkiwAEKIFN1YnNjcmliZVRvV29ya2Zsb3dFdmVudHNSZXF1ZXN0EhoKDXdvcmtmbG93UnVuSWQYASABKAlIAIgBARIeChFhZGRpdGlvbmFsTWV0YUtleRgCIAEoCUgBiAEBEiAKE2FkZGl0aW9uYWxNZXRhVmFsdWUYAyABKAlIAogBAUIQCg5fd29ya2Zsb3dSdW5JZEIUChJfYWRkaXRpb25hbE1ldGFLZXlCFgoUX2FkZGl0aW9uYWxNZXRhVmFsdWUiNwoeU3Vic2NyaWJlVG9Xb3JrZmxvd1J1bnNSZXF1ZXN0EhUKDXdvcmtmbG93UnVuSWQYASABKAkiygIKDVdvcmtmbG93RXZlbnQSFQoNd29ya2Zsb3dSdW5JZBgBIAEoCRIvCgxyZXNvdXJjZVR5cGUYAiABKA4yGS5tdG1haS5tdG1wYi5SZXNvdXJjZVR5cGUSMQoJZXZlbnRUeXBlGAMgASgOMh4ubXRtYWkubXRtcGIuUmVzb3VyY2VFdmVudFR5cGUSEgoKcmVzb3VyY2VJZBgEIAEoCRIyCg5ldmVudFRpbWVzdGFtcBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFAoMZXZlbnRQYXlsb2FkGAYgASgJEg4KBmhhbmd1cBgHIAEoCBIYCgtzdGVwUmV0cmllcxgIIAEoBUgAiAEBEhcKCnJldHJ5Q291bnQYCSABKAVIAYgBAUIOCgxfc3RlcFJldHJpZXNCDQoLX3JldHJ5Q291bnQiwAEKEFdvcmtmbG93UnVuRXZlbnQSFQoNd29ya2Zsb3dSdW5JZBgBIAEoCRI0CglldmVudFR5cGUYAiABKA4yIS5tdG1haS5tdG1wYi5Xb3JrZmxvd1J1bkV2ZW50VHlwZRIyCg5ldmVudFRpbWVzdGFtcBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHcmVzdWx0cxgEIAMoCzIaLm10bWFpLm10bXBiLlN0ZXBSdW5SZXN1bHQiigEKDVN0ZXBSdW5SZXN1bHQSEQoJc3RlcFJ1bklkGAEgASgJEhYKDnN0ZXBSZWFkYWJsZUlkGAIgASgJEhAKCGpvYlJ1bklkGAMgASgJEhIKBWVycm9yGAQgASgJSACIAQESEwoGb3V0cHV0GAUgASgJSAGIAQFCCAoGX2Vycm9yQgkKB19vdXRwdXQiVwoNT3ZlcnJpZGVzRGF0YRIRCglzdGVwUnVuSWQYASABKAkSDAoEcGF0aBgCIAEoCRINCgV2YWx1ZRgDIAEoCRIWCg5jYWxsZXJGaWxlbmFtZRgEIAEoCSIXChVPdmVycmlkZXNEYXRhUmVzcG9uc2UiVQoQSGVhcnRiZWF0UmVxdWVzdBIQCgh3b3JrZXJJZBgBIAEoCRIvCgtoZWFydGJlYXRBdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiEwoRSGVhcnRiZWF0UmVzcG9uc2UiRgoVUmVmcmVzaFRpbWVvdXRSZXF1ZXN0EhEKCXN0ZXBSdW5JZBgBIAEoCRIaChJpbmNyZW1lbnRUaW1lb3V0QnkYAiABKAkiRwoWUmVmcmVzaFRpbWVvdXRSZXNwb25zZRItCgl0aW1lb3V0QXQYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIicKElJlbGVhc2VTbG90UmVxdWVzdBIRCglzdGVwUnVuSWQYASABKAkiFQoTUmVsZWFzZVNsb3RSZXNwb25zZSo3CgRTREtTEgsKB1VOS05PV04QABIGCgJHTxABEgoKBlBZVEhPThACEg4KClRZUEVTQ1JJUFQQAypOCgpBY3Rpb25UeXBlEhIKDlNUQVJUX1NURVBfUlVOEAASEwoPQ0FOQ0VMX1NURVBfUlVOEAESFwoTU1RBUlRfR0VUX0dST1VQX0tFWRACKqIBChdHcm91cEtleUFjdGlvbkV2ZW50VHlwZRIgChxHUk9VUF9LRVlfRVZFTlRfVFlQRV9VTktOT1dOEAASIAocR1JPVVBfS0VZX0VWRU5UX1RZUEVfU1RBUlRFRBABEiIKHkdST1VQX0tFWV9FVkVOVF9UWVBFX0NPTVBMRVRFRBACEh8KG0dST1VQX0tFWV9FVkVOVF9UWVBFX0ZBSUxFRBADKqwBChNTdGVwQWN0aW9uRXZlbnRUeXBlEhsKF1NURVBfRVZFTlRfVFlQRV9VTktOT1dOEAASGwoXU1RFUF9FVkVOVF9UWVBFX1NUQVJURUQQARIdChlTVEVQX0VWRU5UX1RZUEVfQ09NUExFVEVEEAISGgoWU1RFUF9FVkVOVF9UWVBFX0ZBSUxFRBADEiAKHFNURVBfRVZFTlRfVFlQRV9BQ0tOT1dMRURHRUQQBCplCgxSZXNvdXJjZVR5cGUSGQoVUkVTT1VSQ0VfVFlQRV9VTktOT1dOEAASGgoWUkVTT1VSQ0VfVFlQRV9TVEVQX1JVThABEh4KGlJFU09VUkNFX1RZUEVfV09SS0ZMT1dfUlVOEAIq/gEKEVJlc291cmNlRXZlbnRUeXBlEh8KG1JFU09VUkNFX0VWRU5UX1RZUEVfVU5LTk9XThAAEh8KG1JFU09VUkNFX0VWRU5UX1RZUEVfU1RBUlRFRBABEiEKHVJFU09VUkNFX0VWRU5UX1RZUEVfQ09NUExFVEVEEAISHgoaUkVTT1VSQ0VfRVZFTlRfVFlQRV9GQUlMRUQQAxIhCh1SRVNPVVJDRV9FVkVOVF9UWVBFX0NBTkNFTExFRBAEEiEKHVJFU09VUkNFX0VWRU5UX1RZUEVfVElNRURfT1VUEAUSHgoaUkVTT1VSQ0VfRVZFTlRfVFlQRV9TVFJFQU0QBio8ChRXb3JrZmxvd1J1bkV2ZW50VHlwZRIkCiBXT1JLRkxPV19SVU5fRVZFTlRfVFlQRV9GSU5JU0hFRBAAMrAJCgpEaXNwYXRjaGVyElUKCFJlZ2lzdGVyEiIubXRtYWkubXRtcGIuV29ya2VyUmVnaXN0ZXJSZXF1ZXN0GiMubXRtYWkubXRtcGIuV29ya2VyUmVnaXN0ZXJSZXNwb25zZSIAEksKBkxpc3RlbhIgLm10bWFpLm10bXBiLldvcmtlckxpc3RlblJlcXVlc3QaGy5tdG1haS5tdG1wYi5Bc3NpZ25lZEFjdGlvbiIAMAESTQoITGlzdGVuVjISIC5tdG1haS5tdG1wYi5Xb3JrZXJMaXN0ZW5SZXF1ZXN0GhsubXRtYWkubXRtcGIuQXNzaWduZWRBY3Rpb24iADABEkwKCUhlYXJ0YmVhdBIdLm10bWFpLm10bXBiLkhlYXJ0YmVhdFJlcXVlc3QaHi5tdG1haS5tdG1wYi5IZWFydGJlYXRSZXNwb25zZSIAEmoKGVN1YnNjcmliZVRvV29ya2Zsb3dFdmVudHMSLS5tdG1haS5tdG1wYi5TdWJzY3JpYmVUb1dvcmtmbG93RXZlbnRzUmVxdWVzdBoaLm10bWFpLm10bXBiLldvcmtmbG93RXZlbnQiADABEmsKF1N1YnNjcmliZVRvV29ya2Zsb3dSdW5zEisubXRtYWkubXRtcGIuU3Vic2NyaWJlVG9Xb3JrZmxvd1J1bnNSZXF1ZXN0Gh0ubXRtYWkubXRtcGIuV29ya2Zsb3dSdW5FdmVudCIAKAEwARJXChNTZW5kU3RlcEFjdGlvbkV2ZW50EhwubXRtYWkubXRtcGIuU3RlcEFjdGlvbkV2ZW50GiAubXRtYWkubXRtcGIuQWN0aW9uRXZlbnRSZXNwb25zZSIAEl8KF1NlbmRHcm91cEtleUFjdGlvbkV2ZW50EiAubXRtYWkubXRtcGIuR3JvdXBLZXlBY3Rpb25FdmVudBogLm10bWFpLm10bXBiLkFjdGlvbkV2ZW50UmVzcG9uc2UiABJUChBQdXRPdmVycmlkZXNEYXRhEhoubXRtYWkubXRtcGIuT3ZlcnJpZGVzRGF0YRoiLm10bWFpLm10bXBiLk92ZXJyaWRlc0RhdGFSZXNwb25zZSIAEl4KC1Vuc3Vic2NyaWJlEiUubXRtYWkubXRtcGIuV29ya2VyVW5zdWJzY3JpYmVSZXF1ZXN0GiYubXRtYWkubXRtcGIuV29ya2VyVW5zdWJzY3JpYmVSZXNwb25zZSIAElsKDlJlZnJlc2hUaW1lb3V0EiIubXRtYWkubXRtcGIuUmVmcmVzaFRpbWVvdXRSZXF1ZXN0GiMubXRtYWkubXRtcGIuUmVmcmVzaFRpbWVvdXRSZXNwb25zZSIAElIKC1JlbGVhc2VTbG90Eh8ubXRtYWkubXRtcGIuUmVsZWFzZVNsb3RSZXF1ZXN0GiAubXRtYWkubXRtcGIuUmVsZWFzZVNsb3RSZXNwb25zZSIAEmcKElVwc2VydFdvcmtlckxhYmVscxImLm10bWFpLm10bXBiLlVwc2VydFdvcmtlckxhYmVsc1JlcXVlc3QaJy5tdG1haS5tdG1wYi5VcHNlcnRXb3JrZXJMYWJlbHNSZXNwb25zZSIAQqUBCg9jb20ubXRtYWkubXRtcGJCD0Rpc3BhdGNoZXJQcm90b1ABWjRnaXRodWIuY29tL2NvZGVoMDA3L2dvbXRtL210bS9zcHBiL210bWFpL210bXBiO210bXBiogIDTU1YqgILTXRtYWkuTXRtcGLKAgtNdG1haVxNdG1wYuICF010bWFpXE10bXBiXEdQQk1ldGFkYXRh6gIMTXRtYWk6Ok10bXBiYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message mtmai.mtmpb.WorkerLabels
 */
export type WorkerLabels = Message<"mtmai.mtmpb.WorkerLabels"> & {
  /**
   * value of the label
   *
   * @generated from field: optional string strValue = 1;
   */
  strValue?: string;

  /**
   * @generated from field: optional int32 intValue = 2;
   */
  intValue?: number;
};

/**
 * Describes the message mtmai.mtmpb.WorkerLabels.
 * Use `create(WorkerLabelsSchema)` to create a new message.
 */
export const WorkerLabelsSchema: GenMessage<WorkerLabels> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 0);

/**
 * @generated from message mtmai.mtmpb.RuntimeInfo
 */
export type RuntimeInfo = Message<"mtmai.mtmpb.RuntimeInfo"> & {
  /**
   * @generated from field: optional string sdkVersion = 1;
   */
  sdkVersion?: string;

  /**
   * @generated from field: optional mtmai.mtmpb.SDKS language = 2;
   */
  language?: SDKS;

  /**
   * @generated from field: optional string languageVersion = 3;
   */
  languageVersion?: string;

  /**
   * @generated from field: optional string os = 4;
   */
  os?: string;

  /**
   * @generated from field: optional string extra = 5;
   */
  extra?: string;
};

/**
 * Describes the message mtmai.mtmpb.RuntimeInfo.
 * Use `create(RuntimeInfoSchema)` to create a new message.
 */
export const RuntimeInfoSchema: GenMessage<RuntimeInfo> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 1);

/**
 * @generated from message mtmai.mtmpb.WorkerRegisterRequest
 */
export type WorkerRegisterRequest = Message<"mtmai.mtmpb.WorkerRegisterRequest"> & {
  /**
   * the name of the worker
   *
   * @generated from field: string workerName = 1;
   */
  workerName: string;

  /**
   * a list of actions that this worker can run
   *
   * @generated from field: repeated string actions = 2;
   */
  actions: string[];

  /**
   * (optional) the services for this worker
   *
   * @generated from field: repeated string services = 3;
   */
  services: string[];

  /**
   * (optional) the max number of runs this worker can handle
   *
   * @generated from field: optional int32 maxRuns = 4;
   */
  maxRuns?: number;

  /**
   * (optional) worker labels (i.e. state or other metadata)
   *
   * @generated from field: map<string, mtmai.mtmpb.WorkerLabels> labels = 5;
   */
  labels: { [key: string]: WorkerLabels };

  /**
   * (optional) webhookId is the id of the webhook that the worker is associated
   * with (if any)
   *
   * @generated from field: optional string webhookId = 6;
   */
  webhookId?: string;

  /**
   * (optional) information regarding the runtime environment of the worker
   *
   * @generated from field: optional mtmai.mtmpb.RuntimeInfo runtimeInfo = 7;
   */
  runtimeInfo?: RuntimeInfo;
};

/**
 * Describes the message mtmai.mtmpb.WorkerRegisterRequest.
 * Use `create(WorkerRegisterRequestSchema)` to create a new message.
 */
export const WorkerRegisterRequestSchema: GenMessage<WorkerRegisterRequest> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 2);

/**
 * @generated from message mtmai.mtmpb.WorkerRegisterResponse
 */
export type WorkerRegisterResponse = Message<"mtmai.mtmpb.WorkerRegisterResponse"> & {
  /**
   * the tenant id
   *
   * @generated from field: string tenantId = 1;
   */
  tenantId: string;

  /**
   * the id of the worker
   *
   * @generated from field: string workerId = 2;
   */
  workerId: string;

  /**
   * the name of the worker
   *
   * @generated from field: string workerName = 3;
   */
  workerName: string;
};

/**
 * Describes the message mtmai.mtmpb.WorkerRegisterResponse.
 * Use `create(WorkerRegisterResponseSchema)` to create a new message.
 */
export const WorkerRegisterResponseSchema: GenMessage<WorkerRegisterResponse> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 3);

/**
 * @generated from message mtmai.mtmpb.UpsertWorkerLabelsRequest
 */
export type UpsertWorkerLabelsRequest = Message<"mtmai.mtmpb.UpsertWorkerLabelsRequest"> & {
  /**
   * the name of the worker
   *
   * @generated from field: string workerId = 1;
   */
  workerId: string;

  /**
   * (optional) the worker labels
   *
   * @generated from field: map<string, mtmai.mtmpb.WorkerLabels> labels = 2;
   */
  labels: { [key: string]: WorkerLabels };
};

/**
 * Describes the message mtmai.mtmpb.UpsertWorkerLabelsRequest.
 * Use `create(UpsertWorkerLabelsRequestSchema)` to create a new message.
 */
export const UpsertWorkerLabelsRequestSchema: GenMessage<UpsertWorkerLabelsRequest> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 4);

/**
 * @generated from message mtmai.mtmpb.UpsertWorkerLabelsResponse
 */
export type UpsertWorkerLabelsResponse = Message<"mtmai.mtmpb.UpsertWorkerLabelsResponse"> & {
  /**
   * the tenant id
   *
   * @generated from field: string tenantId = 1;
   */
  tenantId: string;

  /**
   * the id of the worker
   *
   * @generated from field: string workerId = 2;
   */
  workerId: string;
};

/**
 * Describes the message mtmai.mtmpb.UpsertWorkerLabelsResponse.
 * Use `create(UpsertWorkerLabelsResponseSchema)` to create a new message.
 */
export const UpsertWorkerLabelsResponseSchema: GenMessage<UpsertWorkerLabelsResponse> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 5);

/**
 * @generated from message mtmai.mtmpb.AssignedAction
 */
export type AssignedAction = Message<"mtmai.mtmpb.AssignedAction"> & {
  /**
   * the tenant id
   *
   * @generated from field: string tenantId = 1;
   */
  tenantId: string;

  /**
   * the workflow run id (optional)
   *
   * @generated from field: string workflowRunId = 2;
   */
  workflowRunId: string;

  /**
   * the get group key run id (optional)
   *
   * @generated from field: string getGroupKeyRunId = 3;
   */
  getGroupKeyRunId: string;

  /**
   * the job id
   *
   * @generated from field: string jobId = 4;
   */
  jobId: string;

  /**
   * the job name
   *
   * @generated from field: string jobName = 5;
   */
  jobName: string;

  /**
   * the job run id
   *
   * @generated from field: string jobRunId = 6;
   */
  jobRunId: string;

  /**
   * the step id
   *
   * @generated from field: string stepId = 7;
   */
  stepId: string;

  /**
   * the step run id
   *
   * @generated from field: string stepRunId = 8;
   */
  stepRunId: string;

  /**
   * the action id
   *
   * @generated from field: string actionId = 9;
   */
  actionId: string;

  /**
   * the action type
   *
   * @generated from field: mtmai.mtmpb.ActionType actionType = 10;
   */
  actionType: ActionType;

  /**
   * the action payload
   *
   * @generated from field: string actionPayload = 11;
   */
  actionPayload: string;

  /**
   * the step name
   *
   * @generated from field: string stepName = 12;
   */
  stepName: string;

  /**
   * the count number of the retry attempt
   *
   * @generated from field: int32 retryCount = 13;
   */
  retryCount: number;

  /**
   * (optional) additional metadata set on the workflow
   *
   * @generated from field: optional string additional_metadata = 14;
   */
  additionalMetadata?: string;

  /**
   * (optional) the child workflow index (if this is a child workflow)
   *
   * @generated from field: optional int32 child_workflow_index = 15;
   */
  childWorkflowIndex?: number;

  /**
   * (optional) the child workflow key (if this is a child workflow)
   *
   * @generated from field: optional string child_workflow_key = 16;
   */
  childWorkflowKey?: string;

  /**
   * (optional) the parent workflow run id (if this is a child workflow)
   *
   * @generated from field: optional string parent_workflow_run_id = 17;
   */
  parentWorkflowRunId?: string;
};

/**
 * Describes the message mtmai.mtmpb.AssignedAction.
 * Use `create(AssignedActionSchema)` to create a new message.
 */
export const AssignedActionSchema: GenMessage<AssignedAction> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 6);

/**
 * @generated from message mtmai.mtmpb.WorkerListenRequest
 */
export type WorkerListenRequest = Message<"mtmai.mtmpb.WorkerListenRequest"> & {
  /**
   * the id of the worker
   *
   * @generated from field: string workerId = 1;
   */
  workerId: string;
};

/**
 * Describes the message mtmai.mtmpb.WorkerListenRequest.
 * Use `create(WorkerListenRequestSchema)` to create a new message.
 */
export const WorkerListenRequestSchema: GenMessage<WorkerListenRequest> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 7);

/**
 * @generated from message mtmai.mtmpb.WorkerUnsubscribeRequest
 */
export type WorkerUnsubscribeRequest = Message<"mtmai.mtmpb.WorkerUnsubscribeRequest"> & {
  /**
   * the id of the worker
   *
   * @generated from field: string workerId = 1;
   */
  workerId: string;
};

/**
 * Describes the message mtmai.mtmpb.WorkerUnsubscribeRequest.
 * Use `create(WorkerUnsubscribeRequestSchema)` to create a new message.
 */
export const WorkerUnsubscribeRequestSchema: GenMessage<WorkerUnsubscribeRequest> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 8);

/**
 * @generated from message mtmai.mtmpb.WorkerUnsubscribeResponse
 */
export type WorkerUnsubscribeResponse = Message<"mtmai.mtmpb.WorkerUnsubscribeResponse"> & {
  /**
   * the tenant id to unsubscribe from
   *
   * @generated from field: string tenantId = 1;
   */
  tenantId: string;

  /**
   * the id of the worker
   *
   * @generated from field: string workerId = 2;
   */
  workerId: string;
};

/**
 * Describes the message mtmai.mtmpb.WorkerUnsubscribeResponse.
 * Use `create(WorkerUnsubscribeResponseSchema)` to create a new message.
 */
export const WorkerUnsubscribeResponseSchema: GenMessage<WorkerUnsubscribeResponse> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 9);

/**
 * @generated from message mtmai.mtmpb.GroupKeyActionEvent
 */
export type GroupKeyActionEvent = Message<"mtmai.mtmpb.GroupKeyActionEvent"> & {
  /**
   * the id of the worker
   *
   * @generated from field: string workerId = 1;
   */
  workerId: string;

  /**
   * the id of the job
   *
   * @generated from field: string workflowRunId = 2;
   */
  workflowRunId: string;

  /**
   * @generated from field: string getGroupKeyRunId = 3;
   */
  getGroupKeyRunId: string;

  /**
   * the action id
   *
   * @generated from field: string actionId = 4;
   */
  actionId: string;

  /**
   * @generated from field: google.protobuf.Timestamp eventTimestamp = 5;
   */
  eventTimestamp?: Timestamp;

  /**
   * the step event type
   *
   * @generated from field: mtmai.mtmpb.GroupKeyActionEventType eventType = 6;
   */
  eventType: GroupKeyActionEventType;

  /**
   * the event payload
   *
   * @generated from field: string eventPayload = 7;
   */
  eventPayload: string;
};

/**
 * Describes the message mtmai.mtmpb.GroupKeyActionEvent.
 * Use `create(GroupKeyActionEventSchema)` to create a new message.
 */
export const GroupKeyActionEventSchema: GenMessage<GroupKeyActionEvent> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 10);

/**
 * @generated from message mtmai.mtmpb.StepActionEvent
 */
export type StepActionEvent = Message<"mtmai.mtmpb.StepActionEvent"> & {
  /**
   * the id of the worker
   *
   * @generated from field: string workerId = 1;
   */
  workerId: string;

  /**
   * the id of the job
   *
   * @generated from field: string jobId = 2;
   */
  jobId: string;

  /**
   * the job run id
   *
   * @generated from field: string jobRunId = 3;
   */
  jobRunId: string;

  /**
   * the id of the step
   *
   * @generated from field: string stepId = 4;
   */
  stepId: string;

  /**
   * the step run id
   *
   * @generated from field: string stepRunId = 5;
   */
  stepRunId: string;

  /**
   * the action id
   *
   * @generated from field: string actionId = 6;
   */
  actionId: string;

  /**
   * @generated from field: google.protobuf.Timestamp eventTimestamp = 7;
   */
  eventTimestamp?: Timestamp;

  /**
   * the step event type
   *
   * @generated from field: mtmai.mtmpb.StepActionEventType eventType = 8;
   */
  eventType: StepActionEventType;

  /**
   * the event payload
   *
   * @generated from field: string eventPayload = 9;
   */
  eventPayload: string;

  /**
   * the retry count
   *
   * @generated from field: optional int32 retryCount = 10;
   */
  retryCount?: number;
};

/**
 * Describes the message mtmai.mtmpb.StepActionEvent.
 * Use `create(StepActionEventSchema)` to create a new message.
 */
export const StepActionEventSchema: GenMessage<StepActionEvent> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 11);

/**
 * @generated from message mtmai.mtmpb.ActionEventResponse
 */
export type ActionEventResponse = Message<"mtmai.mtmpb.ActionEventResponse"> & {
  /**
   * the tenant id
   *
   * @generated from field: string tenantId = 1;
   */
  tenantId: string;

  /**
   * the id of the worker
   *
   * @generated from field: string workerId = 2;
   */
  workerId: string;
};

/**
 * Describes the message mtmai.mtmpb.ActionEventResponse.
 * Use `create(ActionEventResponseSchema)` to create a new message.
 */
export const ActionEventResponseSchema: GenMessage<ActionEventResponse> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 12);

/**
 * @generated from message mtmai.mtmpb.SubscribeToWorkflowEventsRequest
 */
export type SubscribeToWorkflowEventsRequest = Message<"mtmai.mtmpb.SubscribeToWorkflowEventsRequest"> & {
  /**
   * the id of the workflow run
   *
   * @generated from field: optional string workflowRunId = 1;
   */
  workflowRunId?: string;

  /**
   * the key of the additional meta field to subscribe to
   *
   * @generated from field: optional string additionalMetaKey = 2;
   */
  additionalMetaKey?: string;

  /**
   * the value of the additional meta field to subscribe to
   *
   * @generated from field: optional string additionalMetaValue = 3;
   */
  additionalMetaValue?: string;
};

/**
 * Describes the message mtmai.mtmpb.SubscribeToWorkflowEventsRequest.
 * Use `create(SubscribeToWorkflowEventsRequestSchema)` to create a new message.
 */
export const SubscribeToWorkflowEventsRequestSchema: GenMessage<SubscribeToWorkflowEventsRequest> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 13);

/**
 * @generated from message mtmai.mtmpb.SubscribeToWorkflowRunsRequest
 */
export type SubscribeToWorkflowRunsRequest = Message<"mtmai.mtmpb.SubscribeToWorkflowRunsRequest"> & {
  /**
   * the id of the workflow run
   *
   * @generated from field: string workflowRunId = 1;
   */
  workflowRunId: string;
};

/**
 * Describes the message mtmai.mtmpb.SubscribeToWorkflowRunsRequest.
 * Use `create(SubscribeToWorkflowRunsRequestSchema)` to create a new message.
 */
export const SubscribeToWorkflowRunsRequestSchema: GenMessage<SubscribeToWorkflowRunsRequest> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 14);

/**
 * @generated from message mtmai.mtmpb.WorkflowEvent
 */
export type WorkflowEvent = Message<"mtmai.mtmpb.WorkflowEvent"> & {
  /**
   * the id of the workflow run
   *
   * @generated from field: string workflowRunId = 1;
   */
  workflowRunId: string;

  /**
   * @generated from field: mtmai.mtmpb.ResourceType resourceType = 2;
   */
  resourceType: ResourceType;

  /**
   * @generated from field: mtmai.mtmpb.ResourceEventType eventType = 3;
   */
  eventType: ResourceEventType;

  /**
   * @generated from field: string resourceId = 4;
   */
  resourceId: string;

  /**
   * @generated from field: google.protobuf.Timestamp eventTimestamp = 5;
   */
  eventTimestamp?: Timestamp;

  /**
   * the event payload
   *
   * @generated from field: string eventPayload = 6;
   */
  eventPayload: string;

  /**
   * whether this is the last event for the workflow run - server
   * will hang up the connection but clients might want to case
   *
   * @generated from field: bool hangup = 7;
   */
  hangup: boolean;

  /**
   * (optional) the max number of retries this step can handle
   *
   * @generated from field: optional int32 stepRetries = 8;
   */
  stepRetries?: number;

  /**
   * (optional) the retry count of this step
   *
   * @generated from field: optional int32 retryCount = 9;
   */
  retryCount?: number;
};

/**
 * Describes the message mtmai.mtmpb.WorkflowEvent.
 * Use `create(WorkflowEventSchema)` to create a new message.
 */
export const WorkflowEventSchema: GenMessage<WorkflowEvent> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 15);

/**
 * @generated from message mtmai.mtmpb.WorkflowRunEvent
 */
export type WorkflowRunEvent = Message<"mtmai.mtmpb.WorkflowRunEvent"> & {
  /**
   * the id of the workflow run
   *
   * @generated from field: string workflowRunId = 1;
   */
  workflowRunId: string;

  /**
   * @generated from field: mtmai.mtmpb.WorkflowRunEventType eventType = 2;
   */
  eventType: WorkflowRunEventType;

  /**
   * @generated from field: google.protobuf.Timestamp eventTimestamp = 3;
   */
  eventTimestamp?: Timestamp;

  /**
   * @generated from field: repeated mtmai.mtmpb.StepRunResult results = 4;
   */
  results: StepRunResult[];
};

/**
 * Describes the message mtmai.mtmpb.WorkflowRunEvent.
 * Use `create(WorkflowRunEventSchema)` to create a new message.
 */
export const WorkflowRunEventSchema: GenMessage<WorkflowRunEvent> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 16);

/**
 * @generated from message mtmai.mtmpb.StepRunResult
 */
export type StepRunResult = Message<"mtmai.mtmpb.StepRunResult"> & {
  /**
   * @generated from field: string stepRunId = 1;
   */
  stepRunId: string;

  /**
   * @generated from field: string stepReadableId = 2;
   */
  stepReadableId: string;

  /**
   * @generated from field: string jobRunId = 3;
   */
  jobRunId: string;

  /**
   * @generated from field: optional string error = 4;
   */
  error?: string;

  /**
   * @generated from field: optional string output = 5;
   */
  output?: string;
};

/**
 * Describes the message mtmai.mtmpb.StepRunResult.
 * Use `create(StepRunResultSchema)` to create a new message.
 */
export const StepRunResultSchema: GenMessage<StepRunResult> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 17);

/**
 * @generated from message mtmai.mtmpb.OverridesData
 */
export type OverridesData = Message<"mtmai.mtmpb.OverridesData"> & {
  /**
   * the step run id
   *
   * @generated from field: string stepRunId = 1;
   */
  stepRunId: string;

  /**
   * the path of the data to set
   *
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * the value to set
   *
   * @generated from field: string value = 3;
   */
  value: string;

  /**
   * the filename of the caller
   *
   * @generated from field: string callerFilename = 4;
   */
  callerFilename: string;
};

/**
 * Describes the message mtmai.mtmpb.OverridesData.
 * Use `create(OverridesDataSchema)` to create a new message.
 */
export const OverridesDataSchema: GenMessage<OverridesData> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 18);

/**
 * @generated from message mtmai.mtmpb.OverridesDataResponse
 */
export type OverridesDataResponse = Message<"mtmai.mtmpb.OverridesDataResponse"> & {
};

/**
 * Describes the message mtmai.mtmpb.OverridesDataResponse.
 * Use `create(OverridesDataResponseSchema)` to create a new message.
 */
export const OverridesDataResponseSchema: GenMessage<OverridesDataResponse> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 19);

/**
 * @generated from message mtmai.mtmpb.HeartbeatRequest
 */
export type HeartbeatRequest = Message<"mtmai.mtmpb.HeartbeatRequest"> & {
  /**
   * the id of the worker
   *
   * @generated from field: string workerId = 1;
   */
  workerId: string;

  /**
   * heartbeatAt is the time the worker sent the heartbeat
   *
   * @generated from field: google.protobuf.Timestamp heartbeatAt = 2;
   */
  heartbeatAt?: Timestamp;
};

/**
 * Describes the message mtmai.mtmpb.HeartbeatRequest.
 * Use `create(HeartbeatRequestSchema)` to create a new message.
 */
export const HeartbeatRequestSchema: GenMessage<HeartbeatRequest> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 20);

/**
 * @generated from message mtmai.mtmpb.HeartbeatResponse
 */
export type HeartbeatResponse = Message<"mtmai.mtmpb.HeartbeatResponse"> & {
};

/**
 * Describes the message mtmai.mtmpb.HeartbeatResponse.
 * Use `create(HeartbeatResponseSchema)` to create a new message.
 */
export const HeartbeatResponseSchema: GenMessage<HeartbeatResponse> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 21);

/**
 * @generated from message mtmai.mtmpb.RefreshTimeoutRequest
 */
export type RefreshTimeoutRequest = Message<"mtmai.mtmpb.RefreshTimeoutRequest"> & {
  /**
   * the id of the step run to release
   *
   * @generated from field: string stepRunId = 1;
   */
  stepRunId: string;

  /**
   * @generated from field: string incrementTimeoutBy = 2;
   */
  incrementTimeoutBy: string;
};

/**
 * Describes the message mtmai.mtmpb.RefreshTimeoutRequest.
 * Use `create(RefreshTimeoutRequestSchema)` to create a new message.
 */
export const RefreshTimeoutRequestSchema: GenMessage<RefreshTimeoutRequest> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 22);

/**
 * @generated from message mtmai.mtmpb.RefreshTimeoutResponse
 */
export type RefreshTimeoutResponse = Message<"mtmai.mtmpb.RefreshTimeoutResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timeoutAt = 1;
   */
  timeoutAt?: Timestamp;
};

/**
 * Describes the message mtmai.mtmpb.RefreshTimeoutResponse.
 * Use `create(RefreshTimeoutResponseSchema)` to create a new message.
 */
export const RefreshTimeoutResponseSchema: GenMessage<RefreshTimeoutResponse> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 23);

/**
 * @generated from message mtmai.mtmpb.ReleaseSlotRequest
 */
export type ReleaseSlotRequest = Message<"mtmai.mtmpb.ReleaseSlotRequest"> & {
  /**
   * the id of the step run to release
   *
   * @generated from field: string stepRunId = 1;
   */
  stepRunId: string;
};

/**
 * Describes the message mtmai.mtmpb.ReleaseSlotRequest.
 * Use `create(ReleaseSlotRequestSchema)` to create a new message.
 */
export const ReleaseSlotRequestSchema: GenMessage<ReleaseSlotRequest> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 24);

/**
 * @generated from message mtmai.mtmpb.ReleaseSlotResponse
 */
export type ReleaseSlotResponse = Message<"mtmai.mtmpb.ReleaseSlotResponse"> & {
};

/**
 * Describes the message mtmai.mtmpb.ReleaseSlotResponse.
 * Use `create(ReleaseSlotResponseSchema)` to create a new message.
 */
export const ReleaseSlotResponseSchema: GenMessage<ReleaseSlotResponse> = /*@__PURE__*/
  messageDesc(file_mtmai_mtmpb_dispatcher, 25);

/**
 * @generated from enum mtmai.mtmpb.SDKS
 */
export enum SDKS {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: GO = 1;
   */
  GO = 1,

  /**
   * @generated from enum value: PYTHON = 2;
   */
  PYTHON = 2,

  /**
   * @generated from enum value: TYPESCRIPT = 3;
   */
  TYPESCRIPT = 3,
}

/**
 * Describes the enum mtmai.mtmpb.SDKS.
 */
export const SDKSSchema: GenEnum<SDKS> = /*@__PURE__*/
  enumDesc(file_mtmai_mtmpb_dispatcher, 0);

/**
 * @generated from enum mtmai.mtmpb.ActionType
 */
export enum ActionType {
  /**
   * @generated from enum value: START_STEP_RUN = 0;
   */
  START_STEP_RUN = 0,

  /**
   * @generated from enum value: CANCEL_STEP_RUN = 1;
   */
  CANCEL_STEP_RUN = 1,

  /**
   * @generated from enum value: START_GET_GROUP_KEY = 2;
   */
  START_GET_GROUP_KEY = 2,
}

/**
 * Describes the enum mtmai.mtmpb.ActionType.
 */
export const ActionTypeSchema: GenEnum<ActionType> = /*@__PURE__*/
  enumDesc(file_mtmai_mtmpb_dispatcher, 1);

/**
 * @generated from enum mtmai.mtmpb.GroupKeyActionEventType
 */
export enum GroupKeyActionEventType {
  /**
   * @generated from enum value: GROUP_KEY_EVENT_TYPE_UNKNOWN = 0;
   */
  GROUP_KEY_EVENT_TYPE_UNKNOWN = 0,

  /**
   * @generated from enum value: GROUP_KEY_EVENT_TYPE_STARTED = 1;
   */
  GROUP_KEY_EVENT_TYPE_STARTED = 1,

  /**
   * @generated from enum value: GROUP_KEY_EVENT_TYPE_COMPLETED = 2;
   */
  GROUP_KEY_EVENT_TYPE_COMPLETED = 2,

  /**
   * @generated from enum value: GROUP_KEY_EVENT_TYPE_FAILED = 3;
   */
  GROUP_KEY_EVENT_TYPE_FAILED = 3,
}

/**
 * Describes the enum mtmai.mtmpb.GroupKeyActionEventType.
 */
export const GroupKeyActionEventTypeSchema: GenEnum<GroupKeyActionEventType> = /*@__PURE__*/
  enumDesc(file_mtmai_mtmpb_dispatcher, 2);

/**
 * @generated from enum mtmai.mtmpb.StepActionEventType
 */
export enum StepActionEventType {
  /**
   * @generated from enum value: STEP_EVENT_TYPE_UNKNOWN = 0;
   */
  STEP_EVENT_TYPE_UNKNOWN = 0,

  /**
   * @generated from enum value: STEP_EVENT_TYPE_STARTED = 1;
   */
  STEP_EVENT_TYPE_STARTED = 1,

  /**
   * @generated from enum value: STEP_EVENT_TYPE_COMPLETED = 2;
   */
  STEP_EVENT_TYPE_COMPLETED = 2,

  /**
   * @generated from enum value: STEP_EVENT_TYPE_FAILED = 3;
   */
  STEP_EVENT_TYPE_FAILED = 3,

  /**
   * @generated from enum value: STEP_EVENT_TYPE_ACKNOWLEDGED = 4;
   */
  STEP_EVENT_TYPE_ACKNOWLEDGED = 4,
}

/**
 * Describes the enum mtmai.mtmpb.StepActionEventType.
 */
export const StepActionEventTypeSchema: GenEnum<StepActionEventType> = /*@__PURE__*/
  enumDesc(file_mtmai_mtmpb_dispatcher, 3);

/**
 * @generated from enum mtmai.mtmpb.ResourceType
 */
export enum ResourceType {
  /**
   * @generated from enum value: RESOURCE_TYPE_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: RESOURCE_TYPE_STEP_RUN = 1;
   */
  STEP_RUN = 1,

  /**
   * @generated from enum value: RESOURCE_TYPE_WORKFLOW_RUN = 2;
   */
  WORKFLOW_RUN = 2,
}

/**
 * Describes the enum mtmai.mtmpb.ResourceType.
 */
export const ResourceTypeSchema: GenEnum<ResourceType> = /*@__PURE__*/
  enumDesc(file_mtmai_mtmpb_dispatcher, 4);

/**
 * @generated from enum mtmai.mtmpb.ResourceEventType
 */
export enum ResourceEventType {
  /**
   * @generated from enum value: RESOURCE_EVENT_TYPE_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: RESOURCE_EVENT_TYPE_STARTED = 1;
   */
  STARTED = 1,

  /**
   * @generated from enum value: RESOURCE_EVENT_TYPE_COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: RESOURCE_EVENT_TYPE_FAILED = 3;
   */
  FAILED = 3,

  /**
   * @generated from enum value: RESOURCE_EVENT_TYPE_CANCELLED = 4;
   */
  CANCELLED = 4,

  /**
   * @generated from enum value: RESOURCE_EVENT_TYPE_TIMED_OUT = 5;
   */
  TIMED_OUT = 5,

  /**
   * @generated from enum value: RESOURCE_EVENT_TYPE_STREAM = 6;
   */
  STREAM = 6,
}

/**
 * Describes the enum mtmai.mtmpb.ResourceEventType.
 */
export const ResourceEventTypeSchema: GenEnum<ResourceEventType> = /*@__PURE__*/
  enumDesc(file_mtmai_mtmpb_dispatcher, 5);

/**
 * @generated from enum mtmai.mtmpb.WorkflowRunEventType
 */
export enum WorkflowRunEventType {
  /**
   * @generated from enum value: WORKFLOW_RUN_EVENT_TYPE_FINISHED = 0;
   */
  FINISHED = 0,
}

/**
 * Describes the enum mtmai.mtmpb.WorkflowRunEventType.
 */
export const WorkflowRunEventTypeSchema: GenEnum<WorkflowRunEventType> = /*@__PURE__*/
  enumDesc(file_mtmai_mtmpb_dispatcher, 6);

/**
 * @generated from service mtmai.mtmpb.Dispatcher
 */
export const Dispatcher: GenService<{
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.Register
   */
  register: {
    methodKind: "unary";
    input: typeof WorkerRegisterRequestSchema;
    output: typeof WorkerRegisterResponseSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.Listen
   */
  listen: {
    methodKind: "server_streaming";
    input: typeof WorkerListenRequestSchema;
    output: typeof AssignedActionSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.ListenV2
   */
  listenV2: {
    methodKind: "server_streaming";
    input: typeof WorkerListenRequestSchema;
    output: typeof AssignedActionSchema;
  },
  /**
   * Heartbeat is a method for workers to send heartbeats to the dispatcher
   *
   * @generated from rpc mtmai.mtmpb.Dispatcher.Heartbeat
   */
  heartbeat: {
    methodKind: "unary";
    input: typeof HeartbeatRequestSchema;
    output: typeof HeartbeatResponseSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.SubscribeToWorkflowEvents
   */
  subscribeToWorkflowEvents: {
    methodKind: "server_streaming";
    input: typeof SubscribeToWorkflowEventsRequestSchema;
    output: typeof WorkflowEventSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.SubscribeToWorkflowRuns
   */
  subscribeToWorkflowRuns: {
    methodKind: "bidi_streaming";
    input: typeof SubscribeToWorkflowRunsRequestSchema;
    output: typeof WorkflowRunEventSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.SendStepActionEvent
   */
  sendStepActionEvent: {
    methodKind: "unary";
    input: typeof StepActionEventSchema;
    output: typeof ActionEventResponseSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.SendGroupKeyActionEvent
   */
  sendGroupKeyActionEvent: {
    methodKind: "unary";
    input: typeof GroupKeyActionEventSchema;
    output: typeof ActionEventResponseSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.PutOverridesData
   */
  putOverridesData: {
    methodKind: "unary";
    input: typeof OverridesDataSchema;
    output: typeof OverridesDataResponseSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.Unsubscribe
   */
  unsubscribe: {
    methodKind: "unary";
    input: typeof WorkerUnsubscribeRequestSchema;
    output: typeof WorkerUnsubscribeResponseSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.RefreshTimeout
   */
  refreshTimeout: {
    methodKind: "unary";
    input: typeof RefreshTimeoutRequestSchema;
    output: typeof RefreshTimeoutResponseSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.ReleaseSlot
   */
  releaseSlot: {
    methodKind: "unary";
    input: typeof ReleaseSlotRequestSchema;
    output: typeof ReleaseSlotResponseSchema;
  },
  /**
   * @generated from rpc mtmai.mtmpb.Dispatcher.UpsertWorkerLabels
   */
  upsertWorkerLabels: {
    methodKind: "unary";
    input: typeof UpsertWorkerLabelsRequestSchema;
    output: typeof UpsertWorkerLabelsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_mtmai_mtmpb_dispatcher, 0);

