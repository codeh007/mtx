{
  "name": "mtmaiapi",
  "version": "0.6.2",
  "files": ["dist", "src"],
  "license": "MIT",
  "packageManager": "bun@1.1.20",
  "private": false,
  "publishConfig": {
    "access": "public"
  },
  "type": "module",
  "main": "./src/index.ts",
  "types": "./src/index.ts",
  "typesVersions": {
    "*": {
      "*": [
        "./src/*.ts",
        "./src/*.tsx",
        "./src/*/index.ts",
        "./src/*/index.tsx",
        "./dist/*",
        "./dist/*/index"
      ]
    }
  },
  "exports": {
    ".": {
      "types": [
        "./src/*",
        "./src/index.ts",
        "./dist/index.js",
        "./dist/*",
        "./dist/*/index"
      ],
      "import": [
        "./src/index.ts",
        "./dist/index.js",
        "./dist/*",
        "./dist/*/index"
      ]
    },
    "./*": {
      "types": [
        "./src/*",
        "./src/*.ts",
        "./src/*/index.ts",
        "./src/*.tsx",
        "./src/*/index.tsx",
        "./dist/*",
        "./dist/*/index",
        "./dist/*/index.js",
        "./dist/*/index.ts"
      ],
      "import": [
        "./src/*",
        "./src/*.ts",
        "./src/*.tsx",
        "./src/*/index.ts",
        "./src/*/index.tsx",
        "./dist/*/index.js",
        "./dist/*.js"
      ],
      "require": [
        "./dist/*.js",
        "./dist/*/index.js",
        "./src/*.ts",
        "./src/*/index.ts",
        "./src/*.tsx",
        "./src/*/index.tsx"
      ]
    }
  },
  "scripts": {
    "build": "rimraf ./dist/ && tsc -p tsconfig.json --outDir dist --incremental false --noEmit false --removeComments true --skipLibCheck true",
    "lint": "biome check --apply-unsafe --no-errors-on-unmatched --files-ignore-unknown=true ./",
    "gen--": "openapi-ts --input http://localhost:8444/api/v1/openapi.json --output ./src --client fetch && biome format --write ./src",
    "gen": "openapi-ts && biome format --write ./src",
    "gen2": "npx openapi-typescript ../../../gomtm/api-contracts/openapi/openapi.yaml -o src/query_client/generated.ts",
    "gen3": "openapi-ts --input ../../../api-contracts/openapi/openapi.yaml --output ./src/gen3 --client fetch && biome format --write ./src/gen3",
    "build-old": "rimraf ./dist/ && bunx tsc -p tsconfig.json --outDir dist --incremental false --noEmit false --removeComments true --skipLibCheck true",
    "prepare--": "npm run build",
    "tsc:build": "tsc && resolve-tspaths",
    "test:unit": "jest --testMatch='**/*.test.ts'",
    "test:e2e": "jest --testMatch='**/*.e2e.ts'",
    "test:unit:watch": "jest --testMatch='**/*.test.ts' --watch",
    "generate": "pnpm run '/generate-.*/'",
    "generate-api": "npx --yes swagger-cli bundle ../../../gomtm/api-contracts/openapi/openapi.yaml --outfile openapi.yaml --type yaml && npx swagger-typescript-api -p openapi.yaml -o src/clients/rest/generated -n hatchet.ts --modular --axios",
    "generate-protoc": "./generate-protoc.sh",
    "lint:check": "npm run eslint:check && npm run prettier:check",
    "lint:fix": "npm run eslint:fix && npm run prettier:fix",
    "eslint:check": "eslint \"{src,tests}/**/*.{ts,tsx,js}\"",
    "eslint:fix": "eslint \"{src,tests}/**/*.{ts,tsx,js}\" --fix",
    "prettier:check": "prettier \"src/**/*.{ts,tsx}\" --list-different",
    "prettier:fix": "prettier \"src/**/*.{ts,tsx}\" --write",
    "exec": "npx dotenv -- ts-node -r tsconfig-paths/register --project tsconfig.json",
    "example:event": "npm run exec -- ./src/examples/example-event.ts",
    "example:event-listen": "npm run exec -- ./src/examples/example-event-with-results.ts",
    "worker:namespaced": "npm run exec -- ./src/examples/namespaced-worker.ts",
    "worker:rate": "npm run exec -- ./src/examples/rate-limit/worker.ts",
    "example:rate": "npm run exec -- ./src/examples/rate-limit/events.ts",
    "worker:fanout": "npm run exec -- ./src/examples/fanout-worker.ts",
    "worker:simple": "npm run exec -- ./src/examples/simple-worker.ts",
    "worker:affinity": "npm run exec -- ./src/examples/affinity-workers.ts",
    "worker:sticky": "npm run exec -- ./src/examples/sticky-worker.ts",
    "worker:on-failure": "npm run exec -- ./src/examples/on-failure.ts",
    "manual:trigger": "npm run exec -- ./src/examples/manual-trigger.ts",
    "manual:meta": "npm run exec -- ./src/examples/stream-by-additional-meta.ts",
    "bulk:trigger": "npm run exec -- ./src/examples/bulk-trigger.ts",
    "bulk:fanout:worker": "npm run exec -- ./src/examples/bulk-fanout-worker.ts",
    "bulk:fanout:trigger": "npm run exec -- ./src/examples/bulk-fanout-trigger.ts",
    "worker:dag": "npm run exec -- ./src/examples/dag-worker.ts",
    "worker:concurrency": "npm run exec -- ./src/examples/concurrency/cancel-in-progress/concurrency-worker.ts",
    "event:concurrency": "npm run exec -- ./src/examples/concurrency/cancel-in-progress/concurrency-event.ts",
    "worker:concurrency:rr": "npm run exec -- ./src/examples/concurrency/group-round-robin/concurrency-worker-expression.ts",
    "event:concurrency:rr": "npm run exec -- ./src/examples/concurrency/group-round-robin/concurrency-event.ts",
    "worker:playground": "npm run exec -- ./src/examples/playground.ts",
    "worker:retries": "npm run exec -- ./src/examples/retries-worker.ts",
    "worker:multi-workflow": "npm run exec -- ./src/examples/multi-workflow.ts",
    "worker:logger": "npm run exec -- ./src/examples/logger.ts",
    "prepublish": "cp package.json dist/package.json;",
    "publish:ci": "rm -rf ./dist && npm run tsc:build && npm run prepublish && cd dist && npm publish --access public --no-git-checks",
    "publish:ci:alpha": "rm -rf ./dist && npm run tsc:build && npm run prepublish && cd dist && npm publish --access public --no-git-checks --tag alpha",
    "generate-docs": "typedoc"
  },
  "dependencies": {
    "@lukemorales/query-key-factory": "^1.3.2",
    "@bufbuild/buf": "^1.47.2",
    "@bufbuild/protobuf": "^2.2.2",
    "@bufbuild/protoc-gen-es": "^2.2.2",
    "@connectrpc/connect": "^1.6.1",
    "@connectrpc/connect-web": "^1.6.1",
    "@hey-api/client-fetch": "^0.5.7",
    "@hey-api/openapi-ts": "^0.60.1",
    "@langchain/aws": "^0.1.2",
    "@langchain/groq": "^0.1.2",
    "@tanstack/react-query": "^5.62.14",
    "@tanstack/react-query-devtools": "^5.62.14",
    "@tanstack/react-query-next-experimental": "^5.62.14",
    "@types/qs": "^6.9.11",
    "abort-controller-x": "^0.4.3",
    "axios": "^1.6.7",
    "long": "^5.2.3",
    "nice-grpc": "^2.1.7",
    "nice-grpc-common": "^2.0.2",
    "openapi-fetch": "^0.13.0",
    "openapi-react-query": "^0.2.4",
    "protobufjs": "^7.2.6",
    "qs": "^6.11.2",
    "yaml": "^2.3.4",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@bufbuild/protoplugin": "^2.2.1",
    "@connectrpc/protoc-gen-connect-es": "^1.6.1",
    "@types/node": "^22",
    "@typescript-eslint/eslint-plugin": "^6.4.0",
    "autoprefixer": "^10.4.16",
    "dotenv-cli": "^7.3.0",
    "grpc-tools": "^1.12.4",
    "openapi-typescript": "^7.4.3",
    "prettier": "^3.1.1",
    "resolve-tspaths": "^0.8.17",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "ts-proto": "^2.0.2",
    "typedoc": "^0.26.2",
    "typedoc-plugin-markdown": "^4.0.2",
    "typescript": "^5.7"
  },
  "other": {
    "jest": "^29.7.0",
    "openapi-ts": "^0.3.4"
  },
  "engines": {
    "node": "20.x"
  }
}
