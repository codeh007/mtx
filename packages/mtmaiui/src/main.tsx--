import { RouterProvider } from "@tanstack/react-router";
import ReactDOM from "react-dom/client";
import type { createRouter } from "./router";

const elementId = "mtmaiapp_slug";
const css = "/assets/mamai_assistant.css";

declare module "@tanstack/react-router" {
  interface Register {
    router: ReturnType<typeof createRouter>;
  }
}

// const Loading = () => <div>Loading...</div>;
// const ErrorFallback = ({ error }) => <div>Error: {error.message}</div>;

// const App = () => {
//   const router = createRouter();

// return <ErrorBoundary FallbackComponent={ErrorFallback}>
//     <Suspense fallback={<Loading />}>
//       <LzAssisantFAB />
//       <RouterProvider router={router} />
//     </Suspense>
//   </ErrorBoundary>
// }

export function mountMTMaiApp() {
  let rootElement = document.getElementById(elementId);

  if (!rootElement) {
    rootElement = document.createElement("div");
    rootElement.id = elementId;
    document.body.appendChild(rootElement);

    // 创建 Shadow DOM
    const shadowRoot = rootElement.attachShadow({ mode: "open" });

    // 创建挂载点
    const mountPoint = document.createElement("div");
    shadowRoot.appendChild(mountPoint);

    // 在 Shadow DOM 中添加样式
    const styleLink = document.createElement("link");
    styleLink.rel = "stylesheet";
    styleLink.href = css;
    shadowRoot.appendChild(styleLink);

    // 在 Shadow DOM 中渲染应用
    const root = ReactDOM.createRoot(mountPoint);
    root.render(<App />);
  }
}

// 确保在 DOM 加载完成后执行
if (document.readyState === "loading") {
  document.addEventListener("DOMContentLoaded", mountMTMaiApp);
} else {
  // 自动执行挂载（当直接加载脚本时）
  if (typeof window !== "undefined") {
    mountMTMaiApp();
  }
}

// 可选：暴露全局接口供外部调用
window.MtmaiAssistant = {
  // 例如提供销毁方法
  unmount: () => {
    const container = document.getElementById(elementId);
    if (container) {
      document.body.removeChild(container);
    }
  },
};
