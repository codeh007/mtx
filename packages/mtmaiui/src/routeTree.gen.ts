/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as IndexImport } from './routes/~index'
import { Route as DashSiteSiteIdRouteImport } from './routes/~dash/~site/~$siteId/~route'
import { Route as DashWorkflowsIndexImport } from './routes/~dash/~workflows/~index'
import { Route as DashSiteIndexImport } from './routes/~dash/~site/~index'
import { Route as DashSiteSiteIdHostRouteImport } from './routes/~dash/~site/~$siteId/~host/~route'
import { Route as DashSiteSiteIdEditImport } from './routes/~dash/~site/~$siteId/~edit'
import { Route as DashSiteCreateIndexImport } from './routes/~dash/~site/~create/~index'
import { Route as DashSiteSiteIdIndexImport } from './routes/~dash/~site/~$siteId/~index'
import { Route as DashSiteSiteIdHostIndexImport } from './routes/~dash/~site/~$siteId/~host/~index'

// Create Virtual Routes

const EnvsRouteLazyImport = createFileRoute('/envs')()
const DashWorkflowsRouteLazyImport = createFileRoute('/dash/workflows')()
const DashSiteRouteLazyImport = createFileRoute('/dash/site')()
const EnvsIndexLazyImport = createFileRoute('/envs/')()
const DashWorkflowsWorkflowIdLazyImport = createFileRoute(
  '/dash/workflows/$workflowId',
)()

// Create/Update Routes

const EnvsRouteLazyRoute = EnvsRouteLazyImport.update({
  id: '/envs',
  path: '/envs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/~envs/~route.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashWorkflowsRouteLazyRoute = DashWorkflowsRouteLazyImport.update({
  id: '/dash/workflows',
  path: '/dash/workflows',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~dash/~workflows/~route.lazy').then((d) => d.Route),
)

const DashSiteRouteLazyRoute = DashSiteRouteLazyImport.update({
  id: '/dash/site',
  path: '/dash/site',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/~dash/~site/~route.lazy').then((d) => d.Route),
)

const EnvsIndexLazyRoute = EnvsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EnvsRouteLazyRoute,
} as any).lazy(() => import('./routes/~envs/~index.lazy').then((d) => d.Route))

const DashWorkflowsWorkflowIdLazyRoute =
  DashWorkflowsWorkflowIdLazyImport.update({
    id: '/$workflowId',
    path: '/$workflowId',
    getParentRoute: () => DashWorkflowsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/~dash/~workflows/~$workflowId.lazy').then((d) => d.Route),
  )

const DashSiteSiteIdRouteRoute = DashSiteSiteIdRouteImport.update({
  id: '/$siteId',
  path: '/$siteId',
  getParentRoute: () => DashSiteRouteLazyRoute,
} as any)

const DashWorkflowsIndexRoute = DashWorkflowsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashWorkflowsRouteLazyRoute,
} as any)

const DashSiteIndexRoute = DashSiteIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashSiteRouteLazyRoute,
} as any)

const DashSiteSiteIdHostRouteRoute = DashSiteSiteIdHostRouteImport.update({
  id: '/host',
  path: '/host',
  getParentRoute: () => DashSiteSiteIdRouteRoute,
} as any)

const DashSiteSiteIdEditRoute = DashSiteSiteIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => DashSiteSiteIdRouteRoute,
} as any)

const DashSiteCreateIndexRoute = DashSiteCreateIndexImport.update({
  id: '/create/',
  path: '/create/',
  getParentRoute: () => DashSiteRouteLazyRoute,
} as any)

const DashSiteSiteIdIndexRoute = DashSiteSiteIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashSiteSiteIdRouteRoute,
} as any)

const DashSiteSiteIdHostIndexRoute = DashSiteSiteIdHostIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashSiteSiteIdHostRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/envs': {
      id: '/envs'
      path: '/envs'
      fullPath: '/envs'
      preLoaderRoute: typeof EnvsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/envs/': {
      id: '/envs/'
      path: '/'
      fullPath: '/envs/'
      preLoaderRoute: typeof EnvsIndexLazyImport
      parentRoute: typeof EnvsRouteLazyImport
    }
    '/dash/site': {
      id: '/dash/site'
      path: '/dash/site'
      fullPath: '/dash/site'
      preLoaderRoute: typeof DashSiteRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/dash/workflows': {
      id: '/dash/workflows'
      path: '/dash/workflows'
      fullPath: '/dash/workflows'
      preLoaderRoute: typeof DashWorkflowsRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/dash/site/': {
      id: '/dash/site/'
      path: '/'
      fullPath: '/dash/site/'
      preLoaderRoute: typeof DashSiteIndexImport
      parentRoute: typeof DashSiteRouteLazyImport
    }
    '/dash/workflows/': {
      id: '/dash/workflows/'
      path: '/'
      fullPath: '/dash/workflows/'
      preLoaderRoute: typeof DashWorkflowsIndexImport
      parentRoute: typeof DashWorkflowsRouteLazyImport
    }
    '/dash/site/$siteId': {
      id: '/dash/site/$siteId'
      path: '/$siteId'
      fullPath: '/dash/site/$siteId'
      preLoaderRoute: typeof DashSiteSiteIdRouteImport
      parentRoute: typeof DashSiteRouteLazyImport
    }
    '/dash/workflows/$workflowId': {
      id: '/dash/workflows/$workflowId'
      path: '/$workflowId'
      fullPath: '/dash/workflows/$workflowId'
      preLoaderRoute: typeof DashWorkflowsWorkflowIdLazyImport
      parentRoute: typeof DashWorkflowsRouteLazyImport
    }
    '/dash/site/$siteId/': {
      id: '/dash/site/$siteId/'
      path: '/'
      fullPath: '/dash/site/$siteId/'
      preLoaderRoute: typeof DashSiteSiteIdIndexImport
      parentRoute: typeof DashSiteSiteIdRouteImport
    }
    '/dash/site/create/': {
      id: '/dash/site/create/'
      path: '/create'
      fullPath: '/dash/site/create'
      preLoaderRoute: typeof DashSiteCreateIndexImport
      parentRoute: typeof DashSiteRouteLazyImport
    }
    '/dash/site/$siteId/edit': {
      id: '/dash/site/$siteId/edit'
      path: '/edit'
      fullPath: '/dash/site/$siteId/edit'
      preLoaderRoute: typeof DashSiteSiteIdEditImport
      parentRoute: typeof DashSiteSiteIdRouteImport
    }
    '/dash/site/$siteId/host': {
      id: '/dash/site/$siteId/host'
      path: '/host'
      fullPath: '/dash/site/$siteId/host'
      preLoaderRoute: typeof DashSiteSiteIdHostRouteImport
      parentRoute: typeof DashSiteSiteIdRouteImport
    }
    '/dash/site/$siteId/host/': {
      id: '/dash/site/$siteId/host/'
      path: '/'
      fullPath: '/dash/site/$siteId/host/'
      preLoaderRoute: typeof DashSiteSiteIdHostIndexImport
      parentRoute: typeof DashSiteSiteIdHostRouteImport
    }
  }
}

// Create and export the route tree

interface EnvsRouteLazyRouteChildren {
  EnvsIndexLazyRoute: typeof EnvsIndexLazyRoute
}

const EnvsRouteLazyRouteChildren: EnvsRouteLazyRouteChildren = {
  EnvsIndexLazyRoute: EnvsIndexLazyRoute,
}

const EnvsRouteLazyRouteWithChildren = EnvsRouteLazyRoute._addFileChildren(
  EnvsRouteLazyRouteChildren,
)

interface DashSiteSiteIdHostRouteRouteChildren {
  DashSiteSiteIdHostIndexRoute: typeof DashSiteSiteIdHostIndexRoute
}

const DashSiteSiteIdHostRouteRouteChildren: DashSiteSiteIdHostRouteRouteChildren =
  {
    DashSiteSiteIdHostIndexRoute: DashSiteSiteIdHostIndexRoute,
  }

const DashSiteSiteIdHostRouteRouteWithChildren =
  DashSiteSiteIdHostRouteRoute._addFileChildren(
    DashSiteSiteIdHostRouteRouteChildren,
  )

interface DashSiteSiteIdRouteRouteChildren {
  DashSiteSiteIdIndexRoute: typeof DashSiteSiteIdIndexRoute
  DashSiteSiteIdEditRoute: typeof DashSiteSiteIdEditRoute
  DashSiteSiteIdHostRouteRoute: typeof DashSiteSiteIdHostRouteRouteWithChildren
}

const DashSiteSiteIdRouteRouteChildren: DashSiteSiteIdRouteRouteChildren = {
  DashSiteSiteIdIndexRoute: DashSiteSiteIdIndexRoute,
  DashSiteSiteIdEditRoute: DashSiteSiteIdEditRoute,
  DashSiteSiteIdHostRouteRoute: DashSiteSiteIdHostRouteRouteWithChildren,
}

const DashSiteSiteIdRouteRouteWithChildren =
  DashSiteSiteIdRouteRoute._addFileChildren(DashSiteSiteIdRouteRouteChildren)

interface DashSiteRouteLazyRouteChildren {
  DashSiteIndexRoute: typeof DashSiteIndexRoute
  DashSiteSiteIdRouteRoute: typeof DashSiteSiteIdRouteRouteWithChildren
  DashSiteCreateIndexRoute: typeof DashSiteCreateIndexRoute
}

const DashSiteRouteLazyRouteChildren: DashSiteRouteLazyRouteChildren = {
  DashSiteIndexRoute: DashSiteIndexRoute,
  DashSiteSiteIdRouteRoute: DashSiteSiteIdRouteRouteWithChildren,
  DashSiteCreateIndexRoute: DashSiteCreateIndexRoute,
}

const DashSiteRouteLazyRouteWithChildren =
  DashSiteRouteLazyRoute._addFileChildren(DashSiteRouteLazyRouteChildren)

interface DashWorkflowsRouteLazyRouteChildren {
  DashWorkflowsIndexRoute: typeof DashWorkflowsIndexRoute
  DashWorkflowsWorkflowIdLazyRoute: typeof DashWorkflowsWorkflowIdLazyRoute
}

const DashWorkflowsRouteLazyRouteChildren: DashWorkflowsRouteLazyRouteChildren =
  {
    DashWorkflowsIndexRoute: DashWorkflowsIndexRoute,
    DashWorkflowsWorkflowIdLazyRoute: DashWorkflowsWorkflowIdLazyRoute,
  }

const DashWorkflowsRouteLazyRouteWithChildren =
  DashWorkflowsRouteLazyRoute._addFileChildren(
    DashWorkflowsRouteLazyRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/envs/': typeof EnvsIndexLazyRoute
  '/dash/site': typeof DashSiteRouteLazyRouteWithChildren
  '/dash/workflows': typeof DashWorkflowsRouteLazyRouteWithChildren
  '/dash/site/': typeof DashSiteIndexRoute
  '/dash/workflows/': typeof DashWorkflowsIndexRoute
  '/dash/site/$siteId': typeof DashSiteSiteIdRouteRouteWithChildren
  '/dash/workflows/$workflowId': typeof DashWorkflowsWorkflowIdLazyRoute
  '/dash/site/$siteId/': typeof DashSiteSiteIdIndexRoute
  '/dash/site/create': typeof DashSiteCreateIndexRoute
  '/dash/site/$siteId/edit': typeof DashSiteSiteIdEditRoute
  '/dash/site/$siteId/host': typeof DashSiteSiteIdHostRouteRouteWithChildren
  '/dash/site/$siteId/host/': typeof DashSiteSiteIdHostIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/envs': typeof EnvsIndexLazyRoute
  '/dash/site': typeof DashSiteIndexRoute
  '/dash/workflows': typeof DashWorkflowsIndexRoute
  '/dash/workflows/$workflowId': typeof DashWorkflowsWorkflowIdLazyRoute
  '/dash/site/$siteId': typeof DashSiteSiteIdIndexRoute
  '/dash/site/create': typeof DashSiteCreateIndexRoute
  '/dash/site/$siteId/edit': typeof DashSiteSiteIdEditRoute
  '/dash/site/$siteId/host': typeof DashSiteSiteIdHostIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/envs': typeof EnvsRouteLazyRouteWithChildren
  '/envs/': typeof EnvsIndexLazyRoute
  '/dash/site': typeof DashSiteRouteLazyRouteWithChildren
  '/dash/workflows': typeof DashWorkflowsRouteLazyRouteWithChildren
  '/dash/site/': typeof DashSiteIndexRoute
  '/dash/workflows/': typeof DashWorkflowsIndexRoute
  '/dash/site/$siteId': typeof DashSiteSiteIdRouteRouteWithChildren
  '/dash/workflows/$workflowId': typeof DashWorkflowsWorkflowIdLazyRoute
  '/dash/site/$siteId/': typeof DashSiteSiteIdIndexRoute
  '/dash/site/create/': typeof DashSiteCreateIndexRoute
  '/dash/site/$siteId/edit': typeof DashSiteSiteIdEditRoute
  '/dash/site/$siteId/host': typeof DashSiteSiteIdHostRouteRouteWithChildren
  '/dash/site/$siteId/host/': typeof DashSiteSiteIdHostIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/envs'
    | '/envs/'
    | '/dash/site'
    | '/dash/workflows'
    | '/dash/site/'
    | '/dash/workflows/'
    | '/dash/site/$siteId'
    | '/dash/workflows/$workflowId'
    | '/dash/site/$siteId/'
    | '/dash/site/create'
    | '/dash/site/$siteId/edit'
    | '/dash/site/$siteId/host'
    | '/dash/site/$siteId/host/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/envs'
    | '/dash/site'
    | '/dash/workflows'
    | '/dash/workflows/$workflowId'
    | '/dash/site/$siteId'
    | '/dash/site/create'
    | '/dash/site/$siteId/edit'
    | '/dash/site/$siteId/host'
  id:
    | '__root__'
    | '/'
    | '/envs'
    | '/envs/'
    | '/dash/site'
    | '/dash/workflows'
    | '/dash/site/'
    | '/dash/workflows/'
    | '/dash/site/$siteId'
    | '/dash/workflows/$workflowId'
    | '/dash/site/$siteId/'
    | '/dash/site/create/'
    | '/dash/site/$siteId/edit'
    | '/dash/site/$siteId/host'
    | '/dash/site/$siteId/host/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EnvsRouteLazyRoute: typeof EnvsRouteLazyRouteWithChildren
  DashSiteRouteLazyRoute: typeof DashSiteRouteLazyRouteWithChildren
  DashWorkflowsRouteLazyRoute: typeof DashWorkflowsRouteLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EnvsRouteLazyRoute: EnvsRouteLazyRouteWithChildren,
  DashSiteRouteLazyRoute: DashSiteRouteLazyRouteWithChildren,
  DashWorkflowsRouteLazyRoute: DashWorkflowsRouteLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/envs",
        "/dash/site",
        "/dash/workflows"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/envs": {
      "filePath": "~envs/~route.lazy.tsx",
      "children": [
        "/envs/"
      ]
    },
    "/envs/": {
      "filePath": "~envs/~index.lazy.tsx",
      "parent": "/envs"
    },
    "/dash/site": {
      "filePath": "~dash/~site/~route.lazy.tsx",
      "children": [
        "/dash/site/",
        "/dash/site/$siteId",
        "/dash/site/create/"
      ]
    },
    "/dash/workflows": {
      "filePath": "~dash/~workflows/~route.lazy.tsx",
      "children": [
        "/dash/workflows/",
        "/dash/workflows/$workflowId"
      ]
    },
    "/dash/site/": {
      "filePath": "~dash/~site/~index.tsx",
      "parent": "/dash/site"
    },
    "/dash/workflows/": {
      "filePath": "~dash/~workflows/~index.tsx",
      "parent": "/dash/workflows"
    },
    "/dash/site/$siteId": {
      "filePath": "~dash/~site/~$siteId/~route.tsx",
      "parent": "/dash/site",
      "children": [
        "/dash/site/$siteId/",
        "/dash/site/$siteId/edit",
        "/dash/site/$siteId/host"
      ]
    },
    "/dash/workflows/$workflowId": {
      "filePath": "~dash/~workflows/~$workflowId.lazy.tsx",
      "parent": "/dash/workflows"
    },
    "/dash/site/$siteId/": {
      "filePath": "~dash/~site/~$siteId/~index.tsx",
      "parent": "/dash/site/$siteId"
    },
    "/dash/site/create/": {
      "filePath": "~dash/~site/~create/~index.tsx",
      "parent": "/dash/site"
    },
    "/dash/site/$siteId/edit": {
      "filePath": "~dash/~site/~$siteId/~edit.tsx",
      "parent": "/dash/site/$siteId"
    },
    "/dash/site/$siteId/host": {
      "filePath": "~dash/~site/~$siteId/~host/~route.tsx",
      "parent": "/dash/site/$siteId",
      "children": [
        "/dash/site/$siteId/host/"
      ]
    },
    "/dash/site/$siteId/host/": {
      "filePath": "~dash/~site/~$siteId/~host/~index.tsx",
      "parent": "/dash/site/$siteId/host"
    }
  }
}
ROUTE_MANIFEST_END */
