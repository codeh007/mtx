/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DashWorkflowsRouteImport } from './routes/dash/workflows/route'
import { Route as DashSiteRouteImport } from './routes/dash/site/route'
import { Route as DashSiteSiteIdRouteImport } from './routes/dash/site/$siteId/route'
import { Route as DashSitePostCreateImport } from './routes/dash/site/post/create'
import { Route as DashSiteSiteIdCreateRouteImport } from './routes/dash/site/$siteId/create/route'

// Create Virtual Routes

const PostsIndexLazyImport = createFileRoute('/posts/')()
const DashIndexLazyImport = createFileRoute('/dash/')()
const DashWorkflowsWorkflowIdLazyImport = createFileRoute(
  '/dash/workflows/$workflowId',
)()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIndexLazyRoute = PostsIndexLazyImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/posts/index.lazy').then((d) => d.Route))

const DashIndexLazyRoute = DashIndexLazyImport.update({
  id: '/dash/',
  path: '/dash/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dash/index.lazy').then((d) => d.Route))

const DashWorkflowsRouteRoute = DashWorkflowsRouteImport.update({
  id: '/dash/workflows',
  path: '/dash/workflows',
  getParentRoute: () => rootRoute,
} as any)

const DashSiteRouteRoute = DashSiteRouteImport.update({
  id: '/dash/site',
  path: '/dash/site',
  getParentRoute: () => rootRoute,
} as any)

const DashWorkflowsWorkflowIdLazyRoute =
  DashWorkflowsWorkflowIdLazyImport.update({
    id: '/$workflowId',
    path: '/$workflowId',
    getParentRoute: () => DashWorkflowsRouteRoute,
  } as any).lazy(() =>
    import('./routes/dash/workflows/$workflowId.lazy').then((d) => d.Route),
  )

const DashSiteSiteIdRouteRoute = DashSiteSiteIdRouteImport.update({
  id: '/$siteId',
  path: '/$siteId',
  getParentRoute: () => DashSiteRouteRoute,
} as any)

const DashSitePostCreateRoute = DashSitePostCreateImport.update({
  id: '/post/create',
  path: '/post/create',
  getParentRoute: () => DashSiteRouteRoute,
} as any)

const DashSiteSiteIdCreateRouteRoute = DashSiteSiteIdCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => DashSiteSiteIdRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dash/site': {
      id: '/dash/site'
      path: '/dash/site'
      fullPath: '/dash/site'
      preLoaderRoute: typeof DashSiteRouteImport
      parentRoute: typeof rootRoute
    }
    '/dash/workflows': {
      id: '/dash/workflows'
      path: '/dash/workflows'
      fullPath: '/dash/workflows'
      preLoaderRoute: typeof DashWorkflowsRouteImport
      parentRoute: typeof rootRoute
    }
    '/dash/': {
      id: '/dash/'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dash/site/$siteId': {
      id: '/dash/site/$siteId'
      path: '/$siteId'
      fullPath: '/dash/site/$siteId'
      preLoaderRoute: typeof DashSiteSiteIdRouteImport
      parentRoute: typeof DashSiteRouteImport
    }
    '/dash/workflows/$workflowId': {
      id: '/dash/workflows/$workflowId'
      path: '/$workflowId'
      fullPath: '/dash/workflows/$workflowId'
      preLoaderRoute: typeof DashWorkflowsWorkflowIdLazyImport
      parentRoute: typeof DashWorkflowsRouteImport
    }
    '/dash/site/$siteId/create': {
      id: '/dash/site/$siteId/create'
      path: '/create'
      fullPath: '/dash/site/$siteId/create'
      preLoaderRoute: typeof DashSiteSiteIdCreateRouteImport
      parentRoute: typeof DashSiteSiteIdRouteImport
    }
    '/dash/site/post/create': {
      id: '/dash/site/post/create'
      path: '/post/create'
      fullPath: '/dash/site/post/create'
      preLoaderRoute: typeof DashSitePostCreateImport
      parentRoute: typeof DashSiteRouteImport
    }
  }
}

// Create and export the route tree

interface DashSiteSiteIdRouteRouteChildren {
  DashSiteSiteIdCreateRouteRoute: typeof DashSiteSiteIdCreateRouteRoute
}

const DashSiteSiteIdRouteRouteChildren: DashSiteSiteIdRouteRouteChildren = {
  DashSiteSiteIdCreateRouteRoute: DashSiteSiteIdCreateRouteRoute,
}

const DashSiteSiteIdRouteRouteWithChildren =
  DashSiteSiteIdRouteRoute._addFileChildren(DashSiteSiteIdRouteRouteChildren)

interface DashSiteRouteRouteChildren {
  DashSiteSiteIdRouteRoute: typeof DashSiteSiteIdRouteRouteWithChildren
  DashSitePostCreateRoute: typeof DashSitePostCreateRoute
}

const DashSiteRouteRouteChildren: DashSiteRouteRouteChildren = {
  DashSiteSiteIdRouteRoute: DashSiteSiteIdRouteRouteWithChildren,
  DashSitePostCreateRoute: DashSitePostCreateRoute,
}

const DashSiteRouteRouteWithChildren = DashSiteRouteRoute._addFileChildren(
  DashSiteRouteRouteChildren,
)

interface DashWorkflowsRouteRouteChildren {
  DashWorkflowsWorkflowIdLazyRoute: typeof DashWorkflowsWorkflowIdLazyRoute
}

const DashWorkflowsRouteRouteChildren: DashWorkflowsRouteRouteChildren = {
  DashWorkflowsWorkflowIdLazyRoute: DashWorkflowsWorkflowIdLazyRoute,
}

const DashWorkflowsRouteRouteWithChildren =
  DashWorkflowsRouteRoute._addFileChildren(DashWorkflowsRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dash/site': typeof DashSiteRouteRouteWithChildren
  '/dash/workflows': typeof DashWorkflowsRouteRouteWithChildren
  '/dash': typeof DashIndexLazyRoute
  '/posts': typeof PostsIndexLazyRoute
  '/dash/site/$siteId': typeof DashSiteSiteIdRouteRouteWithChildren
  '/dash/workflows/$workflowId': typeof DashWorkflowsWorkflowIdLazyRoute
  '/dash/site/$siteId/create': typeof DashSiteSiteIdCreateRouteRoute
  '/dash/site/post/create': typeof DashSitePostCreateRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dash/site': typeof DashSiteRouteRouteWithChildren
  '/dash/workflows': typeof DashWorkflowsRouteRouteWithChildren
  '/dash': typeof DashIndexLazyRoute
  '/posts': typeof PostsIndexLazyRoute
  '/dash/site/$siteId': typeof DashSiteSiteIdRouteRouteWithChildren
  '/dash/workflows/$workflowId': typeof DashWorkflowsWorkflowIdLazyRoute
  '/dash/site/$siteId/create': typeof DashSiteSiteIdCreateRouteRoute
  '/dash/site/post/create': typeof DashSitePostCreateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dash/site': typeof DashSiteRouteRouteWithChildren
  '/dash/workflows': typeof DashWorkflowsRouteRouteWithChildren
  '/dash/': typeof DashIndexLazyRoute
  '/posts/': typeof PostsIndexLazyRoute
  '/dash/site/$siteId': typeof DashSiteSiteIdRouteRouteWithChildren
  '/dash/workflows/$workflowId': typeof DashWorkflowsWorkflowIdLazyRoute
  '/dash/site/$siteId/create': typeof DashSiteSiteIdCreateRouteRoute
  '/dash/site/post/create': typeof DashSitePostCreateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dash/site'
    | '/dash/workflows'
    | '/dash'
    | '/posts'
    | '/dash/site/$siteId'
    | '/dash/workflows/$workflowId'
    | '/dash/site/$siteId/create'
    | '/dash/site/post/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dash/site'
    | '/dash/workflows'
    | '/dash'
    | '/posts'
    | '/dash/site/$siteId'
    | '/dash/workflows/$workflowId'
    | '/dash/site/$siteId/create'
    | '/dash/site/post/create'
  id:
    | '__root__'
    | '/'
    | '/dash/site'
    | '/dash/workflows'
    | '/dash/'
    | '/posts/'
    | '/dash/site/$siteId'
    | '/dash/workflows/$workflowId'
    | '/dash/site/$siteId/create'
    | '/dash/site/post/create'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashSiteRouteRoute: typeof DashSiteRouteRouteWithChildren
  DashWorkflowsRouteRoute: typeof DashWorkflowsRouteRouteWithChildren
  DashIndexLazyRoute: typeof DashIndexLazyRoute
  PostsIndexLazyRoute: typeof PostsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashSiteRouteRoute: DashSiteRouteRouteWithChildren,
  DashWorkflowsRouteRoute: DashWorkflowsRouteRouteWithChildren,
  DashIndexLazyRoute: DashIndexLazyRoute,
  PostsIndexLazyRoute: PostsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dash/site",
        "/dash/workflows",
        "/dash/",
        "/posts/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dash/site": {
      "filePath": "dash/site/route.tsx",
      "children": [
        "/dash/site/$siteId",
        "/dash/site/post/create"
      ]
    },
    "/dash/workflows": {
      "filePath": "dash/workflows/route.tsx",
      "children": [
        "/dash/workflows/$workflowId"
      ]
    },
    "/dash/": {
      "filePath": "dash/index.lazy.tsx"
    },
    "/posts/": {
      "filePath": "posts/index.lazy.tsx"
    },
    "/dash/site/$siteId": {
      "filePath": "dash/site/$siteId/route.tsx",
      "parent": "/dash/site",
      "children": [
        "/dash/site/$siteId/create"
      ]
    },
    "/dash/workflows/$workflowId": {
      "filePath": "dash/workflows/$workflowId.lazy.tsx",
      "parent": "/dash/workflows"
    },
    "/dash/site/$siteId/create": {
      "filePath": "dash/site/$siteId/create/route.tsx",
      "parent": "/dash/site/$siteId"
    },
    "/dash/site/post/create": {
      "filePath": "dash/site/post/create.tsx",
      "parent": "/dash/site"
    }
  }
}
ROUTE_MANIFEST_END */
