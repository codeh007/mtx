/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutsrootImport } from './routes/layouts/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WorkflowsIndexImport } from './routes/workflows/index'
import { Route as WorkflowsLayoutImport } from './routes/workflows/_layout'
import { Route as DashSiteRouteImport } from './routes/dash/site/route'
import { Route as LayoutsLayout2LayoutBImport } from './routes/layouts/_layout-2/layout-b'
import { Route as LayoutsLayout2LayoutAImport } from './routes/layouts/_layout-2/layout-a'
import { Route as DashSiteSiteIdImport } from './routes/dash/site/$siteId'
import { Route as DashSiteCreateRouteImport } from './routes/dash/site/create/route'

// Create Virtual Routes

const WorkflowsImport = createFileRoute('/workflows')()
const LayoutsImport = createFileRoute('/layouts')()
const PostsIndexLazyImport = createFileRoute('/posts/')()
const DashIndexLazyImport = createFileRoute('/dash/')()
const WorkflowsWorkflowIdLazyImport = createFileRoute(
  '/workflows/$workflowId',
)()
const DashSiteIndexLazyImport = createFileRoute('/dash/site/')()

// Create/Update Routes

const LayoutsrootRoute = LayoutsrootImport.update({
  id: '/__root',
  getParentRoute: () => LayoutsRoute,
} as any)

const WorkflowsRoute = WorkflowsImport.update({
  id: '/workflows',
  path: '/workflows',
  getParentRoute: () => rootRoute,
} as any)

const LayoutsRoute = LayoutsImport.update({
  id: '/layouts',
  path: '/layouts',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIndexLazyRoute = PostsIndexLazyImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/posts/index.lazy').then((d) => d.Route))

const DashIndexLazyRoute = DashIndexLazyImport.update({
  id: '/dash/',
  path: '/dash/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dash/index.lazy').then((d) => d.Route))

const WorkflowsIndexRoute = WorkflowsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WorkflowsRoute,
} as any)

const WorkflowsWorkflowIdLazyRoute = WorkflowsWorkflowIdLazyImport.update({
  id: '/$workflowId',
  path: '/$workflowId',
  getParentRoute: () => WorkflowsRoute,
} as any).lazy(() =>
  import('./routes/workflows/$workflowId.lazy').then((d) => d.Route),
)

const WorkflowsLayoutRoute = WorkflowsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => WorkflowsRoute,
} as any)

const DashSiteRouteRoute = DashSiteRouteImport.update({
  id: '/dash/site',
  path: '/dash/site',
  getParentRoute: () => rootRoute,
} as any)

const DashSiteIndexLazyRoute = DashSiteIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashSiteRouteRoute,
} as any).lazy(() =>
  import('./routes/dash/site/index.lazy').then((d) => d.Route),
)

const LayoutsLayout2LayoutBRoute = LayoutsLayout2LayoutBImport.update({
  id: '/_layout-2/layout-b',
  path: '/layout-b',
  getParentRoute: () => LayoutsRoute,
} as any)

const LayoutsLayout2LayoutARoute = LayoutsLayout2LayoutAImport.update({
  id: '/_layout-2/layout-a',
  path: '/layout-a',
  getParentRoute: () => LayoutsRoute,
} as any)

const DashSiteSiteIdRoute = DashSiteSiteIdImport.update({
  id: '/$siteId',
  path: '/$siteId',
  getParentRoute: () => DashSiteRouteRoute,
} as any)

const DashSiteCreateRouteRoute = DashSiteCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => DashSiteRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dash/site': {
      id: '/dash/site'
      path: '/dash/site'
      fullPath: '/dash/site'
      preLoaderRoute: typeof DashSiteRouteImport
      parentRoute: typeof rootRoute
    }
    '/layouts': {
      id: '/layouts'
      path: '/layouts'
      fullPath: '/layouts'
      preLoaderRoute: typeof LayoutsImport
      parentRoute: typeof rootRoute
    }
    '/layouts/__root': {
      id: '/layouts/__root'
      path: '/layouts'
      fullPath: '/layouts'
      preLoaderRoute: typeof LayoutsrootImport
      parentRoute: typeof LayoutsRoute
    }
    '/workflows': {
      id: '/workflows'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsImport
      parentRoute: typeof rootRoute
    }
    '/workflows/_layout': {
      id: '/workflows/_layout'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsLayoutImport
      parentRoute: typeof WorkflowsRoute
    }
    '/workflows/$workflowId': {
      id: '/workflows/$workflowId'
      path: '/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof WorkflowsWorkflowIdLazyImport
      parentRoute: typeof WorkflowsImport
    }
    '/workflows/': {
      id: '/workflows/'
      path: '/'
      fullPath: '/workflows/'
      preLoaderRoute: typeof WorkflowsIndexImport
      parentRoute: typeof WorkflowsImport
    }
    '/dash/': {
      id: '/dash/'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dash/site/create': {
      id: '/dash/site/create'
      path: '/create'
      fullPath: '/dash/site/create'
      preLoaderRoute: typeof DashSiteCreateRouteImport
      parentRoute: typeof DashSiteRouteImport
    }
    '/dash/site/$siteId': {
      id: '/dash/site/$siteId'
      path: '/$siteId'
      fullPath: '/dash/site/$siteId'
      preLoaderRoute: typeof DashSiteSiteIdImport
      parentRoute: typeof DashSiteRouteImport
    }
    '/layouts/_layout-2/layout-a': {
      id: '/layouts/_layout-2/layout-a'
      path: '/layout-a'
      fullPath: '/layouts/layout-a'
      preLoaderRoute: typeof LayoutsLayout2LayoutAImport
      parentRoute: typeof LayoutsImport
    }
    '/layouts/_layout-2/layout-b': {
      id: '/layouts/_layout-2/layout-b'
      path: '/layout-b'
      fullPath: '/layouts/layout-b'
      preLoaderRoute: typeof LayoutsLayout2LayoutBImport
      parentRoute: typeof LayoutsImport
    }
    '/dash/site/': {
      id: '/dash/site/'
      path: '/'
      fullPath: '/dash/site/'
      preLoaderRoute: typeof DashSiteIndexLazyImport
      parentRoute: typeof DashSiteRouteImport
    }
  }
}

// Create and export the route tree

interface DashSiteRouteRouteChildren {
  DashSiteCreateRouteRoute: typeof DashSiteCreateRouteRoute
  DashSiteSiteIdRoute: typeof DashSiteSiteIdRoute
  DashSiteIndexLazyRoute: typeof DashSiteIndexLazyRoute
}

const DashSiteRouteRouteChildren: DashSiteRouteRouteChildren = {
  DashSiteCreateRouteRoute: DashSiteCreateRouteRoute,
  DashSiteSiteIdRoute: DashSiteSiteIdRoute,
  DashSiteIndexLazyRoute: DashSiteIndexLazyRoute,
}

const DashSiteRouteRouteWithChildren = DashSiteRouteRoute._addFileChildren(
  DashSiteRouteRouteChildren,
)

interface LayoutsRouteChildren {
  LayoutsrootRoute: typeof LayoutsrootRoute
  LayoutsLayout2LayoutARoute: typeof LayoutsLayout2LayoutARoute
  LayoutsLayout2LayoutBRoute: typeof LayoutsLayout2LayoutBRoute
}

const LayoutsRouteChildren: LayoutsRouteChildren = {
  LayoutsrootRoute: LayoutsrootRoute,
  LayoutsLayout2LayoutARoute: LayoutsLayout2LayoutARoute,
  LayoutsLayout2LayoutBRoute: LayoutsLayout2LayoutBRoute,
}

const LayoutsRouteWithChildren =
  LayoutsRoute._addFileChildren(LayoutsRouteChildren)

interface WorkflowsRouteChildren {
  WorkflowsLayoutRoute: typeof WorkflowsLayoutRoute
  WorkflowsWorkflowIdLazyRoute: typeof WorkflowsWorkflowIdLazyRoute
  WorkflowsIndexRoute: typeof WorkflowsIndexRoute
}

const WorkflowsRouteChildren: WorkflowsRouteChildren = {
  WorkflowsLayoutRoute: WorkflowsLayoutRoute,
  WorkflowsWorkflowIdLazyRoute: WorkflowsWorkflowIdLazyRoute,
  WorkflowsIndexRoute: WorkflowsIndexRoute,
}

const WorkflowsRouteWithChildren = WorkflowsRoute._addFileChildren(
  WorkflowsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dash/site': typeof DashSiteRouteRouteWithChildren
  '/layouts': typeof LayoutsrootRoute
  '/workflows': typeof WorkflowsLayoutRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdLazyRoute
  '/workflows/': typeof WorkflowsIndexRoute
  '/dash': typeof DashIndexLazyRoute
  '/posts': typeof PostsIndexLazyRoute
  '/dash/site/create': typeof DashSiteCreateRouteRoute
  '/dash/site/$siteId': typeof DashSiteSiteIdRoute
  '/layouts/layout-a': typeof LayoutsLayout2LayoutARoute
  '/layouts/layout-b': typeof LayoutsLayout2LayoutBRoute
  '/dash/site/': typeof DashSiteIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/layouts': typeof LayoutsrootRoute
  '/workflows': typeof WorkflowsIndexRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdLazyRoute
  '/dash': typeof DashIndexLazyRoute
  '/posts': typeof PostsIndexLazyRoute
  '/dash/site/create': typeof DashSiteCreateRouteRoute
  '/dash/site/$siteId': typeof DashSiteSiteIdRoute
  '/layouts/layout-a': typeof LayoutsLayout2LayoutARoute
  '/layouts/layout-b': typeof LayoutsLayout2LayoutBRoute
  '/dash/site': typeof DashSiteIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dash/site': typeof DashSiteRouteRouteWithChildren
  '/layouts': typeof LayoutsRouteWithChildren
  '/layouts/__root': typeof LayoutsrootRoute
  '/workflows': typeof WorkflowsRouteWithChildren
  '/workflows/_layout': typeof WorkflowsLayoutRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdLazyRoute
  '/workflows/': typeof WorkflowsIndexRoute
  '/dash/': typeof DashIndexLazyRoute
  '/posts/': typeof PostsIndexLazyRoute
  '/dash/site/create': typeof DashSiteCreateRouteRoute
  '/dash/site/$siteId': typeof DashSiteSiteIdRoute
  '/layouts/_layout-2/layout-a': typeof LayoutsLayout2LayoutARoute
  '/layouts/_layout-2/layout-b': typeof LayoutsLayout2LayoutBRoute
  '/dash/site/': typeof DashSiteIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dash/site'
    | '/layouts'
    | '/workflows'
    | '/workflows/$workflowId'
    | '/workflows/'
    | '/dash'
    | '/posts'
    | '/dash/site/create'
    | '/dash/site/$siteId'
    | '/layouts/layout-a'
    | '/layouts/layout-b'
    | '/dash/site/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/layouts'
    | '/workflows'
    | '/workflows/$workflowId'
    | '/dash'
    | '/posts'
    | '/dash/site/create'
    | '/dash/site/$siteId'
    | '/layouts/layout-a'
    | '/layouts/layout-b'
    | '/dash/site'
  id:
    | '__root__'
    | '/'
    | '/dash/site'
    | '/layouts'
    | '/layouts/__root'
    | '/workflows'
    | '/workflows/_layout'
    | '/workflows/$workflowId'
    | '/workflows/'
    | '/dash/'
    | '/posts/'
    | '/dash/site/create'
    | '/dash/site/$siteId'
    | '/layouts/_layout-2/layout-a'
    | '/layouts/_layout-2/layout-b'
    | '/dash/site/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashSiteRouteRoute: typeof DashSiteRouteRouteWithChildren
  LayoutsRoute: typeof LayoutsRouteWithChildren
  WorkflowsRoute: typeof WorkflowsRouteWithChildren
  DashIndexLazyRoute: typeof DashIndexLazyRoute
  PostsIndexLazyRoute: typeof PostsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashSiteRouteRoute: DashSiteRouteRouteWithChildren,
  LayoutsRoute: LayoutsRouteWithChildren,
  WorkflowsRoute: WorkflowsRouteWithChildren,
  DashIndexLazyRoute: DashIndexLazyRoute,
  PostsIndexLazyRoute: PostsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dash/site",
        "/layouts",
        "/workflows",
        "/dash/",
        "/posts/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dash/site": {
      "filePath": "dash/site/route.tsx",
      "children": [
        "/dash/site/create",
        "/dash/site/$siteId",
        "/dash/site/"
      ]
    },
    "/layouts": {
      "filePath": "layouts",
      "children": [
        "/layouts/__root",
        "/layouts/_layout-2/layout-a",
        "/layouts/_layout-2/layout-b"
      ]
    },
    "/layouts/__root": {
      "filePath": "layouts/__root.tsx",
      "parent": "/layouts"
    },
    "/workflows": {
      "filePath": "workflows",
      "children": [
        "/workflows/_layout",
        "/workflows/$workflowId",
        "/workflows/"
      ]
    },
    "/workflows/_layout": {
      "filePath": "workflows/_layout.tsx",
      "parent": "/workflows"
    },
    "/workflows/$workflowId": {
      "filePath": "workflows/$workflowId.lazy.tsx",
      "parent": "/workflows"
    },
    "/workflows/": {
      "filePath": "workflows/index.tsx",
      "parent": "/workflows"
    },
    "/dash/": {
      "filePath": "dash/index.lazy.tsx"
    },
    "/posts/": {
      "filePath": "posts/index.lazy.tsx"
    },
    "/dash/site/create": {
      "filePath": "dash/site/create/route.tsx",
      "parent": "/dash/site"
    },
    "/dash/site/$siteId": {
      "filePath": "dash/site/$siteId.tsx",
      "parent": "/dash/site"
    },
    "/layouts/_layout-2/layout-a": {
      "filePath": "layouts/_layout-2/layout-a.tsx",
      "parent": "/layouts"
    },
    "/layouts/_layout-2/layout-b": {
      "filePath": "layouts/_layout-2/layout-b.tsx",
      "parent": "/layouts"
    },
    "/dash/site/": {
      "filePath": "dash/site/index.lazy.tsx",
      "parent": "/dash/site"
    }
  }
}
ROUTE_MANIFEST_END */
