"use client";

import { useQuery } from "@tanstack/react-query";
import { AnimatePresence, motion } from "framer-motion";
import { agentTaskItemsOptions } from "mtmaiapi/@tanstack/react-query.gen";
import { ThemeToggle } from "../skyvern/components/ThemeSwitch";
import { SidebarActions } from "./sidebar-actions";
import { SidebarItem } from "./sidebar-item";
interface SidebarListProps {
  userId?: string;
  children?: React.ReactNode;
}

export function SidebarList({ userId }: SidebarListProps) {
  const agentTaskItemsQuery = useQuery({ ...agentTaskItemsOptions() });

  return (
    <div className="flex flex-1 flex-col overflow-hidden">
      <div className="flex-1 overflow-auto">
        {agentTaskItemsQuery.data ? (
          <div className="space-y-2 px-2">
            {/* <SidebarItems chats={conversationsQuery.data.data} /> */}
            <AnimatePresence>
              {agentTaskItemsQuery.data?.data?.map(
                (chat, index) =>
                  chat && (
                    <motion.div
                      key={chat.id}
                      exit={{
                        opacity: 0,
                        height: 0,
                      }}
                    >
                      <SidebarItem index={index} item={chat}>
                        <SidebarActions
                          chat={chat}
                          // removeChat={removeChat}
                          // shareChat={shareChat}
                        />
                      </SidebarItem>
                    </motion.div>
                  ),
              )}
            </AnimatePresence>
          </div>
        ) : (
          <div className="p-8 text-center">
            <p className="text-sm text-muted-foreground">No chat history</p>
          </div>
        )}
      </div>
      <div className="flex items-center justify-between p-4">
        <ThemeToggle />
        {/* <ClearHistory clearChats={clearChats} isEnabled={chats?.length > 0} /> */}
      </div>
    </div>
  );
}
