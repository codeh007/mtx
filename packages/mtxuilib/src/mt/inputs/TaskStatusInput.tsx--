"use client";

import { TASK_STATUS, taskStatusSchema } from "mtxuilib/zod/taskStatus.z";
import { useMemo } from "react";
import { useFormContext } from "react-hook-form";
import type { InputProps } from "../../ui/input";
import { MtButton } from "../Button";

/**
 * 任务状态切换
 */
export const TaskStatusInput = (props: InputProps) => {
  const { name } = props;
  const form = useFormContext();
  const value2 = useMemo(() => {
    return taskStatusSchema.parse(form.getValues()[name!]);
  }, [form]);

  return (
    <div className="flex gap-1 border shadow-sm">
      {(value2 === TASK_STATUS.Init || value2 === TASK_STATUS.Paused) && (
        <MtButton
          onClick={() => {
            form.setValue(name!, TASK_STATUS.Padding);
          }}
        >
          启动
        </MtButton>
      )}
      {value2 === TASK_STATUS.Terminated && (
        <MtButton
          onClick={() => {
            // biome-ignore lint/style/noNonNullAssertion: <explanation>
            form.setValue(name!, TASK_STATUS.Padding);
          }}
        >
          重启
        </MtButton>
      )}
      {(value2 === TASK_STATUS.Padding || value2 === TASK_STATUS.Running) && (
        <>
          <MtButton
            onClick={() => {
              // biome-ignore lint/style/noNonNullAssertion: <explanation>
              form.setValue(name!, TASK_STATUS.Paused);
            }}
          >
            暂停
          </MtButton>

          <MtButton
            onClick={() => {
              form.setValue(name!, TASK_STATUS.Terminated);
            }}
          >
            终止
          </MtButton>
        </>
      )}
    </div>
  );
};
